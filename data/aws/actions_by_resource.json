{
  "account": {
    "account": [
      "account:DeleteAlternateContact",
      "account:DisableRegion",
      "account:EnableRegion",
      "account:GetAlternateContact",
      "account:GetContactInformation",
      "account:GetRegionOptStatus",
      "account:ListRegions",
      "account:PutAlternateContact",
      "account:PutContactInformation"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsaccountmanagement.html"
  },
  "activate": {
    "?": [
      "activate:CreateForm",
      "activate:GetAccountContact",
      "activate:GetContentInfo",
      "activate:GetCosts",
      "activate:GetCredits",
      "activate:GetMemberInfo",
      "activate:GetProgram",
      "activate:PutMemberInfo"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsactivate.html"
  },
  "a4b": {
    "?": [
      "a4b:ApproveSkill",
      "a4b:AssociateSkillWithUsers",
      "a4b:CreateAddressBook",
      "a4b:CreateBusinessReportSchedule",
      "a4b:CreateConferenceProvider",
      "a4b:CreateContact",
      "a4b:CreateGatewayGroup",
      "a4b:CreateNetworkProfile",
      "a4b:CreateProfile",
      "a4b:CreateSkillGroup",
      "a4b:GetConferencePreference",
      "a4b:GetInvitationConfiguration",
      "a4b:ListBusinessReportSchedules",
      "a4b:ListConferenceProviders",
      "a4b:ListGatewayGroups",
      "a4b:ListSkills",
      "a4b:ListSkillsStoreCategories",
      "a4b:ListSkillsStoreSkillsByCategory",
      "a4b:PutConferencePreference",
      "a4b:PutInvitationConfiguration",
      "a4b:RegisterAVSDevice",
      "a4b:RejectSkill",
      "a4b:ResolveRoom",
      "a4b:SearchAddressBooks",
      "a4b:SearchContacts",
      "a4b:SearchDevices",
      "a4b:SearchNetworkProfiles",
      "a4b:SearchProfiles",
      "a4b:SearchRooms",
      "a4b:SearchSkillGroups",
      "a4b:SearchUsers",
      "a4b:SendAnnouncement",
      "a4b:StartDeviceSync"
    ],
    "addressbook*": [
      "a4b:AssociateContactWithAddressBook",
      "a4b:DeleteAddressBook",
      "a4b:DisassociateContactFromAddressBook",
      "a4b:GetAddressBook",
      "a4b:UpdateAddressBook"
    ],
    "device*": [
      "a4b:AssociateDeviceWithNetworkProfile",
      "a4b:AssociateDeviceWithRoom",
      "a4b:DeleteDevice",
      "a4b:DeleteDeviceUsageData",
      "a4b:DisassociateDeviceFromRoom",
      "a4b:GetDevice",
      "a4b:ListDeviceEvents",
      "a4b:UpdateDevice"
    ],
    "room*": [
      "a4b:AssociateSkillGroupWithRoom",
      "a4b:DeleteRoom",
      "a4b:DeleteRoomSkillParameter",
      "a4b:DeleteSkillAuthorization",
      "a4b:DisassociateSkillGroupFromRoom",
      "a4b:ForgetSmartHomeAppliances",
      "a4b:GetRoom",
      "a4b:GetRoomSkillParameter",
      "a4b:ListSmartHomeAppliances",
      "a4b:PutRoomSkillParameter",
      "a4b:PutSkillAuthorization",
      "a4b:StartSmartHomeApplianceDiscovery",
      "a4b:UpdateRoom"
    ],
    "skillgroup*": [
      "a4b:AssociateSkillWithSkillGroup",
      "a4b:DeleteSkillGroup",
      "a4b:DisassociateSkillFromSkillGroup",
      "a4b:GetSkillGroup",
      "a4b:UpdateSkillGroup"
    ],
    "profile*": [
      "a4b:CreateRoom",
      "a4b:DeleteProfile",
      "a4b:GetProfile",
      "a4b:UpdateProfile"
    ],
    "user*": [
      "a4b:CreateUser",
      "a4b:DeleteUser",
      "a4b:DisassociateSkillFromUsers",
      "a4b:RevokeInvitation",
      "a4b:SendInvitation"
    ],
    "schedule*": [
      "a4b:DeleteBusinessReportSchedule",
      "a4b:UpdateBusinessReportSchedule"
    ],
    "conferenceprovider*": [
      "a4b:DeleteConferenceProvider",
      "a4b:GetConferenceProvider",
      "a4b:UpdateConferenceProvider"
    ],
    "contact*": [
      "a4b:DeleteContact",
      "a4b:GetContact",
      "a4b:UpdateContact"
    ],
    "gatewaygroup*": [
      "a4b:DeleteGatewayGroup",
      "a4b:GetGatewayGroup",
      "a4b:ListGateways",
      "a4b:UpdateGatewayGroup"
    ],
    "networkprofile*": [
      "a4b:DeleteNetworkProfile",
      "a4b:GetNetworkProfile",
      "a4b:UpdateNetworkProfile"
    ],
    "gateway*": [
      "a4b:GetGateway",
      "a4b:UpdateGateway"
    ],
    "device": [
      "a4b:ListTags",
      "a4b:TagResource",
      "a4b:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_alexaforbusiness.html"
  },
  "mediaimport": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonmediaimport.html"
  },
  "amplify": {
    "apps*": [
      "amplify:CreateApp",
      "amplify:CreateBackendEnvironment",
      "amplify:CreateBranch",
      "amplify:CreateDomainAssociation",
      "amplify:DeleteApp",
      "amplify:DeleteBackendEnvironment",
      "amplify:GenerateAccessLogs",
      "amplify:GetApp",
      "amplify:GetArtifactUrl",
      "amplify:GetBackendEnvironment",
      "amplify:ListArtifacts",
      "amplify:ListBackendEnvironments",
      "amplify:ListBranches",
      "amplify:ListDomainAssociations",
      "amplify:ListWebHooks",
      "amplify:UpdateApp"
    ],
    "branches*": [
      "amplify:CreateDeployment",
      "amplify:CreateWebHook",
      "amplify:DeleteBranch",
      "amplify:GetBranch",
      "amplify:ListJobs",
      "amplify:StartDeployment",
      "amplify:UpdateBranch"
    ],
    "domains*": [
      "amplify:DeleteDomainAssociation",
      "amplify:GetDomainAssociation",
      "amplify:UpdateDomainAssociation"
    ],
    "jobs*": [
      "amplify:DeleteJob",
      "amplify:GetJob",
      "amplify:StartJob",
      "amplify:StopJob"
    ],
    "webhooks*": [
      "amplify:DeleteWebHook",
      "amplify:GetWebHook",
      "amplify:UpdateWebHook"
    ],
    "?": [
      "amplify:ListApps"
    ],
    "apps": [
      "amplify:ListTagsForResource",
      "amplify:TagResource",
      "amplify:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsamplify.html"
  },
  "amplifybackend": {
    "backend*": [
      "amplifybackend:CloneBackend",
      "amplifybackend:CreateBackend",
      "amplifybackend:CreateBackendConfig",
      "amplifybackend:CreateBackendStorage",
      "amplifybackend:CreateToken",
      "amplifybackend:DeleteBackend",
      "amplifybackend:DeleteBackendStorage",
      "amplifybackend:DeleteToken",
      "amplifybackend:GetBackend",
      "amplifybackend:GetBackendJob",
      "amplifybackend:GetBackendStorage",
      "amplifybackend:GetToken",
      "amplifybackend:ImportBackendStorage",
      "amplifybackend:ListBackendJobs",
      "amplifybackend:RemoveAllBackends",
      "amplifybackend:RemoveBackendConfig",
      "amplifybackend:UpdateBackendConfig",
      "amplifybackend:UpdateBackendJob",
      "amplifybackend:UpdateBackendStorage"
    ],
    "api*": [
      "amplifybackend:CreateBackendAPI",
      "amplifybackend:DeleteBackendAPI",
      "amplifybackend:GenerateBackendAPIModels",
      "amplifybackend:GetBackendAPI",
      "amplifybackend:GetBackendAPIModels",
      "amplifybackend:UpdateBackendAPI"
    ],
    "auth*": [
      "amplifybackend:CreateBackendAuth",
      "amplifybackend:DeleteBackendAuth",
      "amplifybackend:GetBackendAuth",
      "amplifybackend:ImportBackendAuth",
      "amplifybackend:UpdateBackendAuth"
    ],
    "?": [
      "amplifybackend:ListS3Buckets"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsamplifyadmin.html"
  },
  "amplifyuibuilder": {
    "?": [
      "amplifyuibuilder:CreateComponent",
      "amplifyuibuilder:CreateForm",
      "amplifyuibuilder:CreateTheme",
      "amplifyuibuilder:ExportComponents",
      "amplifyuibuilder:ExportForms",
      "amplifyuibuilder:ExportThemes",
      "amplifyuibuilder:GetMetadata",
      "amplifyuibuilder:ListComponents",
      "amplifyuibuilder:ListForms",
      "amplifyuibuilder:ListThemes",
      "amplifyuibuilder:PutMetadataFlag",
      "amplifyuibuilder:ResetMetadataFlag"
    ],
    "ComponentResource*": [
      "amplifyuibuilder:DeleteComponent",
      "amplifyuibuilder:GetComponent",
      "amplifyuibuilder:UpdateComponent"
    ],
    "FormResource*": [
      "amplifyuibuilder:DeleteForm",
      "amplifyuibuilder:GetForm",
      "amplifyuibuilder:UpdateForm"
    ],
    "ThemeResource*": [
      "amplifyuibuilder:DeleteTheme",
      "amplifyuibuilder:GetTheme",
      "amplifyuibuilder:UpdateTheme"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsamplifyuibuilder.html"
  },
  "kafka-cluster": {
    "cluster*": [
      "kafka-cluster:AlterCluster",
      "kafka-cluster:AlterClusterDynamicConfiguration",
      "kafka-cluster:Connect",
      "kafka-cluster:DescribeCluster",
      "kafka-cluster:DescribeClusterDynamicConfiguration",
      "kafka-cluster:WriteDataIdempotently"
    ],
    "group*": [
      "kafka-cluster:AlterGroup",
      "kafka-cluster:DeleteGroup",
      "kafka-cluster:DescribeGroup"
    ],
    "topic*": [
      "kafka-cluster:AlterTopic",
      "kafka-cluster:AlterTopicDynamicConfiguration",
      "kafka-cluster:CreateTopic",
      "kafka-cluster:DeleteTopic",
      "kafka-cluster:DescribeTopic",
      "kafka-cluster:DescribeTopicDynamicConfiguration",
      "kafka-cluster:ReadData",
      "kafka-cluster:WriteData"
    ],
    "transactional-id*": [
      "kafka-cluster:AlterTransactionalId",
      "kafka-cluster:DescribeTransactionalId"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_apachekafkaapisforamazonmskclusters.html"
  },
  "execute-api": {
    "execute-api-general*": [
      "execute-api:InvalidateCache",
      "execute-api:Invoke",
      "execute-api:ManageConnections"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonapigateway.html"
  },
  "apigateway": {
    "AccessLogSettings": [
      "apigateway:DELETE",
      "apigateway:GET"
    ],
    "Api": [
      "apigateway:PATCH"
    ],
    "ApiMappings": [
      "apigateway:POST"
    ],
    "Apis": [
      "apigateway:PUT"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonapigatewaymanagementv2.html"
  },
  "appmesh": {
    "gatewayRoute*": [
      "appmesh:CreateGatewayRoute",
      "appmesh:DeleteGatewayRoute",
      "appmesh:DescribeGatewayRoute",
      "appmesh:UpdateGatewayRoute"
    ],
    "mesh*": [
      "appmesh:CreateMesh",
      "appmesh:DeleteMesh",
      "appmesh:DescribeMesh",
      "appmesh:ListVirtualGateways",
      "appmesh:ListVirtualNodes",
      "appmesh:ListVirtualRouters",
      "appmesh:ListVirtualServices",
      "appmesh:UpdateMesh"
    ],
    "route*": [
      "appmesh:CreateRoute",
      "appmesh:DeleteRoute",
      "appmesh:DescribeRoute",
      "appmesh:UpdateRoute"
    ],
    "virtualGateway*": [
      "appmesh:CreateVirtualGateway",
      "appmesh:DeleteVirtualGateway",
      "appmesh:DescribeVirtualGateway",
      "appmesh:ListGatewayRoutes",
      "appmesh:UpdateVirtualGateway"
    ],
    "virtualNode*": [
      "appmesh:CreateVirtualNode",
      "appmesh:DeleteVirtualNode",
      "appmesh:DescribeVirtualNode",
      "appmesh:UpdateVirtualNode"
    ],
    "virtualRouter*": [
      "appmesh:CreateVirtualRouter",
      "appmesh:DeleteVirtualRouter",
      "appmesh:DescribeVirtualRouter",
      "appmesh:ListRoutes",
      "appmesh:UpdateVirtualRouter"
    ],
    "virtualService*": [
      "appmesh:CreateVirtualService",
      "appmesh:DeleteVirtualService",
      "appmesh:DescribeVirtualService",
      "appmesh:UpdateVirtualService"
    ],
    "?": [
      "appmesh:ListMeshes"
    ],
    "gatewayRoute": [
      "appmesh:ListTagsForResource",
      "appmesh:TagResource",
      "appmesh:UntagResource"
    ],
    "virtualGateway": [
      "appmesh:StreamAggregatedResources"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsappmesh.html"
  },
  "appmesh-preview": {
    "gatewayRoute*": [
      "appmesh-preview:CreateGatewayRoute",
      "appmesh-preview:DeleteGatewayRoute",
      "appmesh-preview:DescribeGatewayRoute",
      "appmesh-preview:UpdateGatewayRoute"
    ],
    "mesh*": [
      "appmesh-preview:CreateMesh",
      "appmesh-preview:DeleteMesh",
      "appmesh-preview:DescribeMesh",
      "appmesh-preview:ListVirtualGateways",
      "appmesh-preview:ListVirtualNodes",
      "appmesh-preview:ListVirtualRouters",
      "appmesh-preview:ListVirtualServices",
      "appmesh-preview:UpdateMesh"
    ],
    "route*": [
      "appmesh-preview:CreateRoute",
      "appmesh-preview:DeleteRoute",
      "appmesh-preview:DescribeRoute",
      "appmesh-preview:UpdateRoute"
    ],
    "virtualGateway*": [
      "appmesh-preview:CreateVirtualGateway",
      "appmesh-preview:DeleteVirtualGateway",
      "appmesh-preview:DescribeVirtualGateway",
      "appmesh-preview:ListGatewayRoutes",
      "appmesh-preview:UpdateVirtualGateway"
    ],
    "virtualNode*": [
      "appmesh-preview:CreateVirtualNode",
      "appmesh-preview:DeleteVirtualNode",
      "appmesh-preview:DescribeVirtualNode",
      "appmesh-preview:UpdateVirtualNode"
    ],
    "virtualRouter*": [
      "appmesh-preview:CreateVirtualRouter",
      "appmesh-preview:DeleteVirtualRouter",
      "appmesh-preview:DescribeVirtualRouter",
      "appmesh-preview:ListRoutes",
      "appmesh-preview:UpdateVirtualRouter"
    ],
    "virtualService*": [
      "appmesh-preview:CreateVirtualService",
      "appmesh-preview:DeleteVirtualService",
      "appmesh-preview:DescribeVirtualService",
      "appmesh-preview:UpdateVirtualService"
    ],
    "?": [
      "appmesh-preview:ListMeshes"
    ],
    "virtualGateway": [
      "appmesh-preview:StreamAggregatedResources"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsappmeshpreview.html"
  },
  "apprunner": {
    "service*": [
      "apprunner:AssociateCustomDomain",
      "apprunner:CreateService",
      "apprunner:DeleteService",
      "apprunner:DescribeCustomDomains",
      "apprunner:DescribeOperation",
      "apprunner:DescribeService",
      "apprunner:DisassociateCustomDomain",
      "apprunner:ListOperations",
      "apprunner:PauseService",
      "apprunner:ResumeService",
      "apprunner:StartDeployment",
      "apprunner:UpdateService"
    ],
    "autoscalingconfiguration*": [
      "apprunner:CreateAutoScalingConfiguration",
      "apprunner:DeleteAutoScalingConfiguration",
      "apprunner:DescribeAutoScalingConfiguration"
    ],
    "connection*": [
      "apprunner:CreateConnection",
      "apprunner:DeleteConnection"
    ],
    "observabilityconfiguration*": [
      "apprunner:CreateObservabilityConfiguration",
      "apprunner:DeleteObservabilityConfiguration",
      "apprunner:DescribeObservabilityConfiguration"
    ],
    "vpcconnector*": [
      "apprunner:CreateVpcConnector",
      "apprunner:DeleteVpcConnector",
      "apprunner:DescribeVpcConnector"
    ],
    "vpcingressconnection*": [
      "apprunner:CreateVpcIngressConnection",
      "apprunner:DeleteVpcIngressConnection",
      "apprunner:DescribeVpcIngressConnection",
      "apprunner:UpdateVpcIngressConnection"
    ],
    "?": [
      "apprunner:ListAutoScalingConfigurations",
      "apprunner:ListConnections",
      "apprunner:ListObservabilityConfigurations",
      "apprunner:ListServices",
      "apprunner:ListVpcConnectors",
      "apprunner:ListVpcIngressConnections"
    ],
    "autoscalingconfiguration": [
      "apprunner:ListTagsForResource",
      "apprunner:TagResource",
      "apprunner:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsapprunner.html"
  },
  "a2c": {
    "?": [
      "a2c:GetContainerizationJobDetails",
      "a2c:GetDeploymentJobDetails",
      "a2c:StartContainerizationJob",
      "a2c:StartDeploymentJob"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsapp2container.html"
  },
  "appconfig": {
    "?": [
      "appconfig:CreateApplication",
      "appconfig:CreateDeploymentStrategy",
      "appconfig:CreateExtension",
      "appconfig:CreateExtensionAssociation",
      "appconfig:ListApplications",
      "appconfig:ListDeploymentStrategies",
      "appconfig:ListExtensionAssociations",
      "appconfig:ListExtensions"
    ],
    "application*": [
      "appconfig:CreateConfigurationProfile",
      "appconfig:CreateEnvironment",
      "appconfig:CreateHostedConfigurationVersion",
      "appconfig:DeleteApplication",
      "appconfig:DeleteConfigurationProfile",
      "appconfig:DeleteEnvironment",
      "appconfig:DeleteHostedConfigurationVersion",
      "appconfig:GetApplication",
      "appconfig:GetConfiguration",
      "appconfig:GetConfigurationProfile",
      "appconfig:GetDeployment",
      "appconfig:GetEnvironment",
      "appconfig:GetHostedConfigurationVersion",
      "appconfig:ListConfigurationProfiles",
      "appconfig:ListDeployments",
      "appconfig:ListEnvironments",
      "appconfig:ListHostedConfigurationVersions",
      "appconfig:StartDeployment",
      "appconfig:StopDeployment",
      "appconfig:UpdateApplication",
      "appconfig:UpdateConfigurationProfile",
      "appconfig:UpdateEnvironment",
      "appconfig:ValidateConfiguration"
    ],
    "deploymentstrategy*": [
      "appconfig:DeleteDeploymentStrategy",
      "appconfig:GetDeploymentStrategy",
      "appconfig:UpdateDeploymentStrategy"
    ],
    "extension*": [
      "appconfig:DeleteExtension",
      "appconfig:GetExtension",
      "appconfig:UpdateExtension"
    ],
    "extensionassociation*": [
      "appconfig:DeleteExtensionAssociation",
      "appconfig:GetExtensionAssociation",
      "appconfig:UpdateExtensionAssociation"
    ],
    "configuration*": [
      "appconfig:GetLatestConfiguration",
      "appconfig:StartConfigurationSession"
    ],
    "application": [
      "appconfig:ListTagsForResource",
      "appconfig:TagResource",
      "appconfig:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsappconfig.html"
  },
  "appflow": {
    "?": [
      "appflow:CreateConnectorProfile",
      "appflow:CreateFlow",
      "appflow:DescribeConnectorProfiles",
      "appflow:DescribeConnectors",
      "appflow:RegisterConnector"
    ],
    "connectorprofile*": [
      "appflow:DeleteConnectorProfile",
      "appflow:DescribeConnectorEntity",
      "appflow:ListConnectorEntities",
      "appflow:UpdateConnectorProfile"
    ],
    "flow*": [
      "appflow:DeleteFlow",
      "appflow:DescribeFlow",
      "appflow:DescribeFlowExecutionRecords",
      "appflow:ListFlows",
      "appflow:ListTagsForResource",
      "appflow:StartFlow",
      "appflow:StopFlow",
      "appflow:TagResource",
      "appflow:UntagResource",
      "appflow:UpdateFlow"
    ],
    "connector*": [
      "appflow:DescribeConnector",
      "appflow:ListConnectors",
      "appflow:UnRegisterConnector",
      "appflow:UpdateConnectorRegistration"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonappflow.html"
  },
  "app-integrations": {
    "data-integration*": [
      "app-integrations:CreateDataIntegration",
      "app-integrations:DeleteDataIntegration",
      "app-integrations:GetDataIntegration",
      "app-integrations:UpdateDataIntegration"
    ],
    "event-integration*": [
      "app-integrations:CreateEventIntegration",
      "app-integrations:DeleteEventIntegration",
      "app-integrations:GetEventIntegration",
      "app-integrations:UpdateEventIntegration"
    ],
    "?": [
      "app-integrations:ListDataIntegrationAssociations",
      "app-integrations:ListDataIntegrations",
      "app-integrations:ListEventIntegrationAssociations",
      "app-integrations:ListEventIntegrations"
    ],
    "data-integration": [
      "app-integrations:ListTagsForResource",
      "app-integrations:TagResource",
      "app-integrations:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonappintegrations.html"
  },
  "application-autoscaling": {
    "?": [
      "application-autoscaling:DeleteScalingPolicy",
      "application-autoscaling:DeleteScheduledAction",
      "application-autoscaling:DeregisterScalableTarget",
      "application-autoscaling:DescribeScalableTargets",
      "application-autoscaling:DescribeScalingActivities",
      "application-autoscaling:DescribeScalingPolicies",
      "application-autoscaling:DescribeScheduledActions",
      "application-autoscaling:PutScalingPolicy",
      "application-autoscaling:PutScheduledAction",
      "application-autoscaling:RegisterScalableTarget"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsapplicationautoscaling.html"
  },
  "application-cost-profiler": {
    "?": [
      "application-cost-profiler:DeleteReportDefinition",
      "application-cost-profiler:GetReportDefinition",
      "application-cost-profiler:ImportApplicationUsage",
      "application-cost-profiler:ListReportDefinitions",
      "application-cost-profiler:PutReportDefinition",
      "application-cost-profiler:UpdateReportDefinition"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsapplicationcostprofilerservice.html"
  },
  "arsenal": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_applicationdiscoveryarsenal.html"
  },
  "discovery": {
    "?": [
      "discovery:AssociateConfigurationItemsToApplication",
      "discovery:BatchDeleteImportData",
      "discovery:CreateApplication",
      "discovery:CreateTags",
      "discovery:DeleteApplications",
      "discovery:DeleteTags",
      "discovery:DescribeAgents",
      "discovery:DescribeConfigurations",
      "discovery:DescribeContinuousExports",
      "discovery:DescribeExportConfigurations",
      "discovery:DescribeExportTasks",
      "discovery:DescribeImportTasks",
      "discovery:DescribeTags",
      "discovery:DisassociateConfigurationItemsFromApplication",
      "discovery:ExportConfigurations",
      "discovery:GetDiscoverySummary",
      "discovery:GetNetworkConnectionGraph",
      "discovery:ListConfigurations",
      "discovery:ListServerNeighbors",
      "discovery:StartContinuousExport",
      "discovery:StartDataCollectionByAgentIds",
      "discovery:StartExportTask",
      "discovery:StartImportTask",
      "discovery:StopContinuousExport",
      "discovery:StopDataCollectionByAgentIds",
      "discovery:UpdateApplication"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsapplicationdiscoveryservice.html"
  },
  "mgn": {
    "ApplicationResource*": [
      "mgn:ArchiveApplication",
      "mgn:AssociateApplications",
      "mgn:AssociateSourceServers",
      "mgn:DeleteApplication",
      "mgn:DisassociateApplications",
      "mgn:DisassociateSourceServers",
      "mgn:UnarchiveApplication",
      "mgn:UpdateApplication"
    ],
    "WaveResource*": [
      "mgn:ArchiveWave",
      "mgn:DeleteWave",
      "mgn:UnarchiveWave",
      "mgn:UpdateWave"
    ],
    "SourceServerResource*": [
      "mgn:ChangeServerLifeCycleState",
      "mgn:DeleteSourceServer",
      "mgn:DisconnectFromService",
      "mgn:FinalizeCutover",
      "mgn:GetLaunchConfiguration",
      "mgn:GetReplicationConfiguration",
      "mgn:ListSourceServerActions",
      "mgn:MarkAsArchived",
      "mgn:PutSourceServerAction",
      "mgn:RemoveSourceServerAction",
      "mgn:RetryDataReplication",
      "mgn:StartCutover",
      "mgn:StartReplication",
      "mgn:StartTest",
      "mgn:TerminateTargetInstances",
      "mgn:UpdateLaunchConfiguration",
      "mgn:UpdateReplicationConfiguration",
      "mgn:UpdateSourceServerReplicationType"
    ],
    "?": [
      "mgn:CreateApplication",
      "mgn:CreateLaunchConfigurationTemplate",
      "mgn:CreateReplicationConfigurationTemplate",
      "mgn:CreateWave",
      "mgn:DescribeJobs",
      "mgn:DescribeLaunchConfigurationTemplates",
      "mgn:DescribeReplicationConfigurationTemplates",
      "mgn:DescribeSourceServers",
      "mgn:DescribeVcenterClients",
      "mgn:InitializeService",
      "mgn:ListApplications",
      "mgn:ListTagsForResource",
      "mgn:ListWaves",
      "mgn:VerifyClientRoleForMgn"
    ],
    "JobResource*": [
      "mgn:DeleteJob",
      "mgn:DescribeJobLogItems"
    ],
    "LaunchConfigurationTemplateResource*": [
      "mgn:DeleteLaunchConfigurationTemplate",
      "mgn:ListTemplateActions",
      "mgn:PutTemplateAction",
      "mgn:RemoveTemplateAction",
      "mgn:UpdateLaunchConfigurationTemplate"
    ],
    "ReplicationConfigurationTemplateResource*": [
      "mgn:DeleteReplicationConfigurationTemplate",
      "mgn:UpdateReplicationConfigurationTemplate"
    ],
    "VcenterClientResource*": [
      "mgn:DeleteVcenterClient"
    ],
    "SourceServerResource": [
      "mgn:IssueClientCertificateForMgn"
    ],
    "ApplicationResource": [
      "mgn:TagResource",
      "mgn:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsapplicationmigrationservice.html"
  },
  "appstream": {
    "application*": [
      "appstream:AssociateApplicationFleet",
      "appstream:DeleteApplication",
      "appstream:DisassociateApplicationFleet",
      "appstream:UpdateApplication"
    ],
    "stack*": [
      "appstream:AssociateApplicationToEntitlement",
      "appstream:BatchAssociateUserStack",
      "appstream:BatchDisassociateUserStack",
      "appstream:CreateEntitlement",
      "appstream:CreateStack",
      "appstream:DeleteEntitlement",
      "appstream:DeleteStack",
      "appstream:DescribeEntitlements",
      "appstream:DisassociateApplicationFromEntitlement",
      "appstream:ListAssociatedFleets",
      "appstream:ListEntitledApplications",
      "appstream:Stream",
      "appstream:UpdateEntitlement",
      "appstream:UpdateStack"
    ],
    "fleet*": [
      "appstream:AssociateFleet",
      "appstream:CreateFleet",
      "appstream:CreateStreamingURL",
      "appstream:DeleteFleet",
      "appstream:DescribeSessions",
      "appstream:DisassociateFleet",
      "appstream:ListAssociatedStacks",
      "appstream:StartFleet",
      "appstream:StopFleet",
      "appstream:UpdateFleet"
    ],
    "image*": [
      "appstream:CopyImage",
      "appstream:CreateImageBuilder",
      "appstream:CreateUpdatedImage",
      "appstream:DeleteImage",
      "appstream:DeleteImagePermissions",
      "appstream:DescribeImagePermissions",
      "appstream:UpdateImagePermissions"
    ],
    "?": [
      "appstream:CreateAppBlock",
      "appstream:CreateDirectoryConfig",
      "appstream:CreateUsageReportSubscription",
      "appstream:CreateUser",
      "appstream:DeleteDirectoryConfig",
      "appstream:DeleteUsageReportSubscription",
      "appstream:DeleteUser",
      "appstream:DescribeDirectoryConfigs",
      "appstream:DescribeUsageReportSubscriptions",
      "appstream:DescribeUsers",
      "appstream:DisableUser",
      "appstream:EnableUser",
      "appstream:ExpireSession",
      "appstream:ListTagsForResource",
      "appstream:UpdateDirectoryConfig"
    ],
    "app-block*": [
      "appstream:CreateApplication",
      "appstream:DeleteAppBlock"
    ],
    "image-builder*": [
      "appstream:CreateImageBuilderStreamingURL",
      "appstream:DeleteImageBuilder",
      "appstream:StartImageBuilder",
      "appstream:StopImageBuilder"
    ],
    "app-block": [
      "appstream:DescribeAppBlocks",
      "appstream:TagResource",
      "appstream:UntagResource"
    ],
    "application": [
      "appstream:DescribeApplicationFleetAssociations",
      "appstream:DescribeApplications"
    ],
    "fleet": [
      "appstream:DescribeFleets"
    ],
    "image-builder": [
      "appstream:DescribeImageBuilders"
    ],
    "image": [
      "appstream:DescribeImages"
    ],
    "stack": [
      "appstream:DescribeStacks",
      "appstream:DescribeUserStackAssociations"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonappstream2.0.html"
  },
  "appsync": {
    "domain*": [
      "appsync:AssociateApi",
      "appsync:DeleteDomainName",
      "appsync:DisassociateApi",
      "appsync:GetApiAssociation",
      "appsync:GetDomainName",
      "appsync:UpdateDomainName"
    ],
    "?": [
      "appsync:CreateApiCache",
      "appsync:CreateApiKey",
      "appsync:CreateDataSource",
      "appsync:CreateDomainName",
      "appsync:CreateFunction",
      "appsync:CreateGraphqlApi",
      "appsync:CreateResolver",
      "appsync:CreateType",
      "appsync:DeleteApiCache",
      "appsync:DeleteApiKey",
      "appsync:DeleteDataSource",
      "appsync:DeleteFunction",
      "appsync:DeleteResolver",
      "appsync:DeleteType",
      "appsync:EvaluateCode",
      "appsync:EvaluateMappingTemplate",
      "appsync:FlushApiCache",
      "appsync:GetApiCache",
      "appsync:GetDataSource",
      "appsync:GetFunction",
      "appsync:GetIntrospectionSchema",
      "appsync:GetResolver",
      "appsync:GetSchemaCreationStatus",
      "appsync:GetType",
      "appsync:ListApiKeys",
      "appsync:ListDataSources",
      "appsync:ListDomainNames",
      "appsync:ListFunctions",
      "appsync:ListGraphqlApis",
      "appsync:ListResolvers",
      "appsync:ListResolversByFunction",
      "appsync:ListTypes",
      "appsync:SetWebACL",
      "appsync:StartSchemaCreation",
      "appsync:UpdateApiCache",
      "appsync:UpdateApiKey",
      "appsync:UpdateDataSource",
      "appsync:UpdateFunction",
      "appsync:UpdateResolver",
      "appsync:UpdateType"
    ],
    "graphqlapi*": [
      "appsync:DeleteGraphqlApi",
      "appsync:GetGraphqlApi",
      "appsync:TagResource",
      "appsync:UntagResource",
      "appsync:UpdateGraphqlApi"
    ],
    "field*": [
      "appsync:GraphQL"
    ],
    "graphqlapi": [
      "appsync:ListTagsForResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsappsync.html"
  },
  "artifact": {
    "agreement*": [
      "artifact:AcceptAgreement"
    ],
    "agreement": [
      "artifact:DownloadAgreement"
    ],
    "report-package*": [
      "artifact:Get"
    ],
    "report*": [
      "artifact:GetReport",
      "artifact:GetReportMetadata",
      "artifact:GetTermForReport"
    ],
    "?": [
      "artifact:ListReports"
    ],
    "customer-agreement*": [
      "artifact:TerminateAgreement"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsartifact.html"
  },
  "athena": {
    "workgroup*": [
      "athena:BatchGetNamedQuery",
      "athena:BatchGetPreparedStatement",
      "athena:BatchGetQueryExecution",
      "athena:CreateNamedQuery",
      "athena:CreateNotebook",
      "athena:CreatePreparedStatement",
      "athena:CreatePresignedNotebookUrl",
      "athena:CreateWorkGroup",
      "athena:DeleteNamedQuery",
      "athena:DeleteNotebook",
      "athena:DeletePreparedStatement",
      "athena:DeleteWorkGroup",
      "athena:ExportNotebook",
      "athena:GetCalculationExecution",
      "athena:GetCalculationExecutionCode",
      "athena:GetCalculationExecutionStatus",
      "athena:GetNamedQuery",
      "athena:GetNotebookMetadata",
      "athena:GetPreparedStatement",
      "athena:GetQueryExecution",
      "athena:GetQueryResults",
      "athena:GetQueryResultsStream",
      "athena:GetQueryRuntimeStatistics",
      "athena:GetSession",
      "athena:GetSessionStatus",
      "athena:GetWorkGroup",
      "athena:ImportNotebook",
      "athena:ListCalculationExecutions",
      "athena:ListNamedQueries",
      "athena:ListNotebookMetadata",
      "athena:ListNotebookSessions",
      "athena:ListPreparedStatements",
      "athena:ListQueryExecutions",
      "athena:ListSessions",
      "athena:StartCalculationExecution",
      "athena:StartQueryExecution",
      "athena:StartSession",
      "athena:StopCalculationExecution",
      "athena:StopQueryExecution",
      "athena:TerminateSession",
      "athena:UpdateNamedQuery",
      "athena:UpdateNotebook",
      "athena:UpdateNotebookMetadata",
      "athena:UpdatePreparedStatement",
      "athena:UpdateWorkGroup"
    ],
    "datacatalog*": [
      "athena:CreateDataCatalog",
      "athena:DeleteDataCatalog",
      "athena:GetDataCatalog",
      "athena:GetDatabase",
      "athena:GetTableMetadata",
      "athena:ListDatabases",
      "athena:ListTableMetadata",
      "athena:ListTagsForResource",
      "athena:TagResource",
      "athena:UntagResource",
      "athena:UpdateDataCatalog"
    ],
    "?": [
      "athena:ListApplicationDPUSizes",
      "athena:ListDataCatalogs",
      "athena:ListEngineVersions",
      "athena:ListExecutors",
      "athena:ListWorkGroups"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonathena.html"
  },
  "auditmanager": {
    "assessment*": [
      "auditmanager:AssociateAssessmentReportEvidenceFolder",
      "auditmanager:BatchAssociateAssessmentReportEvidence",
      "auditmanager:BatchCreateDelegationByAssessment",
      "auditmanager:BatchDeleteDelegationByAssessment",
      "auditmanager:BatchDisassociateAssessmentReportEvidence",
      "auditmanager:CreateAssessmentReport",
      "auditmanager:DeleteAssessment",
      "auditmanager:DeleteAssessmentReport",
      "auditmanager:DisassociateAssessmentReportEvidenceFolder",
      "auditmanager:GetAssessment",
      "auditmanager:GetAssessmentReportUrl",
      "auditmanager:GetChangeLogs",
      "auditmanager:GetEvidenceFoldersByAssessment",
      "auditmanager:UpdateAssessment",
      "auditmanager:UpdateAssessmentStatus"
    ],
    "assessmentControlSet*": [
      "auditmanager:BatchImportEvidenceToAssessmentControl",
      "auditmanager:GetEvidence",
      "auditmanager:GetEvidenceByEvidenceFolder",
      "auditmanager:GetEvidenceFolder",
      "auditmanager:GetEvidenceFoldersByAssessmentControl",
      "auditmanager:UpdateAssessmentControl",
      "auditmanager:UpdateAssessmentControlSetStatus"
    ],
    "?": [
      "auditmanager:CreateAssessment",
      "auditmanager:CreateAssessmentFramework",
      "auditmanager:CreateControl",
      "auditmanager:DeleteAssessmentFrameworkShare",
      "auditmanager:DeregisterAccount",
      "auditmanager:DeregisterOrganizationAdminAccount",
      "auditmanager:GetAccountStatus",
      "auditmanager:GetDelegations",
      "auditmanager:GetInsights",
      "auditmanager:GetInsightsByAssessment",
      "auditmanager:GetOrganizationAdminAccount",
      "auditmanager:GetServicesInScope",
      "auditmanager:GetSettings",
      "auditmanager:ListAssessmentControlInsightsByControlDomain",
      "auditmanager:ListAssessmentFrameworkShareRequests",
      "auditmanager:ListAssessmentFrameworks",
      "auditmanager:ListAssessmentReports",
      "auditmanager:ListAssessments",
      "auditmanager:ListControlDomainInsights",
      "auditmanager:ListControlDomainInsightsByAssessment",
      "auditmanager:ListControlInsightsByControlDomain",
      "auditmanager:ListControls",
      "auditmanager:ListKeywordsForDataSource",
      "auditmanager:ListNotifications",
      "auditmanager:RegisterAccount",
      "auditmanager:RegisterOrganizationAdminAccount",
      "auditmanager:UpdateAssessmentFrameworkShare",
      "auditmanager:UpdateSettings",
      "auditmanager:ValidateAssessmentReportIntegrity"
    ],
    "assessmentFramework*": [
      "auditmanager:DeleteAssessmentFramework",
      "auditmanager:GetAssessmentFramework",
      "auditmanager:StartAssessmentFrameworkShare",
      "auditmanager:UpdateAssessmentFramework"
    ],
    "control*": [
      "auditmanager:DeleteControl",
      "auditmanager:GetControl",
      "auditmanager:UpdateControl"
    ],
    "assessment": [
      "auditmanager:ListTagsForResource",
      "auditmanager:TagResource",
      "auditmanager:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsauditmanager.html"
  },
  "autoscaling-plans": {
    "?": [
      "autoscaling-plans:CreateScalingPlan",
      "autoscaling-plans:DeleteScalingPlan",
      "autoscaling-plans:DescribeScalingPlanResources",
      "autoscaling-plans:DescribeScalingPlans",
      "autoscaling-plans:GetScalingPlanResourceForecastData",
      "autoscaling-plans:UpdateScalingPlan"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsautoscaling.html"
  },
  "backup": {
    "legalHold*": [
      "backup:CancelLegalHold",
      "backup:CreateLegalHold",
      "backup:GetLegalHold",
      "backup:ListRecoveryPointsByLegalHold"
    ],
    "backupPlan*": [
      "backup:CreateBackupPlan",
      "backup:CreateBackupSelection",
      "backup:DeleteBackupPlan",
      "backup:DeleteBackupSelection",
      "backup:GetBackupPlan",
      "backup:GetBackupSelection",
      "backup:ListBackupPlanVersions",
      "backup:ListBackupSelections",
      "backup:UpdateBackupPlan"
    ],
    "backupVault*": [
      "backup:CreateBackupVault",
      "backup:DeleteBackupVault",
      "backup:DeleteBackupVaultAccessPolicy",
      "backup:DeleteBackupVaultLockConfiguration",
      "backup:DeleteBackupVaultNotifications",
      "backup:DescribeBackupVault",
      "backup:GetBackupVaultAccessPolicy",
      "backup:GetBackupVaultNotifications",
      "backup:ListRecoveryPointsByBackupVault",
      "backup:PutBackupVaultAccessPolicy",
      "backup:PutBackupVaultLockConfiguration",
      "backup:PutBackupVaultNotifications",
      "backup:StartBackupJob"
    ],
    "framework*": [
      "backup:CreateFramework",
      "backup:DeleteFramework",
      "backup:DescribeFramework",
      "backup:UpdateFramework"
    ],
    "reportPlan*": [
      "backup:CreateReportPlan",
      "backup:DeleteReportPlan",
      "backup:DescribeReportPlan",
      "backup:StartReportJob",
      "backup:UpdateReportPlan"
    ],
    "recoveryPoint*": [
      "backup:DeleteRecoveryPoint",
      "backup:DescribeRecoveryPoint",
      "backup:DisassociateRecoveryPoint",
      "backup:DisassociateRecoveryPointFromParent",
      "backup:GetRecoveryPointRestoreMetadata",
      "backup:StartCopyJob",
      "backup:StartRestoreJob",
      "backup:UpdateRecoveryPointLifecycle"
    ],
    "?": [
      "backup:DescribeBackupJob",
      "backup:DescribeCopyJob",
      "backup:DescribeGlobalSettings",
      "backup:DescribeProtectedResource",
      "backup:DescribeRegionSettings",
      "backup:DescribeReportJob",
      "backup:DescribeRestoreJob",
      "backup:ExportBackupPlanTemplate",
      "backup:GetBackupPlanFromJSON",
      "backup:GetBackupPlanFromTemplate",
      "backup:GetSupportedResourceTypes",
      "backup:ListBackupJobs",
      "backup:ListBackupPlanTemplates",
      "backup:ListBackupPlans",
      "backup:ListBackupVaults",
      "backup:ListCopyJobs",
      "backup:ListFrameworks",
      "backup:ListLegalHolds",
      "backup:ListProtectedResources",
      "backup:ListRecoveryPointsByResource",
      "backup:ListReportJobs",
      "backup:ListReportPlans",
      "backup:ListRestoreJobs",
      "backup:StopBackupJob",
      "backup:UpdateGlobalSettings",
      "backup:UpdateRegionSettings"
    ],
    "backupPlan": [
      "backup:ListTags",
      "backup:TagResource",
      "backup:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsbackup.html"
  },
  "backup-gateway": {
    "gateway*": [
      "backup-gateway:AssociateGatewayToServer",
      "backup-gateway:DeleteGateway",
      "backup-gateway:DisassociateGatewayFromServer",
      "backup-gateway:GetBandwidthRateLimitSchedule",
      "backup-gateway:GetGateway",
      "backup-gateway:PutBandwidthRateLimitSchedule",
      "backup-gateway:PutMaintenanceStartTime",
      "backup-gateway:TestHypervisorConfiguration",
      "backup-gateway:UpdateGatewayInformation",
      "backup-gateway:UpdateGatewaySoftwareNow",
      "backup-gateway:UpdateHypervisor"
    ],
    "virtualmachine*": [
      "backup-gateway:Backup",
      "backup-gateway:GetVirtualMachine"
    ],
    "?": [
      "backup-gateway:CreateGateway",
      "backup-gateway:ImportHypervisorConfiguration",
      "backup-gateway:ListGateways",
      "backup-gateway:ListHypervisors",
      "backup-gateway:ListVirtualMachines"
    ],
    "hypervisor*": [
      "backup-gateway:DeleteHypervisor",
      "backup-gateway:GetHypervisor",
      "backup-gateway:GetHypervisorPropertyMappings",
      "backup-gateway:PutHypervisorPropertyMappings",
      "backup-gateway:Restore",
      "backup-gateway:StartVirtualMachinesMetadataSync"
    ],
    "gateway": [
      "backup-gateway:ListTagsForResource",
      "backup-gateway:TagResource",
      "backup-gateway:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsbackupgateway.html"
  },
  "backup-storage": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsbackupstorage.html"
  },
  "batch": {
    "job*": [
      "batch:CancelJob",
      "batch:TerminateJob"
    ],
    "compute-environment*": [
      "batch:CreateComputeEnvironment",
      "batch:CreateJobQueue",
      "batch:DeleteComputeEnvironment",
      "batch:UpdateComputeEnvironment"
    ],
    "scheduling-policy*": [
      "batch:CreateSchedulingPolicy",
      "batch:DeleteSchedulingPolicy",
      "batch:UpdateSchedulingPolicy"
    ],
    "job-queue*": [
      "batch:DeleteJobQueue",
      "batch:UpdateJobQueue"
    ],
    "job-definition*": [
      "batch:DeregisterJobDefinition",
      "batch:RegisterJobDefinition",
      "batch:SubmitJob"
    ],
    "?": [
      "batch:DescribeComputeEnvironments",
      "batch:DescribeJobDefinitions",
      "batch:DescribeJobQueues",
      "batch:DescribeJobs",
      "batch:DescribeSchedulingPolicies",
      "batch:ListJobs",
      "batch:ListSchedulingPolicies"
    ],
    "compute-environment": [
      "batch:ListTagsForResource",
      "batch:TagResource",
      "batch:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsbatch.html"
  },
  "billing": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsbilling_.html"
  },
  "billingconductor": {
    "billinggroup*": [
      "billingconductor:AssociateAccounts",
      "billingconductor:DeleteBillingGroup",
      "billingconductor:DisassociateAccounts",
      "billingconductor:UpdateBillingGroup"
    ],
    "pricingplan*": [
      "billingconductor:AssociatePricingRules",
      "billingconductor:CreateBillingGroup",
      "billingconductor:DeletePricingPlan",
      "billingconductor:DisassociatePricingRules",
      "billingconductor:ListPricingPlansAssociatedWithPricingRule",
      "billingconductor:ListPricingRulesAssociatedToPricingPlan",
      "billingconductor:UpdatePricingPlan"
    ],
    "customlineitem*": [
      "billingconductor:BatchAssociateResourcesToCustomLineItem",
      "billingconductor:BatchDisassociateResourcesFromCustomLineItem",
      "billingconductor:DeleteCustomLineItem",
      "billingconductor:ListCustomLineItemVersions",
      "billingconductor:ListResourcesAssociatedToCustomLineItem",
      "billingconductor:UpdateCustomLineItem"
    ],
    "?": [
      "billingconductor:CreateCustomLineItem",
      "billingconductor:CreatePricingPlan",
      "billingconductor:CreatePricingRule",
      "billingconductor:ListAccountAssociations",
      "billingconductor:ListBillingGroupCostReports",
      "billingconductor:ListBillingGroups",
      "billingconductor:ListCustomLineItems",
      "billingconductor:ListPricingPlans",
      "billingconductor:ListPricingRules"
    ],
    "pricingrule*": [
      "billingconductor:DeletePricingRule",
      "billingconductor:UpdatePricingRule"
    ],
    "billinggroup": [
      "billingconductor:ListTagsForResource",
      "billingconductor:TagResource",
      "billingconductor:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsbillingconductor.html"
  },
  "aws-portal": {
    "?": [
      "aws-portal:ModifyAccount",
      "aws-portal:ModifyBilling",
      "aws-portal:ModifyPaymentMethods",
      "aws-portal:ViewAccount",
      "aws-portal:ViewBilling",
      "aws-portal:ViewPaymentMethods",
      "aws-portal:ViewUsage"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsbillingconsole.html"
  },
  "braket": {
    "job*": [
      "braket:CancelJob",
      "braket:GetJob"
    ],
    "quantum-task*": [
      "braket:CancelQuantumTask",
      "braket:GetQuantumTask"
    ],
    "?": [
      "braket:CreateJob",
      "braket:CreateQuantumTask",
      "braket:GetDevice",
      "braket:SearchDevices",
      "braket:SearchJobs",
      "braket:SearchQuantumTasks"
    ],
    "job": [
      "braket:ListTagsForResource",
      "braket:UntagResource"
    ],
    "quantum-task": [
      "braket:TagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonbraket.html"
  },
  "budgets": {
    "budgetAction*": [
      "budgets:CreateBudgetAction",
      "budgets:DeleteBudgetAction",
      "budgets:DescribeBudgetAction",
      "budgets:DescribeBudgetActionHistories",
      "budgets:ExecuteBudgetAction",
      "budgets:UpdateBudgetAction"
    ],
    "?": [
      "budgets:DescribeBudgetActionsForAccount"
    ],
    "budget*": [
      "budgets:DescribeBudgetActionsForBudget",
      "budgets:ModifyBudget",
      "budgets:ViewBudget"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsbudgetservice.html"
  },
  "bugbust": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsbugbust.html"
  },
  "acm": {
    "certificate*": [
      "acm:AddTagsToCertificate",
      "acm:DeleteCertificate",
      "acm:DescribeCertificate",
      "acm:ExportCertificate",
      "acm:GetCertificate",
      "acm:ImportCertificate",
      "acm:ListTagsForCertificate",
      "acm:RemoveTagsFromCertificate",
      "acm:RenewCertificate",
      "acm:ResendValidationEmail",
      "acm:UpdateCertificateOptions"
    ],
    "?": [
      "acm:GetAccountConfiguration",
      "acm:ListCertificates",
      "acm:PutAccountConfiguration",
      "acm:RequestCertificate"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awscertificatemanager.html"
  },
  "chatbot": {
    "?": [
      "chatbot:CreateChimeWebhookConfiguration",
      "chatbot:CreateSlackChannelConfiguration",
      "chatbot:DeleteSlackUserIdentity",
      "chatbot:DeleteSlackWorkspaceAuthorization",
      "chatbot:DescribeChimeWebhookConfigurations",
      "chatbot:DescribeSlackChannelConfigurations",
      "chatbot:DescribeSlackChannels",
      "chatbot:DescribeSlackUserIdentities",
      "chatbot:DescribeSlackWorkspaces",
      "chatbot:GetAccountPreferences",
      "chatbot:GetSlackOauthParameters",
      "chatbot:RedeemSlackOauthCode",
      "chatbot:UpdateAccountPreferences"
    ],
    "ChatbotConfiguration*": [
      "chatbot:DeleteChimeWebhookConfiguration",
      "chatbot:DeleteSlackChannelConfiguration",
      "chatbot:UpdateChimeWebhookConfiguration",
      "chatbot:UpdateSlackChannelConfiguration"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awschatbot.html"
  },
  "chime": {
    "?": [
      "chime:AcceptDelegate",
      "chime:ActivateUsers",
      "chime:AddDomain",
      "chime:AddOrUpdateGroups",
      "chime:AssociatePhoneNumberWithUser",
      "chime:AssociatePhoneNumbersWithVoiceConnector",
      "chime:AssociatePhoneNumbersWithVoiceConnectorGroup",
      "chime:AssociateSigninDelegateGroupsWithAccount",
      "chime:AuthorizeDirectory",
      "chime:BatchCreateRoomMembership",
      "chime:BatchDeletePhoneNumber",
      "chime:BatchSuspendUser",
      "chime:BatchUnsuspendUser",
      "chime:BatchUpdatePhoneNumber",
      "chime:BatchUpdateUser",
      "chime:ConnectDirectory",
      "chime:CreateAccount",
      "chime:CreateApiKey",
      "chime:CreateAppInstance",
      "chime:CreateAppInstanceUser",
      "chime:CreateBot",
      "chime:CreateCDRBucket",
      "chime:CreateMediaCapturePipeline",
      "chime:CreateMediaConcatenationPipeline",
      "chime:CreateMediaLiveConnectorPipeline",
      "chime:CreateMeeting",
      "chime:CreateMeetingWithAttendees",
      "chime:CreatePhoneNumberOrder",
      "chime:CreateProxySession",
      "chime:CreateRoom",
      "chime:CreateRoomMembership",
      "chime:CreateSipMediaApplication",
      "chime:CreateSipMediaApplicationCall",
      "chime:CreateSipRule",
      "chime:CreateUser",
      "chime:CreateVoiceConnector",
      "chime:CreateVoiceConnectorGroup",
      "chime:DeleteAccount",
      "chime:DeleteAccountOpenIdConfig",
      "chime:DeleteApiKey",
      "chime:DeleteCDRBucket",
      "chime:DeleteDelegate",
      "chime:DeleteDomain",
      "chime:DeleteEventsConfiguration",
      "chime:DeleteGroups",
      "chime:DeletePhoneNumber",
      "chime:DeleteProxySession",
      "chime:DeleteRoom",
      "chime:DeleteRoomMembership",
      "chime:DeleteSipMediaApplication",
      "chime:DeleteSipRule",
      "chime:DeleteVoiceConnector",
      "chime:DeleteVoiceConnectorEmergencyCallingConfiguration",
      "chime:DeleteVoiceConnectorGroup",
      "chime:DeleteVoiceConnectorOrigination",
      "chime:DeleteVoiceConnectorProxy",
      "chime:DeleteVoiceConnectorStreamingConfiguration",
      "chime:DeleteVoiceConnectorTermination",
      "chime:DeleteVoiceConnectorTerminationCredentials",
      "chime:DisassociatePhoneNumberFromUser",
      "chime:DisassociatePhoneNumbersFromVoiceConnector",
      "chime:DisassociatePhoneNumbersFromVoiceConnectorGroup",
      "chime:DisassociateSigninDelegateGroupsFromAccount",
      "chime:DisconnectDirectory",
      "chime:GetAccount",
      "chime:GetAccountResource",
      "chime:GetAccountSettings",
      "chime:GetAccountWithOpenIdConfig",
      "chime:GetBot",
      "chime:GetCDRBucket",
      "chime:GetDomain",
      "chime:GetEventsConfiguration",
      "chime:GetGlobalSettings",
      "chime:GetMeetingDetail",
      "chime:GetMessagingSessionEndpoint",
      "chime:GetPhoneNumber",
      "chime:GetPhoneNumberOrder",
      "chime:GetPhoneNumberSettings",
      "chime:GetProxySession",
      "chime:GetRetentionSettings",
      "chime:GetRoom",
      "chime:GetSipMediaApplication",
      "chime:GetSipMediaApplicationAlexaSkillConfiguration",
      "chime:GetSipMediaApplicationLoggingConfiguration",
      "chime:GetSipRule",
      "chime:GetTelephonyLimits",
      "chime:GetUser",
      "chime:GetUserActivityReportData",
      "chime:GetUserByEmail",
      "chime:GetUserSettings",
      "chime:GetVoiceConnector",
      "chime:GetVoiceConnectorEmergencyCallingConfiguration",
      "chime:GetVoiceConnectorGroup",
      "chime:GetVoiceConnectorLoggingConfiguration",
      "chime:GetVoiceConnectorOrigination",
      "chime:GetVoiceConnectorProxy",
      "chime:GetVoiceConnectorStreamingConfiguration",
      "chime:GetVoiceConnectorTermination",
      "chime:GetVoiceConnectorTerminationHealth",
      "chime:InviteDelegate",
      "chime:InviteUsers",
      "chime:InviteUsersFromProvider",
      "chime:ListAccountUsageReportData",
      "chime:ListAccounts",
      "chime:ListApiKeys",
      "chime:ListAvailableVoiceConnectorRegions",
      "chime:ListBots",
      "chime:ListCDRBucket",
      "chime:ListCallingRegions",
      "chime:ListDelegates",
      "chime:ListDirectories",
      "chime:ListDomains",
      "chime:ListGroups",
      "chime:ListMediaCapturePipelines",
      "chime:ListMediaPipelines",
      "chime:ListMeetingEvents",
      "chime:ListMeetings",
      "chime:ListMeetingsReportData",
      "chime:ListPhoneNumberOrders",
      "chime:ListPhoneNumbers",
      "chime:ListProxySessions",
      "chime:ListRoomMemberships",
      "chime:ListRooms",
      "chime:ListSipMediaApplications",
      "chime:ListSipRules",
      "chime:ListSupportedPhoneNumberCountries",
      "chime:ListUsers",
      "chime:ListVoiceConnectorGroups",
      "chime:ListVoiceConnectorTerminationCredentials",
      "chime:ListVoiceConnectors",
      "chime:LogoutUser",
      "chime:PutEventsConfiguration",
      "chime:PutRetentionSettings",
      "chime:PutSipMediaApplicationAlexaSkillConfiguration",
      "chime:PutSipMediaApplicationLoggingConfiguration",
      "chime:PutVoiceConnectorEmergencyCallingConfiguration",
      "chime:PutVoiceConnectorLoggingConfiguration",
      "chime:PutVoiceConnectorOrigination",
      "chime:PutVoiceConnectorProxy",
      "chime:PutVoiceConnectorStreamingConfiguration",
      "chime:PutVoiceConnectorTermination",
      "chime:PutVoiceConnectorTerminationCredentials",
      "chime:RedactConversationMessage",
      "chime:RedactRoomMessage",
      "chime:RegenerateSecurityToken",
      "chime:RenameAccount",
      "chime:RenewDelegate",
      "chime:ResetAccountResource",
      "chime:ResetPersonalPIN",
      "chime:RestorePhoneNumber",
      "chime:RetrieveDataExports",
      "chime:SearchAvailablePhoneNumbers",
      "chime:StartDataExport",
      "chime:StartMeetingTranscription",
      "chime:StopMeetingTranscription",
      "chime:SubmitSupportRequest",
      "chime:SuspendUsers",
      "chime:UnauthorizeDirectory",
      "chime:UpdateAccount",
      "chime:UpdateAccountOpenIdConfig",
      "chime:UpdateAccountResource",
      "chime:UpdateAccountSettings",
      "chime:UpdateBot",
      "chime:UpdateCDRSettings",
      "chime:UpdateGlobalSettings",
      "chime:UpdatePhoneNumber",
      "chime:UpdatePhoneNumberSettings",
      "chime:UpdateProxySession",
      "chime:UpdateRoom",
      "chime:UpdateRoomMembership",
      "chime:UpdateSipMediaApplication",
      "chime:UpdateSipMediaApplicationCall",
      "chime:UpdateSipRule",
      "chime:UpdateSupportedLicenses",
      "chime:UpdateUser",
      "chime:UpdateUserLicenses",
      "chime:UpdateUserSettings",
      "chime:UpdateVoiceConnector",
      "chime:UpdateVoiceConnectorGroup",
      "chime:ValidateAccountResource",
      "chime:ValidateE911Address"
    ],
    "app-instance-user*": [
      "chime:AssociateChannelFlow",
      "chime:BatchCreateChannelMembership",
      "chime:Connect",
      "chime:CreateChannel",
      "chime:CreateChannelBan",
      "chime:CreateChannelMembership",
      "chime:CreateChannelModerator",
      "chime:DeleteAppInstanceUser",
      "chime:DeleteChannel",
      "chime:DeleteChannelBan",
      "chime:DeleteChannelMembership",
      "chime:DeleteChannelMessage",
      "chime:DeleteChannelModerator",
      "chime:DeregisterAppInstanceUserEndpoint",
      "chime:DescribeAppInstanceUser",
      "chime:DescribeAppInstanceUserEndpoint",
      "chime:DescribeChannel",
      "chime:DescribeChannelBan",
      "chime:DescribeChannelMembership",
      "chime:DescribeChannelMembershipForAppInstanceUser",
      "chime:DescribeChannelModeratedByAppInstanceUser",
      "chime:DescribeChannelModerator",
      "chime:DisassociateChannelFlow",
      "chime:GetChannelMembershipPreferences",
      "chime:GetChannelMessage",
      "chime:GetChannelMessageStatus",
      "chime:ListAppInstanceUserEndpoints",
      "chime:ListAppInstanceUsers",
      "chime:ListChannelBans",
      "chime:ListChannelMemberships",
      "chime:ListChannelMembershipsForAppInstanceUser",
      "chime:ListChannelMessages",
      "chime:ListChannelModerators",
      "chime:ListChannels",
      "chime:ListChannelsModeratedByAppInstanceUser",
      "chime:ListSubChannels",
      "chime:PutChannelMembershipPreferences",
      "chime:RedactChannelMessage",
      "chime:RegisterAppInstanceUserEndpoint",
      "chime:SearchChannels",
      "chime:SendChannelMessage",
      "chime:UpdateAppInstanceUser",
      "chime:UpdateAppInstanceUserEndpoint",
      "chime:UpdateChannel",
      "chime:UpdateChannelMessage",
      "chime:UpdateChannelReadMarker"
    ],
    "meeting*": [
      "chime:BatchCreateAttendee",
      "chime:BatchUpdateAttendeeCapabilitiesExcept",
      "chime:CreateAttendee",
      "chime:CreateMeetingDialOut",
      "chime:DeleteAttendee",
      "chime:DeleteMeeting",
      "chime:GetAttendee",
      "chime:GetMeeting",
      "chime:ListAttendeeTags",
      "chime:ListAttendees",
      "chime:ListMeetingTags",
      "chime:TagAttendee",
      "chime:TagMeeting",
      "chime:UntagAttendee",
      "chime:UntagMeeting",
      "chime:UpdateAttendeeCapabilities"
    ],
    "channel*": [
      "chime:ChannelFlowCallback",
      "chime:DeleteChannelFlow"
    ],
    "app-instance*": [
      "chime:CreateAppInstanceAdmin",
      "chime:CreateChannelFlow",
      "chime:DeleteAppInstance",
      "chime:DeleteAppInstanceAdmin",
      "chime:DeleteAppInstanceStreamingConfigurations",
      "chime:DescribeAppInstance",
      "chime:DescribeAppInstanceAdmin",
      "chime:GetAppInstanceRetentionSettings",
      "chime:GetAppInstanceStreamingConfigurations",
      "chime:ListAppInstanceAdmins",
      "chime:ListAppInstances",
      "chime:PutAppInstanceRetentionSettings",
      "chime:PutAppInstanceStreamingConfigurations",
      "chime:UpdateAppInstance"
    ],
    "media-pipeline*": [
      "chime:DeleteMediaCapturePipeline",
      "chime:DeleteMediaPipeline",
      "chime:GetMediaCapturePipeline",
      "chime:GetMediaPipeline"
    ],
    "channel-flow*": [
      "chime:DescribeChannelFlow",
      "chime:ListChannelFlows",
      "chime:ListChannelsAssociatedWithChannelFlow",
      "chime:UpdateChannelFlow"
    ],
    "channel": [
      "chime:ListTagsForResource"
    ],
    "app-instance": [
      "chime:TagResource",
      "chime:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonchime.html"
  },
  "cleanrooms": {
    "Collaboration*": [
      "cleanrooms:BatchGetSchema",
      "cleanrooms:CreateMembership",
      "cleanrooms:DeleteCollaboration",
      "cleanrooms:DeleteMember",
      "cleanrooms:GetCollaboration",
      "cleanrooms:GetSchema",
      "cleanrooms:GetSchemaAnalysisRule",
      "cleanrooms:ListMembers",
      "cleanrooms:ListSchemas",
      "cleanrooms:UpdateCollaboration"
    ],
    "?": [
      "cleanrooms:CreateCollaboration",
      "cleanrooms:CreateConfiguredTable",
      "cleanrooms:ListCollaborations",
      "cleanrooms:ListConfiguredTables",
      "cleanrooms:ListMemberships"
    ],
    "ConfiguredTable*": [
      "cleanrooms:CreateConfiguredTableAnalysisRule",
      "cleanrooms:CreateConfiguredTableAssociation",
      "cleanrooms:DeleteConfiguredTable",
      "cleanrooms:DeleteConfiguredTableAnalysisRule",
      "cleanrooms:GetConfiguredTable",
      "cleanrooms:GetConfiguredTableAnalysisRule",
      "cleanrooms:UpdateConfiguredTable",
      "cleanrooms:UpdateConfiguredTableAnalysisRule"
    ],
    "ConfiguredTableAssociation*": [
      "cleanrooms:DeleteConfiguredTableAssociation",
      "cleanrooms:GetConfiguredTableAssociation",
      "cleanrooms:UpdateConfiguredTableAssociation"
    ],
    "Membership*": [
      "cleanrooms:DeleteMembership",
      "cleanrooms:GetMembership",
      "cleanrooms:GetProtectedQuery",
      "cleanrooms:ListConfiguredTableAssociations",
      "cleanrooms:ListProtectedQueries",
      "cleanrooms:StartProtectedQuery",
      "cleanrooms:UpdateMembership",
      "cleanrooms:UpdateProtectedQuery"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awscleanrooms.html"
  },
  "cloudformation": {
    "?": [
      "cloudformation:ActivateType",
      "cloudformation:BatchDescribeTypeConfigurations",
      "cloudformation:CreateStackSet",
      "cloudformation:DeactivateType",
      "cloudformation:DeregisterType",
      "cloudformation:DescribeAccountLimits",
      "cloudformation:DescribePublisher",
      "cloudformation:DescribeStackDriftDetectionStatus",
      "cloudformation:DescribeType",
      "cloudformation:DescribeTypeRegistration",
      "cloudformation:EstimateTemplateCost",
      "cloudformation:ListExports",
      "cloudformation:ListImports",
      "cloudformation:ListStacks",
      "cloudformation:ListTypeRegistrations",
      "cloudformation:ListTypeVersions",
      "cloudformation:ListTypes",
      "cloudformation:PublishType",
      "cloudformation:RegisterPublisher",
      "cloudformation:RegisterType",
      "cloudformation:SetTypeConfiguration",
      "cloudformation:SetTypeDefaultVersion",
      "cloudformation:TestType",
      "cloudformation:ValidateTemplate"
    ],
    "stack*": [
      "cloudformation:CancelUpdateStack",
      "cloudformation:ContinueUpdateRollback",
      "cloudformation:CreateChangeSet",
      "cloudformation:CreateStack",
      "cloudformation:DeleteChangeSet",
      "cloudformation:DeleteStack",
      "cloudformation:DescribeChangeSet",
      "cloudformation:DescribeChangeSetHooks",
      "cloudformation:DescribeStackEvents",
      "cloudformation:DescribeStackResource",
      "cloudformation:DescribeStackResourceDrifts",
      "cloudformation:DescribeStackResources",
      "cloudformation:DescribeStacks",
      "cloudformation:DetectStackDrift",
      "cloudformation:DetectStackResourceDrift",
      "cloudformation:ExecuteChangeSet",
      "cloudformation:GetStackPolicy",
      "cloudformation:GetTemplate",
      "cloudformation:ListChangeSets",
      "cloudformation:ListStackResources",
      "cloudformation:RecordHandlerProgress",
      "cloudformation:RollbackStack",
      "cloudformation:SetStackPolicy",
      "cloudformation:SignalResource",
      "cloudformation:UpdateStack",
      "cloudformation:UpdateTerminationProtection"
    ],
    "stackset*": [
      "cloudformation:CreateStackInstances",
      "cloudformation:DeleteStackInstances",
      "cloudformation:DeleteStackSet",
      "cloudformation:DescribeStackInstance",
      "cloudformation:DescribeStackSet",
      "cloudformation:DescribeStackSetOperation",
      "cloudformation:DetectStackSetDrift",
      "cloudformation:ImportStacksToStackSet",
      "cloudformation:ListStackInstances",
      "cloudformation:ListStackSetOperationResults",
      "cloudformation:ListStackSetOperations",
      "cloudformation:ListStackSets",
      "cloudformation:StopStackSetOperation",
      "cloudformation:UpdateStackInstances",
      "cloudformation:UpdateStackSet"
    ],
    "stack": [
      "cloudformation:GetTemplateSummary"
    ],
    "changeset": [
      "cloudformation:TagResource",
      "cloudformation:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awscloudformation.html"
  },
  "clouddirectory": {
    "directory*": [
      "clouddirectory:AddFacetToObject",
      "clouddirectory:ApplySchema",
      "clouddirectory:AttachObject",
      "clouddirectory:AttachPolicy",
      "clouddirectory:AttachToIndex",
      "clouddirectory:AttachTypedLink",
      "clouddirectory:BatchRead",
      "clouddirectory:BatchWrite",
      "clouddirectory:CreateIndex",
      "clouddirectory:CreateObject",
      "clouddirectory:DeleteDirectory",
      "clouddirectory:DeleteObject",
      "clouddirectory:DetachFromIndex",
      "clouddirectory:DetachObject",
      "clouddirectory:DetachPolicy",
      "clouddirectory:DetachTypedLink",
      "clouddirectory:DisableDirectory",
      "clouddirectory:EnableDirectory",
      "clouddirectory:GetDirectory",
      "clouddirectory:GetLinkAttributes",
      "clouddirectory:GetObjectAttributes",
      "clouddirectory:GetObjectInformation",
      "clouddirectory:ListAppliedSchemaArns",
      "clouddirectory:ListAttachedIndices",
      "clouddirectory:ListIncomingTypedLinks",
      "clouddirectory:ListIndex",
      "clouddirectory:ListObjectAttributes",
      "clouddirectory:ListObjectChildren",
      "clouddirectory:ListObjectParentPaths",
      "clouddirectory:ListObjectParents",
      "clouddirectory:ListObjectPolicies",
      "clouddirectory:ListOutgoingTypedLinks",
      "clouddirectory:ListPolicyAttachments",
      "clouddirectory:ListTagsForResource",
      "clouddirectory:LookupPolicy",
      "clouddirectory:RemoveFacetFromObject",
      "clouddirectory:TagResource",
      "clouddirectory:UntagResource",
      "clouddirectory:UpdateLinkAttributes",
      "clouddirectory:UpdateObjectAttributes",
      "clouddirectory:UpgradeAppliedSchema"
    ],
    "publishedSchema*": [
      "clouddirectory:CreateDirectory"
    ],
    "appliedSchema*": [
      "clouddirectory:CreateFacet",
      "clouddirectory:CreateTypedLinkFacet",
      "clouddirectory:GetAppliedSchemaVersion",
      "clouddirectory:GetFacet",
      "clouddirectory:GetSchemaAsJson",
      "clouddirectory:GetTypedLinkFacetInformation",
      "clouddirectory:ListFacetAttributes",
      "clouddirectory:ListFacetNames",
      "clouddirectory:ListTypedLinkFacetAttributes",
      "clouddirectory:ListTypedLinkFacetNames",
      "clouddirectory:UpdateFacet"
    ],
    "?": [
      "clouddirectory:CreateSchema",
      "clouddirectory:ListDevelopmentSchemaArns",
      "clouddirectory:ListDirectories",
      "clouddirectory:ListManagedSchemaArns",
      "clouddirectory:ListPublishedSchemaArns",
      "clouddirectory:PutSchemaFromJson"
    ],
    "developmentSchema*": [
      "clouddirectory:DeleteFacet",
      "clouddirectory:DeleteSchema",
      "clouddirectory:DeleteTypedLinkFacet",
      "clouddirectory:PublishSchema",
      "clouddirectory:UpdateSchema",
      "clouddirectory:UpdateTypedLinkFacet",
      "clouddirectory:UpgradePublishedSchema"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonclouddirectory.html"
  },
  "servicediscovery": {
    "?": [
      "servicediscovery:CreateHttpNamespace",
      "servicediscovery:CreatePrivateDnsNamespace",
      "servicediscovery:CreatePublicDnsNamespace",
      "servicediscovery:DiscoverInstances",
      "servicediscovery:GetInstance",
      "servicediscovery:GetInstancesHealthStatus",
      "servicediscovery:GetOperation",
      "servicediscovery:ListInstances",
      "servicediscovery:ListNamespaces",
      "servicediscovery:ListOperations",
      "servicediscovery:ListServices",
      "servicediscovery:ListTagsForResource",
      "servicediscovery:TagResource",
      "servicediscovery:UntagResource",
      "servicediscovery:UpdateInstanceCustomHealthStatus"
    ],
    "namespace*": [
      "servicediscovery:CreateService",
      "servicediscovery:DeleteNamespace",
      "servicediscovery:GetNamespace",
      "servicediscovery:UpdateHttpNamespace",
      "servicediscovery:UpdatePrivateDnsNamespace",
      "servicediscovery:UpdatePublicDnsNamespace"
    ],
    "service*": [
      "servicediscovery:DeleteService",
      "servicediscovery:DeregisterInstance",
      "servicediscovery:GetService",
      "servicediscovery:RegisterInstance",
      "servicediscovery:UpdateService"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awscloudmap.html"
  },
  "cloud9": {
    "?": [
      "cloud9:CreateEnvironmentEC2",
      "cloud9:ListEnvironments"
    ],
    "environment*": [
      "cloud9:CreateEnvironmentMembership",
      "cloud9:DeleteEnvironment",
      "cloud9:DeleteEnvironmentMembership",
      "cloud9:DescribeEnvironmentMemberships",
      "cloud9:DescribeEnvironmentStatus",
      "cloud9:DescribeEnvironments",
      "cloud9:ListTagsForResource",
      "cloud9:TagResource",
      "cloud9:UntagResource",
      "cloud9:UpdateEnvironment",
      "cloud9:UpdateEnvironmentMembership"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awscloud9.html"
  },
  "cloudfront": {
    "distribution*": [
      "cloudfront:AssociateAlias",
      "cloudfront:CopyDistribution",
      "cloudfront:CreateDistribution",
      "cloudfront:CreateInvalidation",
      "cloudfront:DeleteDistribution",
      "cloudfront:GetDistribution",
      "cloudfront:GetDistributionConfig",
      "cloudfront:GetInvalidation",
      "cloudfront:ListConflictingAliases",
      "cloudfront:ListInvalidations",
      "cloudfront:UpdateDistribution",
      "cloudfront:UpdateDistributionWithStagingConfig"
    ],
    "cache-policy*": [
      "cloudfront:CreateCachePolicy",
      "cloudfront:DeleteCachePolicy",
      "cloudfront:GetCachePolicy",
      "cloudfront:GetCachePolicyConfig",
      "cloudfront:UpdateCachePolicy"
    ],
    "origin-access-identity*": [
      "cloudfront:CreateCloudFrontOriginAccessIdentity",
      "cloudfront:DeleteCloudFrontOriginAccessIdentity",
      "cloudfront:GetCloudFrontOriginAccessIdentity",
      "cloudfront:GetCloudFrontOriginAccessIdentityConfig",
      "cloudfront:UpdateCloudFrontOriginAccessIdentity"
    ],
    "continuous-deployment-policy*": [
      "cloudfront:CreateContinuousDeploymentPolicy",
      "cloudfront:DeleteContinuousDeploymentPolicy",
      "cloudfront:GetContinuousDeploymentPolicy",
      "cloudfront:GetContinuousDeploymentPolicyConfig",
      "cloudfront:UpdateContinuousDeploymentPolicy"
    ],
    "?": [
      "cloudfront:CreateFieldLevelEncryptionConfig",
      "cloudfront:CreateFieldLevelEncryptionProfile",
      "cloudfront:CreateKeyGroup",
      "cloudfront:CreateMonitoringSubscription",
      "cloudfront:CreateOriginAccessControl",
      "cloudfront:CreatePublicKey",
      "cloudfront:DeleteKeyGroup",
      "cloudfront:DeleteMonitoringSubscription",
      "cloudfront:DeletePublicKey",
      "cloudfront:GetKeyGroup",
      "cloudfront:GetKeyGroupConfig",
      "cloudfront:GetMonitoringSubscription",
      "cloudfront:GetPublicKey",
      "cloudfront:GetPublicKeyConfig",
      "cloudfront:ListCachePolicies",
      "cloudfront:ListCloudFrontOriginAccessIdentities",
      "cloudfront:ListContinuousDeploymentPolicies",
      "cloudfront:ListDistributions",
      "cloudfront:ListDistributionsByCachePolicyId",
      "cloudfront:ListDistributionsByKeyGroup",
      "cloudfront:ListDistributionsByOriginRequestPolicyId",
      "cloudfront:ListDistributionsByRealtimeLogConfig",
      "cloudfront:ListDistributionsByResponseHeadersPolicyId",
      "cloudfront:ListDistributionsByWebACLId",
      "cloudfront:ListFieldLevelEncryptionConfigs",
      "cloudfront:ListFieldLevelEncryptionProfiles",
      "cloudfront:ListFunctions",
      "cloudfront:ListKeyGroups",
      "cloudfront:ListOriginAccessControls",
      "cloudfront:ListOriginRequestPolicies",
      "cloudfront:ListPublicKeys",
      "cloudfront:ListRealtimeLogConfigs",
      "cloudfront:ListResponseHeadersPolicies",
      "cloudfront:ListStreamingDistributions",
      "cloudfront:UpdateFieldLevelEncryptionConfig",
      "cloudfront:UpdateKeyGroup",
      "cloudfront:UpdatePublicKey"
    ],
    "function*": [
      "cloudfront:CreateFunction",
      "cloudfront:DeleteFunction",
      "cloudfront:DescribeFunction",
      "cloudfront:GetFunction",
      "cloudfront:PublishFunction",
      "cloudfront:TestFunction",
      "cloudfront:UpdateFunction"
    ],
    "origin-request-policy*": [
      "cloudfront:CreateOriginRequestPolicy",
      "cloudfront:DeleteOriginRequestPolicy",
      "cloudfront:GetOriginRequestPolicy",
      "cloudfront:GetOriginRequestPolicyConfig",
      "cloudfront:UpdateOriginRequestPolicy"
    ],
    "realtime-log-config*": [
      "cloudfront:CreateRealtimeLogConfig",
      "cloudfront:DeleteRealtimeLogConfig",
      "cloudfront:GetRealtimeLogConfig",
      "cloudfront:UpdateRealtimeLogConfig"
    ],
    "response-headers-policy*": [
      "cloudfront:CreateResponseHeadersPolicy",
      "cloudfront:DeleteResponseHeadersPolicy",
      "cloudfront:GetResponseHeadersPolicy",
      "cloudfront:GetResponseHeadersPolicyConfig",
      "cloudfront:UpdateResponseHeadersPolicy"
    ],
    "streaming-distribution*": [
      "cloudfront:CreateStreamingDistribution",
      "cloudfront:CreateStreamingDistributionWithTags",
      "cloudfront:DeleteStreamingDistribution",
      "cloudfront:GetStreamingDistribution",
      "cloudfront:GetStreamingDistributionConfig",
      "cloudfront:UpdateStreamingDistribution"
    ],
    "field-level-encryption-config*": [
      "cloudfront:DeleteFieldLevelEncryptionConfig",
      "cloudfront:GetFieldLevelEncryption",
      "cloudfront:GetFieldLevelEncryptionConfig"
    ],
    "field-level-encryption-profile*": [
      "cloudfront:DeleteFieldLevelEncryptionProfile",
      "cloudfront:GetFieldLevelEncryptionProfile",
      "cloudfront:GetFieldLevelEncryptionProfileConfig",
      "cloudfront:UpdateFieldLevelEncryptionProfile"
    ],
    "origin-access-control*": [
      "cloudfront:DeleteOriginAccessControl",
      "cloudfront:GetOriginAccessControl",
      "cloudfront:GetOriginAccessControlConfig",
      "cloudfront:UpdateOriginAccessControl"
    ],
    "distribution": [
      "cloudfront:ListTagsForResource",
      "cloudfront:TagResource",
      "cloudfront:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoncloudfront.html"
  },
  "cloudhsm": {
    "?": [
      "cloudhsm:AddTagsToResource",
      "cloudhsm:CreateHapg",
      "cloudhsm:CreateLunaClient",
      "cloudhsm:DeleteHapg",
      "cloudhsm:DeleteHsm",
      "cloudhsm:DeleteLunaClient",
      "cloudhsm:DescribeBackups",
      "cloudhsm:DescribeClusters",
      "cloudhsm:DescribeHapg",
      "cloudhsm:DescribeHsm",
      "cloudhsm:DescribeLunaClient",
      "cloudhsm:GetConfig",
      "cloudhsm:ListAvailableZones",
      "cloudhsm:ListHapgs",
      "cloudhsm:ListHsms",
      "cloudhsm:ListLunaClients",
      "cloudhsm:ListTagsForResource",
      "cloudhsm:ModifyHapg",
      "cloudhsm:ModifyHsm",
      "cloudhsm:ModifyLunaClient",
      "cloudhsm:RemoveTagsFromResource"
    ],
    "backup*": [
      "cloudhsm:CopyBackupToRegion",
      "cloudhsm:DeleteBackup",
      "cloudhsm:ModifyBackupAttributes",
      "cloudhsm:RestoreBackup"
    ],
    "backup": [
      "cloudhsm:CreateCluster",
      "cloudhsm:ListTags",
      "cloudhsm:TagResource",
      "cloudhsm:UntagResource"
    ],
    "cluster*": [
      "cloudhsm:CreateHsm",
      "cloudhsm:DeleteCluster",
      "cloudhsm:InitializeCluster",
      "cloudhsm:ModifyCluster"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awscloudhsm.html"
  },
  "cloudsearch": {
    "domain*": [
      "cloudsearch:AddTags",
      "cloudsearch:BuildSuggesters",
      "cloudsearch:CreateDomain",
      "cloudsearch:DefineAnalysisScheme",
      "cloudsearch:DefineExpression",
      "cloudsearch:DefineIndexField",
      "cloudsearch:DefineSuggester",
      "cloudsearch:DeleteAnalysisScheme",
      "cloudsearch:DeleteDomain",
      "cloudsearch:DeleteExpression",
      "cloudsearch:DeleteIndexField",
      "cloudsearch:DeleteSuggester",
      "cloudsearch:DescribeAnalysisSchemes",
      "cloudsearch:DescribeAvailabilityOptions",
      "cloudsearch:DescribeDomainEndpointOptions",
      "cloudsearch:DescribeDomains",
      "cloudsearch:DescribeExpressions",
      "cloudsearch:DescribeIndexFields",
      "cloudsearch:DescribeScalingParameters",
      "cloudsearch:DescribeServiceAccessPolicies",
      "cloudsearch:DescribeSuggesters",
      "cloudsearch:IndexDocuments",
      "cloudsearch:ListDomainNames",
      "cloudsearch:ListTags",
      "cloudsearch:RemoveTags",
      "cloudsearch:UpdateAvailabilityOptions",
      "cloudsearch:UpdateDomainEndpointOptions",
      "cloudsearch:UpdateScalingParameters",
      "cloudsearch:UpdateServiceAccessPolicies"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoncloudsearch.html"
  },
  "cloudshell": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awscloudshell.html"
  },
  "cloudtrail": {
    "channel": [
      "cloudtrail:AddTags",
      "cloudtrail:ListTags",
      "cloudtrail:RemoveTags"
    ],
    "eventdatastore*": [
      "cloudtrail:CancelQuery",
      "cloudtrail:CreateEventDataStore",
      "cloudtrail:DeleteEventDataStore",
      "cloudtrail:DescribeQuery",
      "cloudtrail:GetEventDataStore",
      "cloudtrail:GetQueryResults",
      "cloudtrail:ListQueries",
      "cloudtrail:RestoreEventDataStore",
      "cloudtrail:StartQuery",
      "cloudtrail:UpdateEventDataStore"
    ],
    "channel*": [
      "cloudtrail:CreateChannel",
      "cloudtrail:DeleteChannel",
      "cloudtrail:DeleteResourcePolicy",
      "cloudtrail:GetChannel",
      "cloudtrail:GetResourcePolicy",
      "cloudtrail:PutResourcePolicy",
      "cloudtrail:UpdateChannel"
    ],
    "trail*": [
      "cloudtrail:CreateTrail",
      "cloudtrail:DeleteTrail",
      "cloudtrail:GetEventSelectors",
      "cloudtrail:GetInsightSelectors",
      "cloudtrail:GetTrail",
      "cloudtrail:GetTrailStatus",
      "cloudtrail:PutEventSelectors",
      "cloudtrail:PutInsightSelectors",
      "cloudtrail:StartLogging",
      "cloudtrail:StopLogging",
      "cloudtrail:UpdateTrail"
    ],
    "?": [
      "cloudtrail:DeregisterOrganizationDelegatedAdmin",
      "cloudtrail:DescribeTrails",
      "cloudtrail:GetImport",
      "cloudtrail:ListChannels",
      "cloudtrail:ListEventDataStores",
      "cloudtrail:ListImportFailures",
      "cloudtrail:ListImports",
      "cloudtrail:ListPublicKeys",
      "cloudtrail:ListTrails",
      "cloudtrail:LookupEvents",
      "cloudtrail:RegisterOrganizationDelegatedAdmin",
      "cloudtrail:StartImport",
      "cloudtrail:StopImport"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awscloudtrail.html"
  },
  "cloudtrail-data": {
    "channel*": [
      "cloudtrail-data:PutAuditEvents"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awscloudtraildata.html"
  },
  "cloudwatch": {
    "alarm*": [
      "cloudwatch:DeleteAlarms",
      "cloudwatch:DescribeAlarmHistory",
      "cloudwatch:DescribeAlarms",
      "cloudwatch:DisableAlarmActions",
      "cloudwatch:EnableAlarmActions",
      "cloudwatch:PutCompositeAlarm",
      "cloudwatch:PutMetricAlarm",
      "cloudwatch:SetAlarmState"
    ],
    "?": [
      "cloudwatch:DeleteAnomalyDetector",
      "cloudwatch:DescribeAlarmsForMetric",
      "cloudwatch:DescribeAnomalyDetectors",
      "cloudwatch:DescribeInsightRules",
      "cloudwatch:GetMetricData",
      "cloudwatch:GetMetricStatistics",
      "cloudwatch:GetMetricWidgetImage",
      "cloudwatch:ListDashboards",
      "cloudwatch:ListManagedInsightRules",
      "cloudwatch:ListMetricStreams",
      "cloudwatch:ListMetrics",
      "cloudwatch:PutAnomalyDetector",
      "cloudwatch:PutManagedInsightRules",
      "cloudwatch:PutMetricData"
    ],
    "dashboard*": [
      "cloudwatch:DeleteDashboards",
      "cloudwatch:GetDashboard",
      "cloudwatch:PutDashboard"
    ],
    "insight-rule*": [
      "cloudwatch:DeleteInsightRules",
      "cloudwatch:DisableInsightRules",
      "cloudwatch:EnableInsightRules",
      "cloudwatch:GetInsightRuleReport",
      "cloudwatch:PutInsightRule"
    ],
    "metric-stream*": [
      "cloudwatch:DeleteMetricStream",
      "cloudwatch:GetMetricStream",
      "cloudwatch:PutMetricStream",
      "cloudwatch:StartMetricStreams",
      "cloudwatch:StopMetricStreams"
    ],
    "alarm": [
      "cloudwatch:ListTagsForResource",
      "cloudwatch:TagResource",
      "cloudwatch:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoncloudwatch.html"
  },
  "applicationinsights": {
    "?": [
      "applicationinsights:CreateApplication",
      "applicationinsights:CreateComponent",
      "applicationinsights:CreateLogPattern",
      "applicationinsights:DeleteApplication",
      "applicationinsights:DeleteComponent",
      "applicationinsights:DeleteLogPattern",
      "applicationinsights:DescribeApplication",
      "applicationinsights:DescribeComponent",
      "applicationinsights:DescribeComponentConfiguration",
      "applicationinsights:DescribeComponentConfigurationRecommendation",
      "applicationinsights:DescribeLogPattern",
      "applicationinsights:DescribeObservation",
      "applicationinsights:DescribeProblem",
      "applicationinsights:DescribeProblemObservations",
      "applicationinsights:ListApplications",
      "applicationinsights:ListComponents",
      "applicationinsights:ListConfigurationHistory",
      "applicationinsights:ListLogPatternSets",
      "applicationinsights:ListLogPatterns",
      "applicationinsights:ListProblems",
      "applicationinsights:ListTagsForResource",
      "applicationinsights:TagResource",
      "applicationinsights:UntagResource",
      "applicationinsights:UpdateApplication",
      "applicationinsights:UpdateComponent",
      "applicationinsights:UpdateComponentConfiguration",
      "applicationinsights:UpdateLogPattern"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoncloudwatchapplicationinsights.html"
  },
  "evidently": {
    "Feature*": [
      "evidently:BatchEvaluateFeature",
      "evidently:DeleteFeature",
      "evidently:EvaluateFeature",
      "evidently:GetFeature",
      "evidently:UpdateFeature"
    ],
    "?": [
      "evidently:CreateExperiment",
      "evidently:CreateFeature",
      "evidently:CreateLaunch",
      "evidently:CreateProject",
      "evidently:CreateSegment",
      "evidently:ListExperiments",
      "evidently:ListFeatures",
      "evidently:ListLaunches",
      "evidently:ListProjects",
      "evidently:ListSegmentReferences",
      "evidently:ListSegments",
      "evidently:ListTagsForResource",
      "evidently:TestSegmentPattern"
    ],
    "Experiment*": [
      "evidently:DeleteExperiment",
      "evidently:GetExperiment",
      "evidently:GetExperimentResults",
      "evidently:StartExperiment",
      "evidently:StopExperiment",
      "evidently:UpdateExperiment"
    ],
    "Launch*": [
      "evidently:DeleteLaunch",
      "evidently:GetLaunch",
      "evidently:StartLaunch",
      "evidently:StopLaunch",
      "evidently:UpdateLaunch"
    ],
    "Project*": [
      "evidently:DeleteProject",
      "evidently:GetProject",
      "evidently:PutProjectEvents",
      "evidently:UpdateProject",
      "evidently:UpdateProjectDataDelivery"
    ],
    "Segment*": [
      "evidently:DeleteSegment",
      "evidently:GetSegment"
    ],
    "Experiment": [
      "evidently:TagResource",
      "evidently:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoncloudwatchevidently.html"
  },
  "internetmonitor": {
    "Monitor*": [
      "internetmonitor:CreateMonitor",
      "internetmonitor:DeleteMonitor",
      "internetmonitor:GetMonitor",
      "internetmonitor:ListHealthEvents",
      "internetmonitor:ListTagsForResource",
      "internetmonitor:TagResource",
      "internetmonitor:UntagResource",
      "internetmonitor:UpdateMonitor"
    ],
    "HealthEvent*": [
      "internetmonitor:GetHealthEvent"
    ],
    "?": [
      "internetmonitor:ListMonitors"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoncloudwatchinternetmonitor.html"
  },
  "logs": {
    "log-group*": [
      "logs:AssociateKmsKey",
      "logs:CreateExportTask",
      "logs:CreateLogGroup",
      "logs:CreateLogStream",
      "logs:DeleteDataProtectionPolicy",
      "logs:DeleteLogGroup",
      "logs:DeleteMetricFilter",
      "logs:DeleteRetentionPolicy",
      "logs:DeleteSubscriptionFilter",
      "logs:DescribeLogGroups",
      "logs:DescribeLogStreams",
      "logs:DescribeMetricFilters",
      "logs:DescribeSubscriptionFilters",
      "logs:DisassociateKmsKey",
      "logs:FilterLogEvents",
      "logs:GetDataProtectionPolicy",
      "logs:GetLogGroupFields",
      "logs:ListTagsLogGroup",
      "logs:PutDataProtectionPolicy",
      "logs:PutMetricFilter",
      "logs:PutRetentionPolicy",
      "logs:PutSubscriptionFilter",
      "logs:StartQuery",
      "logs:TagLogGroup",
      "logs:UntagLogGroup"
    ],
    "?": [
      "logs:CancelExportTask",
      "logs:DeleteQueryDefinition",
      "logs:DeleteResourcePolicy",
      "logs:DescribeDestinations",
      "logs:DescribeExportTasks",
      "logs:DescribeQueries",
      "logs:DescribeQueryDefinitions",
      "logs:DescribeResourcePolicies",
      "logs:GetLogRecord",
      "logs:GetQueryResults",
      "logs:PutQueryDefinition",
      "logs:PutResourcePolicy",
      "logs:StopQuery",
      "logs:TestMetricFilter"
    ],
    "destination*": [
      "logs:DeleteDestination",
      "logs:PutDestination",
      "logs:PutDestinationPolicy"
    ],
    "log-stream*": [
      "logs:DeleteLogStream",
      "logs:GetLogEvents",
      "logs:PutLogEvents"
    ],
    "destination": [
      "logs:ListTagsForResource",
      "logs:TagResource",
      "logs:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoncloudwatchlogs.html"
  },
  "oam": {
    "Sink*": [
      "oam:CreateLink",
      "oam:DeleteSink",
      "oam:GetSink",
      "oam:GetSinkPolicy",
      "oam:ListAttachedLinks",
      "oam:PutSinkPolicy"
    ],
    "?": [
      "oam:CreateSink",
      "oam:ListLinks",
      "oam:ListSinks"
    ],
    "Link*": [
      "oam:DeleteLink",
      "oam:GetLink",
      "oam:UpdateLink"
    ],
    "Link": [
      "oam:ListTagsForResource",
      "oam:TagResource",
      "oam:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoncloudwatchobservabilityaccessmanager.html"
  },
  "rum": {
    "AppMonitorResource*": [
      "rum:BatchCreateRumMetricDefinitions",
      "rum:BatchDeleteRumMetricDefinitions",
      "rum:BatchGetRumMetricDefinitions",
      "rum:CreateAppMonitor",
      "rum:DeleteAppMonitor",
      "rum:DeleteRumMetricsDestination",
      "rum:GetAppMonitor",
      "rum:GetAppMonitorData",
      "rum:ListRumMetricsDestinations",
      "rum:PutRumEvents",
      "rum:PutRumMetricsDestination",
      "rum:TagResource",
      "rum:UntagResource",
      "rum:UpdateAppMonitor",
      "rum:UpdateRumMetricDefinition"
    ],
    "?": [
      "rum:ListAppMonitors",
      "rum:ListTagsForResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awscloudwatchrum.html"
  },
  "synthetics": {
    "group*": [
      "synthetics:AssociateResource",
      "synthetics:DeleteGroup",
      "synthetics:DisassociateResource",
      "synthetics:GetGroup",
      "synthetics:ListGroupResources"
    ],
    "?": [
      "synthetics:CreateCanary",
      "synthetics:CreateGroup",
      "synthetics:DescribeCanaries",
      "synthetics:DescribeCanariesLastRun",
      "synthetics:DescribeRuntimeVersions",
      "synthetics:ListGroups"
    ],
    "canary*": [
      "synthetics:DeleteCanary",
      "synthetics:GetCanary",
      "synthetics:GetCanaryRuns",
      "synthetics:ListAssociatedGroups",
      "synthetics:StartCanary",
      "synthetics:StopCanary",
      "synthetics:UpdateCanary"
    ],
    "canary": [
      "synthetics:ListTagsForResource",
      "synthetics:TagResource",
      "synthetics:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoncloudwatchsynthetics.html"
  },
  "codeartifact": {
    "repository*": [
      "codeartifact:AssociateExternalConnection",
      "codeartifact:AssociateWithDownstreamRepository",
      "codeartifact:DeleteRepository",
      "codeartifact:DeleteRepositoryPermissionsPolicy",
      "codeartifact:DescribeRepository",
      "codeartifact:DisassociateExternalConnection",
      "codeartifact:GetRepositoryEndpoint",
      "codeartifact:GetRepositoryPermissionsPolicy",
      "codeartifact:ListPackages",
      "codeartifact:PutRepositoryPermissionsPolicy",
      "codeartifact:ReadFromRepository",
      "codeartifact:UpdateRepository"
    ],
    "package*": [
      "codeartifact:CopyPackageVersions",
      "codeartifact:DeletePackage",
      "codeartifact:DeletePackageVersions",
      "codeartifact:DescribePackage",
      "codeartifact:DescribePackageVersion",
      "codeartifact:DisposePackageVersions",
      "codeartifact:GetPackageVersionAsset",
      "codeartifact:GetPackageVersionReadme",
      "codeartifact:ListPackageVersionAssets",
      "codeartifact:ListPackageVersionDependencies",
      "codeartifact:ListPackageVersions",
      "codeartifact:PublishPackageVersion",
      "codeartifact:PutPackageMetadata",
      "codeartifact:PutPackageOriginConfiguration",
      "codeartifact:UpdatePackageVersionsStatus"
    ],
    "?": [
      "codeartifact:CreateDomain",
      "codeartifact:CreateRepository",
      "codeartifact:ListDomains",
      "codeartifact:ListRepositories"
    ],
    "domain*": [
      "codeartifact:DeleteDomain",
      "codeartifact:DeleteDomainPermissionsPolicy",
      "codeartifact:DescribeDomain",
      "codeartifact:GetAuthorizationToken",
      "codeartifact:GetDomainPermissionsPolicy",
      "codeartifact:ListRepositoriesInDomain",
      "codeartifact:PutDomainPermissionsPolicy"
    ],
    "domain": [
      "codeartifact:ListTagsForResource",
      "codeartifact:TagResource",
      "codeartifact:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awscodeartifact.html"
  },
  "codebuild": {
    "project*": [
      "codebuild:BatchDeleteBuilds",
      "codebuild:BatchGetBuildBatches",
      "codebuild:BatchGetBuilds",
      "codebuild:BatchGetProjects",
      "codebuild:CreateProject",
      "codebuild:CreateWebhook",
      "codebuild:DeleteBuildBatch",
      "codebuild:DeleteProject",
      "codebuild:DeleteWebhook",
      "codebuild:InvalidateProjectCache",
      "codebuild:ListBuildBatchesForProject",
      "codebuild:ListBuildsForProject",
      "codebuild:RetryBuild",
      "codebuild:RetryBuildBatch",
      "codebuild:StartBuild",
      "codebuild:StartBuildBatch",
      "codebuild:StopBuild",
      "codebuild:StopBuildBatch",
      "codebuild:UpdateProject",
      "codebuild:UpdateProjectVisibility",
      "codebuild:UpdateWebhook"
    ],
    "report-group*": [
      "codebuild:BatchGetReportGroups",
      "codebuild:BatchGetReports",
      "codebuild:CreateReportGroup",
      "codebuild:DeleteReport",
      "codebuild:DeleteReportGroup",
      "codebuild:DescribeCodeCoverages",
      "codebuild:DescribeTestCases",
      "codebuild:GetReportGroupTrend",
      "codebuild:ListReportsForReportGroup",
      "codebuild:UpdateReportGroup"
    ],
    "project": [
      "codebuild:DeleteResourcePolicy",
      "codebuild:GetResourcePolicy",
      "codebuild:PutResourcePolicy"
    ],
    "?": [
      "codebuild:DeleteSourceCredentials",
      "codebuild:ImportSourceCredentials",
      "codebuild:ListBuildBatches",
      "codebuild:ListBuilds",
      "codebuild:ListCuratedEnvironmentImages",
      "codebuild:ListProjects",
      "codebuild:ListReportGroups",
      "codebuild:ListReports",
      "codebuild:ListSharedProjects",
      "codebuild:ListSharedReportGroups",
      "codebuild:ListSourceCredentials"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awscodebuild.html"
  },
  "codecatalyst": {
    "?": [
      "codecatalyst:AcceptConnection",
      "codecatalyst:GetPendingConnection",
      "codecatalyst:ListConnections",
      "codecatalyst:RejectConnection"
    ],
    "connections*": [
      "codecatalyst:AssociateIamRoleToConnection",
      "codecatalyst:DeleteConnection",
      "codecatalyst:DisassociateIamRoleFromConnection",
      "codecatalyst:GetBillingAuthorization",
      "codecatalyst:GetConnection",
      "codecatalyst:ListIamRolesForConnection",
      "codecatalyst:PutBillingAuthorization"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoncodecatalyst.html"
  },
  "codecommit": {
    "repository*": [
      "codecommit:AssociateApprovalRuleTemplateWithRepository",
      "codecommit:BatchAssociateApprovalRuleTemplateWithRepositories",
      "codecommit:BatchDescribeMergeConflicts",
      "codecommit:BatchDisassociateApprovalRuleTemplateFromRepositories",
      "codecommit:BatchGetCommits",
      "codecommit:BatchGetRepositories",
      "codecommit:CreateBranch",
      "codecommit:CreateCommit",
      "codecommit:CreatePullRequest",
      "codecommit:CreatePullRequestApprovalRule",
      "codecommit:CreateRepository",
      "codecommit:CreateUnreferencedMergeCommit",
      "codecommit:DeleteBranch",
      "codecommit:DeleteCommentContent",
      "codecommit:DeleteFile",
      "codecommit:DeletePullRequestApprovalRule",
      "codecommit:DeleteRepository",
      "codecommit:DescribeMergeConflicts",
      "codecommit:DescribePullRequestEvents",
      "codecommit:DisassociateApprovalRuleTemplateFromRepository",
      "codecommit:EvaluatePullRequestApprovalRules",
      "codecommit:GetBlob",
      "codecommit:GetBranch",
      "codecommit:GetComment",
      "codecommit:GetCommentReactions",
      "codecommit:GetCommentsForComparedCommit",
      "codecommit:GetCommentsForPullRequest",
      "codecommit:GetCommit",
      "codecommit:GetDifferences",
      "codecommit:GetFile",
      "codecommit:GetFolder",
      "codecommit:GetMergeCommit",
      "codecommit:GetMergeConflicts",
      "codecommit:GetMergeOptions",
      "codecommit:GetPullRequest",
      "codecommit:GetPullRequestApprovalStates",
      "codecommit:GetPullRequestOverrideState",
      "codecommit:GetRepository",
      "codecommit:GetRepositoryTriggers",
      "codecommit:ListAssociatedApprovalRuleTemplatesForRepository",
      "codecommit:ListBranches",
      "codecommit:ListPullRequests",
      "codecommit:MergeBranchesByFastForward",
      "codecommit:MergeBranchesBySquash",
      "codecommit:MergeBranchesByThreeWay",
      "codecommit:MergePullRequestByFastForward",
      "codecommit:MergePullRequestBySquash",
      "codecommit:MergePullRequestByThreeWay",
      "codecommit:OverridePullRequestApprovalRules",
      "codecommit:PostCommentForComparedCommit",
      "codecommit:PostCommentForPullRequest",
      "codecommit:PostCommentReply",
      "codecommit:PutCommentReaction",
      "codecommit:PutFile",
      "codecommit:PutRepositoryTriggers",
      "codecommit:TestRepositoryTriggers",
      "codecommit:UpdateComment",
      "codecommit:UpdateDefaultBranch",
      "codecommit:UpdatePullRequestApprovalRuleContent",
      "codecommit:UpdatePullRequestApprovalState",
      "codecommit:UpdatePullRequestDescription",
      "codecommit:UpdatePullRequestStatus",
      "codecommit:UpdatePullRequestTitle",
      "codecommit:UpdateRepositoryDescription",
      "codecommit:UpdateRepositoryName"
    ],
    "?": [
      "codecommit:CreateApprovalRuleTemplate",
      "codecommit:DeleteApprovalRuleTemplate",
      "codecommit:GetApprovalRuleTemplate",
      "codecommit:ListApprovalRuleTemplates",
      "codecommit:ListRepositories",
      "codecommit:ListRepositoriesForApprovalRuleTemplate",
      "codecommit:UpdateApprovalRuleTemplateContent",
      "codecommit:UpdateApprovalRuleTemplateDescription",
      "codecommit:UpdateApprovalRuleTemplateName"
    ],
    "repository": [
      "codecommit:ListTagsForResource",
      "codecommit:TagResource",
      "codecommit:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awscodecommit.html"
  },
  "codedeploy": {
    "instance*": [
      "codedeploy:AddTagsToOnPremisesInstances",
      "codedeploy:BatchGetOnPremisesInstances",
      "codedeploy:DeregisterOnPremisesInstance",
      "codedeploy:GetOnPremisesInstance",
      "codedeploy:RegisterOnPremisesInstance",
      "codedeploy:RemoveTagsFromOnPremisesInstances"
    ],
    "application*": [
      "codedeploy:BatchGetApplicationRevisions",
      "codedeploy:BatchGetApplications",
      "codedeploy:CreateApplication",
      "codedeploy:DeleteApplication",
      "codedeploy:GetApplication",
      "codedeploy:GetApplicationRevision",
      "codedeploy:ListApplicationRevisions",
      "codedeploy:ListDeploymentGroups",
      "codedeploy:RegisterApplicationRevision",
      "codedeploy:UpdateApplication"
    ],
    "deploymentgroup*": [
      "codedeploy:BatchGetDeploymentGroups",
      "codedeploy:BatchGetDeploymentInstances",
      "codedeploy:BatchGetDeployments",
      "codedeploy:CreateDeployment",
      "codedeploy:CreateDeploymentGroup",
      "codedeploy:DeleteDeploymentGroup",
      "codedeploy:GetDeployment",
      "codedeploy:GetDeploymentGroup",
      "codedeploy:GetDeploymentInstance",
      "codedeploy:ListDeploymentInstances",
      "codedeploy:ListDeployments",
      "codedeploy:UpdateDeploymentGroup"
    ],
    "?": [
      "codedeploy:BatchGetDeploymentTargets",
      "codedeploy:ContinueDeployment",
      "codedeploy:DeleteGitHubAccountToken",
      "codedeploy:DeleteResourcesByExternalId",
      "codedeploy:GetDeploymentTarget",
      "codedeploy:ListApplications",
      "codedeploy:ListDeploymentConfigs",
      "codedeploy:ListDeploymentTargets",
      "codedeploy:ListGitHubAccountTokenNames",
      "codedeploy:ListOnPremisesInstances",
      "codedeploy:PutLifecycleEventHookExecutionStatus",
      "codedeploy:SkipWaitTimeForInstanceTermination",
      "codedeploy:StopDeployment"
    ],
    "deploymentconfig*": [
      "codedeploy:CreateDeploymentConfig",
      "codedeploy:DeleteDeploymentConfig",
      "codedeploy:GetDeploymentConfig"
    ],
    "application": [
      "codedeploy:ListTagsForResource",
      "codedeploy:TagResource",
      "codedeploy:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awscodedeploy.html"
  },
  "codedeploy-commands-secure": {
    "?": [
      "codedeploy-commands-secure:GetDeploymentSpecification",
      "codedeploy-commands-secure:PollHostCommand",
      "codedeploy-commands-secure:PutHostCommandAcknowledgement",
      "codedeploy-commands-secure:PutHostCommandComplete"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awscodedeploysecurehostcommandsservice.html"
  },
  "codeguru": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoncodeguru.html"
  },
  "codeguru-profiler": {
    "ProfilingGroup*": [
      "codeguru-profiler:AddNotificationChannels",
      "codeguru-profiler:BatchGetFrameMetricData",
      "codeguru-profiler:ConfigureAgent",
      "codeguru-profiler:DeleteProfilingGroup",
      "codeguru-profiler:DescribeProfilingGroup",
      "codeguru-profiler:GetNotificationConfiguration",
      "codeguru-profiler:GetPolicy",
      "codeguru-profiler:GetProfile",
      "codeguru-profiler:GetRecommendations",
      "codeguru-profiler:ListFindingsReports",
      "codeguru-profiler:ListProfileTimes",
      "codeguru-profiler:ListTagsForResource",
      "codeguru-profiler:PostAgentProfile",
      "codeguru-profiler:PutPermission",
      "codeguru-profiler:RemoveNotificationChannel",
      "codeguru-profiler:RemovePermission",
      "codeguru-profiler:SubmitFeedback",
      "codeguru-profiler:TagResource",
      "codeguru-profiler:UntagResource",
      "codeguru-profiler:UpdateProfilingGroup"
    ],
    "?": [
      "codeguru-profiler:CreateProfilingGroup",
      "codeguru-profiler:GetFindingsReportAccountSummary",
      "codeguru-profiler:ListProfilingGroups"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoncodeguruprofiler.html"
  },
  "codeguru-reviewer": {
    "?": [
      "codeguru-reviewer:AssociateRepository",
      "codeguru-reviewer:ListCodeReviews",
      "codeguru-reviewer:ListRepositoryAssociations"
    ],
    "association*": [
      "codeguru-reviewer:CreateCodeReview",
      "codeguru-reviewer:DescribeCodeReview",
      "codeguru-reviewer:DescribeRecommendationFeedback",
      "codeguru-reviewer:DescribeRepositoryAssociation",
      "codeguru-reviewer:DisassociateRepository",
      "codeguru-reviewer:ListRecommendationFeedback",
      "codeguru-reviewer:ListRecommendations",
      "codeguru-reviewer:ListTagsForResource",
      "codeguru-reviewer:PutRecommendationFeedback",
      "codeguru-reviewer:TagResource",
      "codeguru-reviewer:UnTagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoncodegurureviewer.html"
  },
  "codeguru-security": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoncodegurusecurity.html"
  },
  "codepipeline": {
    "?": [
      "codepipeline:AcknowledgeJob",
      "codepipeline:AcknowledgeThirdPartyJob",
      "codepipeline:GetActionType",
      "codepipeline:GetJobDetails",
      "codepipeline:GetThirdPartyJobDetails",
      "codepipeline:ListActionTypes",
      "codepipeline:ListPipelines",
      "codepipeline:PollForThirdPartyJobs",
      "codepipeline:PutJobFailureResult",
      "codepipeline:PutJobSuccessResult",
      "codepipeline:PutThirdPartyJobFailureResult",
      "codepipeline:PutThirdPartyJobSuccessResult"
    ],
    "actiontype*": [
      "codepipeline:CreateCustomActionType",
      "codepipeline:DeleteCustomActionType",
      "codepipeline:PollForJobs",
      "codepipeline:UpdateActionType"
    ],
    "pipeline*": [
      "codepipeline:CreatePipeline",
      "codepipeline:DeletePipeline",
      "codepipeline:GetPipeline",
      "codepipeline:GetPipelineExecution",
      "codepipeline:GetPipelineState",
      "codepipeline:ListActionExecutions",
      "codepipeline:ListPipelineExecutions",
      "codepipeline:PutWebhook",
      "codepipeline:StartPipelineExecution",
      "codepipeline:StopPipelineExecution",
      "codepipeline:UpdatePipeline"
    ],
    "webhook*": [
      "codepipeline:DeleteWebhook",
      "codepipeline:DeregisterWebhookWithThirdParty",
      "codepipeline:ListWebhooks",
      "codepipeline:RegisterWebhookWithThirdParty"
    ],
    "stage*": [
      "codepipeline:DisableStageTransition",
      "codepipeline:EnableStageTransition",
      "codepipeline:RetryStageExecution"
    ],
    "actiontype": [
      "codepipeline:ListTagsForResource",
      "codepipeline:TagResource",
      "codepipeline:UntagResource"
    ],
    "action*": [
      "codepipeline:PutActionRevision",
      "codepipeline:PutApprovalResult"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awscodepipeline.html"
  },
  "codestar": {
    "project*": [
      "codestar:AssociateTeamMember",
      "codestar:DeleteProject",
      "codestar:DescribeProject",
      "codestar:DisassociateTeamMember",
      "codestar:ListResources",
      "codestar:ListTagsForProject",
      "codestar:ListTeamMembers",
      "codestar:TagProject",
      "codestar:UntagProject",
      "codestar:UpdateProject",
      "codestar:UpdateTeamMember"
    ],
    "?": [
      "codestar:CreateProject",
      "codestar:DescribeUserProfile",
      "codestar:ListProjects",
      "codestar:ListUserProfiles",
      "codestar:VerifyServiceRole"
    ],
    "user*": [
      "codestar:CreateUserProfile",
      "codestar:DeleteUserProfile",
      "codestar:UpdateUserProfile"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awscodestar.html"
  },
  "codestar-connections": {
    "?": [
      "codestar-connections:CreateConnection",
      "codestar-connections:CreateHost",
      "codestar-connections:ListConnections",
      "codestar-connections:ListHosts"
    ],
    "Connection*": [
      "codestar-connections:DeleteConnection",
      "codestar-connections:GetConnection",
      "codestar-connections:ListTagsForResource",
      "codestar-connections:TagResource",
      "codestar-connections:UntagResource",
      "codestar-connections:UpdateConnectionInstallation"
    ],
    "Host*": [
      "codestar-connections:DeleteHost",
      "codestar-connections:GetHost",
      "codestar-connections:UpdateHost"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awscodestarconnections.html"
  },
  "codestar-notifications": {
    "notificationrule*": [
      "codestar-notifications:CreateNotificationRule",
      "codestar-notifications:DeleteNotificationRule",
      "codestar-notifications:DescribeNotificationRule",
      "codestar-notifications:ListTagsForResource",
      "codestar-notifications:Subscribe",
      "codestar-notifications:TagResource",
      "codestar-notifications:Unsubscribe",
      "codestar-notifications:UntagResource",
      "codestar-notifications:UpdateNotificationRule"
    ],
    "?": [
      "codestar-notifications:DeleteTarget",
      "codestar-notifications:ListEventTypes",
      "codestar-notifications:ListNotificationRules",
      "codestar-notifications:ListTargets"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awscodestarnotifications.html"
  },
  "codewhisperer": {
    "profile*": [
      "codewhisperer:CreateProfile",
      "codewhisperer:UpdateProfile"
    ],
    "?": [
      "codewhisperer:GenerateRecommendations",
      "codewhisperer:ListProfiles"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoncodewhisperer.html"
  },
  "cognito-identity": {
    "?": [
      "cognito-identity:CreateIdentityPool",
      "cognito-identity:DeleteIdentities",
      "cognito-identity:DescribeIdentity",
      "cognito-identity:GetCredentialsForIdentity",
      "cognito-identity:GetId",
      "cognito-identity:GetOpenIdToken",
      "cognito-identity:ListIdentityPools",
      "cognito-identity:SetIdentityPoolRoles",
      "cognito-identity:SetPrincipalTagAttributeMap",
      "cognito-identity:UnlinkIdentity"
    ],
    "identitypool*": [
      "cognito-identity:DeleteIdentityPool",
      "cognito-identity:DescribeIdentityPool",
      "cognito-identity:GetIdentityPoolRoles",
      "cognito-identity:GetOpenIdTokenForDeveloperIdentity",
      "cognito-identity:GetPrincipalTagAttributeMap",
      "cognito-identity:ListIdentities",
      "cognito-identity:LookupDeveloperIdentity",
      "cognito-identity:MergeDeveloperIdentities",
      "cognito-identity:UnlinkDeveloperIdentity",
      "cognito-identity:UpdateIdentityPool"
    ],
    "identitypool": [
      "cognito-identity:ListTagsForResource",
      "cognito-identity:TagResource",
      "cognito-identity:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoncognitoidentity.html"
  },
  "cognito-sync": {
    "identitypool*": [
      "cognito-sync:BulkPublish",
      "cognito-sync:DescribeIdentityPoolUsage",
      "cognito-sync:GetBulkPublishDetails",
      "cognito-sync:GetCognitoEvents",
      "cognito-sync:GetIdentityPoolConfiguration",
      "cognito-sync:ListIdentityPoolUsage",
      "cognito-sync:SetCognitoEvents",
      "cognito-sync:SetIdentityPoolConfiguration"
    ],
    "dataset*": [
      "cognito-sync:DeleteDataset",
      "cognito-sync:DescribeDataset",
      "cognito-sync:ListDatasets",
      "cognito-sync:ListRecords",
      "cognito-sync:SubscribeToDataset",
      "cognito-sync:UnsubscribeFromDataset",
      "cognito-sync:UpdateRecords"
    ],
    "identity*": [
      "cognito-sync:DescribeIdentityUsage",
      "cognito-sync:RegisterDevice"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoncognitosync.html"
  },
  "cognito-idp": {
    "userpool*": [
      "cognito-idp:AddCustomAttributes",
      "cognito-idp:AdminAddUserToGroup",
      "cognito-idp:AdminConfirmSignUp",
      "cognito-idp:AdminCreateUser",
      "cognito-idp:AdminDeleteUser",
      "cognito-idp:AdminDeleteUserAttributes",
      "cognito-idp:AdminDisableProviderForUser",
      "cognito-idp:AdminDisableUser",
      "cognito-idp:AdminEnableUser",
      "cognito-idp:AdminForgetDevice",
      "cognito-idp:AdminGetDevice",
      "cognito-idp:AdminGetUser",
      "cognito-idp:AdminInitiateAuth",
      "cognito-idp:AdminLinkProviderForUser",
      "cognito-idp:AdminListDevices",
      "cognito-idp:AdminListGroupsForUser",
      "cognito-idp:AdminListUserAuthEvents",
      "cognito-idp:AdminRemoveUserFromGroup",
      "cognito-idp:AdminResetUserPassword",
      "cognito-idp:AdminRespondToAuthChallenge",
      "cognito-idp:AdminSetUserMFAPreference",
      "cognito-idp:AdminSetUserPassword",
      "cognito-idp:AdminSetUserSettings",
      "cognito-idp:AdminUpdateAuthEventFeedback",
      "cognito-idp:AdminUpdateDeviceStatus",
      "cognito-idp:AdminUpdateUserAttributes",
      "cognito-idp:AdminUserGlobalSignOut",
      "cognito-idp:CreateGroup",
      "cognito-idp:CreateIdentityProvider",
      "cognito-idp:CreateResourceServer",
      "cognito-idp:CreateUserImportJob",
      "cognito-idp:CreateUserPoolClient",
      "cognito-idp:CreateUserPoolDomain",
      "cognito-idp:DeleteGroup",
      "cognito-idp:DeleteIdentityProvider",
      "cognito-idp:DeleteResourceServer",
      "cognito-idp:DeleteUserPool",
      "cognito-idp:DeleteUserPoolClient",
      "cognito-idp:DeleteUserPoolDomain",
      "cognito-idp:DescribeIdentityProvider",
      "cognito-idp:DescribeResourceServer",
      "cognito-idp:DescribeRiskConfiguration",
      "cognito-idp:DescribeUserImportJob",
      "cognito-idp:DescribeUserPool",
      "cognito-idp:DescribeUserPoolClient",
      "cognito-idp:GetCSVHeader",
      "cognito-idp:GetGroup",
      "cognito-idp:GetIdentityProviderByIdentifier",
      "cognito-idp:GetSigningCertificate",
      "cognito-idp:GetUICustomization",
      "cognito-idp:GetUserPoolMfaConfig",
      "cognito-idp:ListGroups",
      "cognito-idp:ListIdentityProviders",
      "cognito-idp:ListResourceServers",
      "cognito-idp:ListUserImportJobs",
      "cognito-idp:ListUserPoolClients",
      "cognito-idp:ListUsers",
      "cognito-idp:ListUsersInGroup",
      "cognito-idp:SetRiskConfiguration",
      "cognito-idp:SetUICustomization",
      "cognito-idp:SetUserPoolMfaConfig",
      "cognito-idp:StartUserImportJob",
      "cognito-idp:StopUserImportJob",
      "cognito-idp:UpdateAuthEventFeedback",
      "cognito-idp:UpdateGroup",
      "cognito-idp:UpdateIdentityProvider",
      "cognito-idp:UpdateResourceServer",
      "cognito-idp:UpdateUserPool",
      "cognito-idp:UpdateUserPoolClient",
      "cognito-idp:UpdateUserPoolDomain"
    ],
    "?": [
      "cognito-idp:AssociateSoftwareToken",
      "cognito-idp:ChangePassword",
      "cognito-idp:ConfirmDevice",
      "cognito-idp:ConfirmForgotPassword",
      "cognito-idp:ConfirmSignUp",
      "cognito-idp:CreateUserPool",
      "cognito-idp:DeleteUser",
      "cognito-idp:DeleteUserAttributes",
      "cognito-idp:DescribeUserPoolDomain",
      "cognito-idp:ForgetDevice",
      "cognito-idp:ForgotPassword",
      "cognito-idp:GetDevice",
      "cognito-idp:GetUser",
      "cognito-idp:GetUserAttributeVerificationCode",
      "cognito-idp:GlobalSignOut",
      "cognito-idp:InitiateAuth",
      "cognito-idp:ListDevices",
      "cognito-idp:ListUserPools",
      "cognito-idp:ResendConfirmationCode",
      "cognito-idp:RespondToAuthChallenge",
      "cognito-idp:RevokeToken",
      "cognito-idp:SetUserMFAPreference",
      "cognito-idp:SetUserSettings",
      "cognito-idp:SignUp",
      "cognito-idp:UpdateDeviceStatus",
      "cognito-idp:UpdateUserAttributes",
      "cognito-idp:VerifySoftwareToken",
      "cognito-idp:VerifyUserAttribute"
    ],
    "userpool": [
      "cognito-idp:ListTagsForResource",
      "cognito-idp:TagResource",
      "cognito-idp:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoncognitouserpools.html"
  },
  "comprehend": {
    "?": [
      "comprehend:BatchDetectDominantLanguage",
      "comprehend:BatchDetectEntities",
      "comprehend:BatchDetectKeyPhrases",
      "comprehend:BatchDetectSentiment",
      "comprehend:BatchDetectSyntax",
      "comprehend:BatchDetectTargetedSentiment",
      "comprehend:ContainsPiiEntities",
      "comprehend:DetectDominantLanguage",
      "comprehend:DetectKeyPhrases",
      "comprehend:DetectPiiEntities",
      "comprehend:DetectSentiment",
      "comprehend:DetectSyntax",
      "comprehend:DetectTargetedSentiment",
      "comprehend:ListDocumentClassificationJobs",
      "comprehend:ListDocumentClassifierSummaries",
      "comprehend:ListDocumentClassifiers",
      "comprehend:ListDominantLanguageDetectionJobs",
      "comprehend:ListEndpoints",
      "comprehend:ListEntitiesDetectionJobs",
      "comprehend:ListEntityRecognizerSummaries",
      "comprehend:ListEntityRecognizers",
      "comprehend:ListEventsDetectionJobs",
      "comprehend:ListFlywheels",
      "comprehend:ListKeyPhrasesDetectionJobs",
      "comprehend:ListPiiEntitiesDetectionJobs",
      "comprehend:ListSentimentDetectionJobs",
      "comprehend:ListTargetedSentimentDetectionJobs",
      "comprehend:ListTopicsDetectionJobs"
    ],
    "document-classifier-endpoint*": [
      "comprehend:ClassifyDocument",
      "comprehend:DeleteEndpoint",
      "comprehend:DescribeEndpoint",
      "comprehend:UpdateEndpoint"
    ],
    "flywheel*": [
      "comprehend:CreateDataset",
      "comprehend:CreateFlywheel",
      "comprehend:DeleteFlywheel",
      "comprehend:DescribeFlywheel",
      "comprehend:DescribeFlywheelIteration",
      "comprehend:ListDatasets",
      "comprehend:ListFlywheelIterationHistory",
      "comprehend:StartFlywheelIteration",
      "comprehend:UpdateFlywheel"
    ],
    "document-classifier*": [
      "comprehend:CreateDocumentClassifier",
      "comprehend:CreateEndpoint",
      "comprehend:DeleteDocumentClassifier",
      "comprehend:DeleteResourcePolicy",
      "comprehend:DescribeDocumentClassifier",
      "comprehend:DescribeResourcePolicy",
      "comprehend:ImportModel",
      "comprehend:PutResourcePolicy",
      "comprehend:StopTrainingDocumentClassifier"
    ],
    "entity-recognizer*": [
      "comprehend:CreateEntityRecognizer",
      "comprehend:DeleteEntityRecognizer",
      "comprehend:DescribeEntityRecognizer",
      "comprehend:StopTrainingEntityRecognizer"
    ],
    "flywheel-dataset*": [
      "comprehend:DescribeDataset"
    ],
    "document-classification-job*": [
      "comprehend:DescribeDocumentClassificationJob",
      "comprehend:StartDocumentClassificationJob"
    ],
    "dominant-language-detection-job*": [
      "comprehend:DescribeDominantLanguageDetectionJob",
      "comprehend:StartDominantLanguageDetectionJob",
      "comprehend:StopDominantLanguageDetectionJob"
    ],
    "entities-detection-job*": [
      "comprehend:DescribeEntitiesDetectionJob",
      "comprehend:StartEntitiesDetectionJob",
      "comprehend:StopEntitiesDetectionJob"
    ],
    "events-detection-job*": [
      "comprehend:DescribeEventsDetectionJob",
      "comprehend:StartEventsDetectionJob",
      "comprehend:StopEventsDetectionJob"
    ],
    "key-phrases-detection-job*": [
      "comprehend:DescribeKeyPhrasesDetectionJob",
      "comprehend:StartKeyPhrasesDetectionJob",
      "comprehend:StopKeyPhrasesDetectionJob"
    ],
    "pii-entities-detection-job*": [
      "comprehend:DescribePiiEntitiesDetectionJob",
      "comprehend:StartPiiEntitiesDetectionJob",
      "comprehend:StopPiiEntitiesDetectionJob"
    ],
    "sentiment-detection-job*": [
      "comprehend:DescribeSentimentDetectionJob",
      "comprehend:StartSentimentDetectionJob",
      "comprehend:StopSentimentDetectionJob"
    ],
    "targeted-sentiment-detection-job*": [
      "comprehend:DescribeTargetedSentimentDetectionJob",
      "comprehend:StartTargetedSentimentDetectionJob",
      "comprehend:StopTargetedSentimentDetectionJob"
    ],
    "topics-detection-job*": [
      "comprehend:DescribeTopicsDetectionJob",
      "comprehend:StartTopicsDetectionJob"
    ],
    "entity-recognizer-endpoint": [
      "comprehend:DetectEntities"
    ],
    "document-classification-job": [
      "comprehend:ListTagsForResource",
      "comprehend:TagResource",
      "comprehend:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoncomprehend.html"
  },
  "comprehendmedical": {
    "?": [
      "comprehendmedical:DescribeEntitiesDetectionV2Job",
      "comprehendmedical:DescribeICD10CMInferenceJob",
      "comprehendmedical:DescribePHIDetectionJob",
      "comprehendmedical:DescribeRxNormInferenceJob",
      "comprehendmedical:DescribeSNOMEDCTInferenceJob",
      "comprehendmedical:DetectEntitiesV2",
      "comprehendmedical:DetectPHI",
      "comprehendmedical:InferICD10CM",
      "comprehendmedical:InferRxNorm",
      "comprehendmedical:InferSNOMEDCT",
      "comprehendmedical:ListEntitiesDetectionV2Jobs",
      "comprehendmedical:ListICD10CMInferenceJobs",
      "comprehendmedical:ListPHIDetectionJobs",
      "comprehendmedical:ListRxNormInferenceJobs",
      "comprehendmedical:ListSNOMEDCTInferenceJobs",
      "comprehendmedical:StartEntitiesDetectionV2Job",
      "comprehendmedical:StartICD10CMInferenceJob",
      "comprehendmedical:StartPHIDetectionJob",
      "comprehendmedical:StartRxNormInferenceJob",
      "comprehendmedical:StartSNOMEDCTInferenceJob",
      "comprehendmedical:StopEntitiesDetectionV2Job",
      "comprehendmedical:StopICD10CMInferenceJob",
      "comprehendmedical:StopPHIDetectionJob",
      "comprehendmedical:StopRxNormInferenceJob",
      "comprehendmedical:StopSNOMEDCTInferenceJob"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoncomprehendmedical.html"
  },
  "compute-optimizer": {
    "?": [
      "compute-optimizer:DeleteRecommendationPreferences",
      "compute-optimizer:DescribeRecommendationExportJobs",
      "compute-optimizer:ExportAutoScalingGroupRecommendations",
      "compute-optimizer:ExportEBSVolumeRecommendations",
      "compute-optimizer:ExportEC2InstanceRecommendations",
      "compute-optimizer:ExportECSServiceRecommendations",
      "compute-optimizer:ExportLambdaFunctionRecommendations",
      "compute-optimizer:GetAutoScalingGroupRecommendations",
      "compute-optimizer:GetEBSVolumeRecommendations",
      "compute-optimizer:GetEC2InstanceRecommendations",
      "compute-optimizer:GetEC2RecommendationProjectedMetrics",
      "compute-optimizer:GetECSServiceRecommendationProjectedMetrics",
      "compute-optimizer:GetECSServiceRecommendations",
      "compute-optimizer:GetEffectiveRecommendationPreferences",
      "compute-optimizer:GetEnrollmentStatus",
      "compute-optimizer:GetEnrollmentStatusesForOrganization",
      "compute-optimizer:GetLambdaFunctionRecommendations",
      "compute-optimizer:GetRecommendationPreferences",
      "compute-optimizer:GetRecommendationSummaries",
      "compute-optimizer:PutRecommendationPreferences",
      "compute-optimizer:UpdateEnrollmentStatus"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awscomputeoptimizer.html"
  },
  "config": {
    "ConfigurationAggregator*": [
      "config:BatchGetAggregateResourceConfig",
      "config:DeleteConfigurationAggregator",
      "config:DescribeAggregateComplianceByConfigRules",
      "config:DescribeAggregateComplianceByConformancePacks",
      "config:DescribeConfigurationAggregatorSourcesStatus",
      "config:GetAggregateComplianceDetailsByConfigRule",
      "config:GetAggregateConfigRuleComplianceSummary",
      "config:GetAggregateConformancePackComplianceSummary",
      "config:GetAggregateDiscoveredResourceCounts",
      "config:GetAggregateResourceConfig",
      "config:ListAggregateDiscoveredResources",
      "config:PutConfigurationAggregator",
      "config:SelectAggregateResourceConfig"
    ],
    "?": [
      "config:BatchGetResourceConfig",
      "config:DeleteConfigurationRecorder",
      "config:DeleteDeliveryChannel",
      "config:DeletePendingAggregationRequest",
      "config:DeleteRemediationExceptions",
      "config:DeleteResourceConfig",
      "config:DeleteRetentionConfiguration",
      "config:DeliverConfigSnapshot",
      "config:DescribeAggregationAuthorizations",
      "config:DescribeComplianceByResource",
      "config:DescribeConfigurationAggregators",
      "config:DescribeConfigurationRecorderStatus",
      "config:DescribeConfigurationRecorders",
      "config:DescribeDeliveryChannelStatus",
      "config:DescribeDeliveryChannels",
      "config:DescribePendingAggregationRequests",
      "config:DescribeRemediationExceptions",
      "config:DescribeRetentionConfigurations",
      "config:GetComplianceDetailsByResource",
      "config:GetComplianceSummaryByConfigRule",
      "config:GetComplianceSummaryByResourceType",
      "config:GetDiscoveredResourceCounts",
      "config:GetResourceConfigHistory",
      "config:GetResourceEvaluationSummary",
      "config:ListConformancePackComplianceScores",
      "config:ListDiscoveredResources",
      "config:ListResourceEvaluations",
      "config:ListStoredQueries",
      "config:PutConfigurationRecorder",
      "config:PutDeliveryChannel",
      "config:PutEvaluations",
      "config:PutRemediationExceptions",
      "config:PutResourceConfig",
      "config:PutRetentionConfiguration",
      "config:SelectResourceConfig",
      "config:StartConfigurationRecorder",
      "config:StartRemediationExecution",
      "config:StartResourceEvaluation",
      "config:StopConfigurationRecorder"
    ],
    "AggregationAuthorization*": [
      "config:DeleteAggregationAuthorization",
      "config:PutAggregationAuthorization"
    ],
    "ConfigRule*": [
      "config:DeleteConfigRule",
      "config:DeleteEvaluationResults",
      "config:DescribeComplianceByConfigRule",
      "config:DescribeConfigRuleEvaluationStatus",
      "config:DescribeConfigRules",
      "config:GetComplianceDetailsByConfigRule",
      "config:GetCustomRulePolicy",
      "config:PutConfigRule",
      "config:PutExternalEvaluation",
      "config:StartConfigRulesEvaluation"
    ],
    "ConformancePack*": [
      "config:DeleteConformancePack",
      "config:DescribeConformancePackCompliance",
      "config:DescribeConformancePackStatus",
      "config:DescribeConformancePacks",
      "config:GetConformancePackComplianceDetails",
      "config:GetConformancePackComplianceSummary",
      "config:PutConformancePack"
    ],
    "OrganizationConfigRule*": [
      "config:DeleteOrganizationConfigRule",
      "config:DescribeOrganizationConfigRuleStatuses",
      "config:DescribeOrganizationConfigRules",
      "config:GetOrganizationConfigRuleDetailedStatus",
      "config:GetOrganizationCustomRulePolicy",
      "config:PutOrganizationConfigRule"
    ],
    "OrganizationConformancePack*": [
      "config:DeleteOrganizationConformancePack",
      "config:DescribeOrganizationConformancePackStatuses",
      "config:DescribeOrganizationConformancePacks",
      "config:GetOrganizationConformancePackDetailedStatus",
      "config:PutOrganizationConformancePack"
    ],
    "RemediationConfiguration*": [
      "config:DeleteRemediationConfiguration",
      "config:DescribeRemediationConfigurations",
      "config:DescribeRemediationExecutionStatus",
      "config:PutRemediationConfigurations"
    ],
    "StoredQuery*": [
      "config:DeleteStoredQuery",
      "config:GetStoredQuery",
      "config:PutStoredQuery"
    ],
    "AggregationAuthorization": [
      "config:ListTagsForResource",
      "config:TagResource",
      "config:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsconfig.html"
  },
  "connect": {
    "instance*": [
      "connect:AssociateApprovedOrigin",
      "connect:AssociateBot",
      "connect:AssociateDefaultVocabulary",
      "connect:AssociateInstanceStorageConfig",
      "connect:AssociateLambdaFunction",
      "connect:AssociateLexBot",
      "connect:AssociateSecurityKey",
      "connect:ClaimPhoneNumber",
      "connect:CreateIntegrationAssociation",
      "connect:CreateTrafficDistributionGroup",
      "connect:CreateUseCase",
      "connect:DeleteInstance",
      "connect:DeleteIntegrationAssociation",
      "connect:DeleteUseCase",
      "connect:DescribeInstance",
      "connect:DescribeInstanceAttribute",
      "connect:DescribeInstanceStorageConfig",
      "connect:DescribeUserHierarchyStructure",
      "connect:DisassociateApprovedOrigin",
      "connect:DisassociateBot",
      "connect:DisassociateInstanceStorageConfig",
      "connect:DisassociateLambdaFunction",
      "connect:DisassociateLexBot",
      "connect:DisassociateSecurityKey",
      "connect:GetFederationToken",
      "connect:GetFederationTokens",
      "connect:ListApprovedOrigins",
      "connect:ListBots",
      "connect:ListContactFlowModules",
      "connect:ListDefaultVocabularies",
      "connect:ListHoursOfOperations",
      "connect:ListInstanceAttributes",
      "connect:ListInstanceStorageConfigs",
      "connect:ListIntegrationAssociations",
      "connect:ListLambdaFunctions",
      "connect:ListLexBots",
      "connect:ListPrompts",
      "connect:ListRoutingProfiles",
      "connect:ListRules",
      "connect:ListSecurityKeys",
      "connect:ListSecurityProfiles",
      "connect:ListTaskTemplates",
      "connect:ListUseCases",
      "connect:ListUserHierarchyGroups",
      "connect:ListUsers",
      "connect:SearchQueues",
      "connect:SearchRoutingProfiles",
      "connect:SearchSecurityProfiles",
      "connect:SearchUsers",
      "connect:StartContactStreaming",
      "connect:StopContactStreaming",
      "connect:UpdateInstanceAttribute",
      "connect:UpdateInstanceStorageConfig",
      "connect:UpdatePhoneNumber",
      "connect:UpdateRule",
      "connect:UpdateUserHierarchyStructure"
    ],
    "contact-flow*": [
      "connect:AssociatePhoneNumberContactFlow",
      "connect:CreateContactFlow",
      "connect:DeleteContactFlow",
      "connect:DescribeContactFlow",
      "connect:StartChatContact",
      "connect:StartTaskContact",
      "connect:UpdateContactFlowContent",
      "connect:UpdateContactFlowMetadata",
      "connect:UpdateContactFlowName"
    ],
    "queue*": [
      "connect:AssociateQueueQuickConnects",
      "connect:AssociateRoutingProfileQueues",
      "connect:CreateRoutingProfile",
      "connect:DescribeQueue",
      "connect:DisassociateQueueQuickConnects",
      "connect:GetCurrentMetricData",
      "connect:GetMetricData",
      "connect:ListQueueQuickConnects",
      "connect:UpdateQueueMaxContacts",
      "connect:UpdateQueueName",
      "connect:UpdateQueueOutboundCallerConfig",
      "connect:UpdateQueueStatus",
      "connect:UpdateRoutingProfileDefaultOutboundQueue"
    ],
    "agent-status*": [
      "connect:CreateAgentStatus",
      "connect:DescribeAgentStatus",
      "connect:PutUserStatus",
      "connect:UpdateAgentStatus"
    ],
    "contact-flow-module*": [
      "connect:CreateContactFlowModule",
      "connect:DeleteContactFlowModule",
      "connect:DescribeContactFlowModule",
      "connect:UpdateContactFlowModuleContent",
      "connect:UpdateContactFlowModuleMetadata",
      "connect:UpdatedescribeContent"
    ],
    "hours-of-operation*": [
      "connect:CreateHoursOfOperation",
      "connect:CreateQueue",
      "connect:DeleteHoursOfOperation",
      "connect:DescribeHoursOfOperation",
      "connect:UpdateHoursOfOperation",
      "connect:UpdateQueueHoursOfOperation"
    ],
    "?": [
      "connect:CreateInstance",
      "connect:ListInstances",
      "connect:ReplicateInstance"
    ],
    "quick-connect*": [
      "connect:CreateQuickConnect",
      "connect:DeleteQuickConnect",
      "connect:DescribeQuickConnect",
      "connect:UpdateQuickConnectConfig",
      "connect:UpdateQuickConnectName"
    ],
    "rule*": [
      "connect:CreateRule",
      "connect:DeleteRule",
      "connect:DescribeRule"
    ],
    "security-profile*": [
      "connect:CreateSecurityProfile",
      "connect:DeleteSecurityProfile",
      "connect:DescribeSecurityProfile",
      "connect:ListSecurityProfilePermissions",
      "connect:UpdateSecurityProfile",
      "connect:UpdateUserSecurityProfiles"
    ],
    "task-template*": [
      "connect:CreateTaskTemplate",
      "connect:DeleteTaskTemplate",
      "connect:GetTaskTemplate",
      "connect:UpdateTaskTemplate"
    ],
    "routing-profile*": [
      "connect:CreateUser",
      "connect:DescribeRoutingProfile",
      "connect:DisassociateRoutingProfileQueues",
      "connect:ListRoutingProfileQueues",
      "connect:UpdateRoutingProfileConcurrency",
      "connect:UpdateRoutingProfileName",
      "connect:UpdateRoutingProfileQueues",
      "connect:UpdateUserRoutingProfile"
    ],
    "hierarchy-group": [
      "connect:CreateUserHierarchyGroup"
    ],
    "vocabulary*": [
      "connect:CreateVocabulary",
      "connect:DeleteVocabulary",
      "connect:DescribeVocabulary",
      "connect:SearchVocabularies"
    ],
    "traffic-distribution-group*": [
      "connect:DeleteTrafficDistributionGroup",
      "connect:DescribeTrafficDistributionGroup",
      "connect:GetTrafficDistribution",
      "connect:ListTrafficDistributionGroups",
      "connect:UpdateTrafficDistribution"
    ],
    "user*": [
      "connect:DeleteUser",
      "connect:DescribeUser",
      "connect:DismissUserContact",
      "connect:UpdateUserHierarchy",
      "connect:UpdateUserIdentityInfo",
      "connect:UpdateUserPhoneConfig"
    ],
    "hierarchy-group*": [
      "connect:DeleteUserHierarchyGroup",
      "connect:DescribeUserHierarchyGroup",
      "connect:GetCurrentUserData",
      "connect:GetMetricDataV2",
      "connect:UpdateUserHierarchyGroupName"
    ],
    "contact*": [
      "connect:DescribeContact",
      "connect:GetContactAttributes",
      "connect:ListContactReferences",
      "connect:ListRealtimeContactAnalysisSegments",
      "connect:MonitorContact",
      "connect:ResumeContactRecording",
      "connect:StartContactRecording",
      "connect:StartOutboundVoiceContact",
      "connect:StopContact",
      "connect:StopContactRecording",
      "connect:SuspendContactRecording",
      "connect:TransferContact",
      "connect:UpdateContact",
      "connect:UpdateContactAttributes",
      "connect:UpdateContactSchedule",
      "connect:UpdateParticipantRoleConfig"
    ],
    "phone-number*": [
      "connect:DescribePhoneNumber",
      "connect:DisassociatePhoneNumberContactFlow",
      "connect:ReleasePhoneNumber"
    ],
    "wildcard-agent-status*": [
      "connect:ListAgentStatuses"
    ],
    "wildcard-contact-flow*": [
      "connect:ListContactFlows"
    ],
    "wildcard-legacy-phone-number*": [
      "connect:ListPhoneNumbers"
    ],
    "wildcard-phone-number*": [
      "connect:ListPhoneNumbersV2",
      "connect:SearchAvailablePhoneNumbers"
    ],
    "wildcard-queue*": [
      "connect:ListQueues"
    ],
    "wildcard-quick-connect*": [
      "connect:ListQuickConnects"
    ],
    "agent-status": [
      "connect:ListTagsForResource",
      "connect:TagResource",
      "connect:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonconnect.html"
  },
  "cases": {
    "Domain*": [
      "cases:BatchGetField",
      "cases:BatchPutFieldOptions",
      "cases:CreateField",
      "cases:CreateLayout",
      "cases:CreateTemplate",
      "cases:DeleteDomain",
      "cases:GetCaseEventConfiguration",
      "cases:GetDomain",
      "cases:GetLayout",
      "cases:GetTemplate",
      "cases:ListCasesForContact",
      "cases:ListFieldOptions",
      "cases:ListFields",
      "cases:ListLayouts",
      "cases:ListTemplates",
      "cases:PutCaseEventConfiguration",
      "cases:SearchCases",
      "cases:UpdateField",
      "cases:UpdateLayout",
      "cases:UpdateTemplate"
    ],
    "Case*": [
      "cases:CreateCase",
      "cases:CreateRelatedItem",
      "cases:GetCase",
      "cases:SearchRelatedItems",
      "cases:UpdateCase"
    ],
    "?": [
      "cases:CreateDomain",
      "cases:ListDomains",
      "cases:ListTagsForResource"
    ],
    "Case": [
      "cases:TagResource",
      "cases:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonconnectcases.html"
  },
  "profile": {
    "domains*": [
      "profile:AddProfileKey",
      "profile:CreateDomain",
      "profile:CreateIntegrationWorkflow",
      "profile:CreateProfile",
      "profile:DeleteDomain",
      "profile:DeleteIntegration",
      "profile:DeleteProfile",
      "profile:DeleteProfileKey",
      "profile:DeleteProfileObject",
      "profile:DeleteProfileObjectType",
      "profile:DeleteWorkflow",
      "profile:GetAutoMergingPreview",
      "profile:GetDomain",
      "profile:GetIdentityResolutionJob",
      "profile:GetIntegration",
      "profile:GetMatches",
      "profile:GetProfileObjectType",
      "profile:GetWorkflow",
      "profile:GetWorkflowSteps",
      "profile:ListIdentityResolutionJobs",
      "profile:ListIntegrations",
      "profile:ListProfileObjectTypes",
      "profile:ListProfileObjects",
      "profile:ListWorkflows",
      "profile:MergeProfiles",
      "profile:PutIntegration",
      "profile:PutProfileObject",
      "profile:PutProfileObjectType",
      "profile:SearchProfiles",
      "profile:UpdateDomain",
      "profile:UpdateProfile"
    ],
    "?": [
      "profile:GetProfileObjectTypeTemplate",
      "profile:ListAccountIntegrations",
      "profile:ListDomains",
      "profile:ListProfileObjectTypeTemplates",
      "profile:ListTagsForResource",
      "profile:TagResource",
      "profile:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonconnectcustomerprofiles.html"
  },
  "voiceid": {
    "?": [
      "voiceid:CreateDomain",
      "voiceid:ListDomains"
    ],
    "domain*": [
      "voiceid:DeleteDomain",
      "voiceid:DeleteFraudster",
      "voiceid:DeleteSpeaker",
      "voiceid:DescribeDomain",
      "voiceid:DescribeFraudster",
      "voiceid:DescribeFraudsterRegistrationJob",
      "voiceid:DescribeSpeaker",
      "voiceid:DescribeSpeakerEnrollmentJob",
      "voiceid:EvaluateSession",
      "voiceid:ListFraudsterRegistrationJobs",
      "voiceid:ListSpeakerEnrollmentJobs",
      "voiceid:ListSpeakers",
      "voiceid:OptOutSpeaker",
      "voiceid:StartFraudsterRegistrationJob",
      "voiceid:StartSpeakerEnrollmentJob",
      "voiceid:UpdateDomain"
    ],
    "domain": [
      "voiceid:ListTagsForResource",
      "voiceid:TagResource",
      "voiceid:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonconnectvoiceid.html"
  },
  "wisdom": {
    "?": [
      "wisdom:CreateAssistant",
      "wisdom:CreateKnowledgeBase",
      "wisdom:ListAssistants",
      "wisdom:ListKnowledgeBases",
      "wisdom:ListTagsForResource",
      "wisdom:TagResource",
      "wisdom:UntagResource"
    ],
    "Assistant*": [
      "wisdom:CreateAssistantAssociation",
      "wisdom:CreateSession",
      "wisdom:DeleteAssistant",
      "wisdom:DeleteAssistantAssociation",
      "wisdom:GetAssistant",
      "wisdom:GetAssistantAssociation",
      "wisdom:GetRecommendations",
      "wisdom:GetSession",
      "wisdom:ListAssistantAssociations",
      "wisdom:NotifyRecommendationsReceived",
      "wisdom:QueryAssistant",
      "wisdom:SearchSessions"
    ],
    "KnowledgeBase*": [
      "wisdom:CreateContent",
      "wisdom:DeleteKnowledgeBase",
      "wisdom:GetKnowledgeBase",
      "wisdom:ListContents",
      "wisdom:RemoveKnowledgeBaseTemplateUri",
      "wisdom:SearchContent",
      "wisdom:StartContentUpload",
      "wisdom:UpdateKnowledgeBaseTemplateUri"
    ],
    "Content*": [
      "wisdom:DeleteContent",
      "wisdom:GetContent",
      "wisdom:GetContentSummary",
      "wisdom:UpdateContent"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonconnectwisdom.html"
  },
  "awsconnector": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsconnectorservice.html"
  },
  "consolidatedbilling": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsconsolidatedbilling.html"
  },
  "controltower": {
    "?": [
      "controltower:DisableControl",
      "controltower:EnableControl",
      "controltower:GetControlOperation",
      "controltower:GetLandingZoneDriftStatus",
      "controltower:ListDriftDetails",
      "controltower:ListEnabledControls",
      "controltower:ListExternalConfigRuleCompliance"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awscontroltower.html"
  },
  "cur": {
    "cur*": [
      "cur:DeleteReportDefinition",
      "cur:ModifyReportDefinition",
      "cur:PutReportDefinition"
    ],
    "?": [
      "cur:DescribeReportDefinitions"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awscostandusagereport.html"
  },
  "ce": {
    "?": [
      "ce:CreateAnomalyMonitor",
      "ce:CreateAnomalySubscription",
      "ce:CreateCostCategoryDefinition",
      "ce:GetCostAndUsage",
      "ce:GetCostAndUsageWithResources",
      "ce:GetCostCategories",
      "ce:GetCostForecast",
      "ce:GetDimensionValues",
      "ce:GetReservationCoverage",
      "ce:GetReservationPurchaseRecommendation",
      "ce:GetReservationUtilization",
      "ce:GetRightsizingRecommendation",
      "ce:GetSavingsPlansCoverage",
      "ce:GetSavingsPlansPurchaseRecommendation",
      "ce:GetSavingsPlansUtilization",
      "ce:GetSavingsPlansUtilizationDetails",
      "ce:GetTags",
      "ce:GetUsageForecast",
      "ce:ListCostAllocationTags",
      "ce:ListCostCategoryDefinitions",
      "ce:ListSavingsPlansPurchaseRecommendationGeneration",
      "ce:ProvideAnomalyFeedback",
      "ce:StartSavingsPlansPurchaseRecommendationGeneration",
      "ce:UpdateCostAllocationTagsStatus"
    ],
    "anomalymonitor*": [
      "ce:DeleteAnomalyMonitor",
      "ce:GetAnomalies",
      "ce:GetAnomalyMonitors",
      "ce:UpdateAnomalyMonitor"
    ],
    "anomalysubscription*": [
      "ce:DeleteAnomalySubscription",
      "ce:GetAnomalySubscriptions",
      "ce:UpdateAnomalySubscription"
    ],
    "costcategory*": [
      "ce:DeleteCostCategoryDefinition",
      "ce:DescribeCostCategoryDefinition",
      "ce:UpdateCostCategoryDefinition"
    ],
    "anomalymonitor": [
      "ce:ListTagsForResource",
      "ce:TagResource",
      "ce:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awscostexplorerservice.html"
  },
  "dataexchange": {
    "jobs*": [
      "dataexchange:CancelJob",
      "dataexchange:GetJob",
      "dataexchange:StartJob"
    ],
    "?": [
      "dataexchange:CreateDataSet",
      "dataexchange:CreateEventAction",
      "dataexchange:CreateJob",
      "dataexchange:ListDataSets",
      "dataexchange:ListEventActions",
      "dataexchange:ListJobs"
    ],
    "data-sets*": [
      "dataexchange:CreateRevision",
      "dataexchange:DeleteDataSet",
      "dataexchange:GetDataSet",
      "dataexchange:ListDataSetRevisions",
      "dataexchange:UpdateDataSet"
    ],
    "assets*": [
      "dataexchange:DeleteAsset",
      "dataexchange:GetAsset",
      "dataexchange:SendApiAsset",
      "dataexchange:UpdateAsset"
    ],
    "event-actions*": [
      "dataexchange:DeleteEventAction",
      "dataexchange:GetEventAction",
      "dataexchange:UpdateEventAction"
    ],
    "revisions*": [
      "dataexchange:DeleteRevision",
      "dataexchange:RevokeRevision",
      "dataexchange:UpdateRevision"
    ],
    "entitled-revisions*": [
      "dataexchange:GetRevision",
      "dataexchange:ListRevisionAssets"
    ],
    "data-sets": [
      "dataexchange:ListTagsForResource",
      "dataexchange:TagResource",
      "dataexchange:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsdataexchange.html"
  },
  "dlm": {
    "?": [
      "dlm:CreateLifecyclePolicy",
      "dlm:GetLifecyclePolicies"
    ],
    "policy*": [
      "dlm:DeleteLifecyclePolicy",
      "dlm:GetLifecyclePolicy",
      "dlm:ListTagsForResource",
      "dlm:TagResource",
      "dlm:UntagResource",
      "dlm:UpdateLifecyclePolicy"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazondatalifecyclemanager.html"
  },
  "datapipeline": {
    "pipeline*": [
      "datapipeline:ActivatePipeline",
      "datapipeline:AddTags",
      "datapipeline:DeactivatePipeline",
      "datapipeline:DeletePipeline",
      "datapipeline:DescribeObjects",
      "datapipeline:DescribePipelines",
      "datapipeline:EvaluateExpression",
      "datapipeline:GetPipelineDefinition",
      "datapipeline:PutPipelineDefinition",
      "datapipeline:QueryObjects",
      "datapipeline:RemoveTags",
      "datapipeline:ReportTaskProgress",
      "datapipeline:SetStatus",
      "datapipeline:SetTaskStatus",
      "datapipeline:ValidatePipelineDefinition"
    ],
    "?": [
      "datapipeline:CreatePipeline",
      "datapipeline:ListPipelines",
      "datapipeline:PollForTask",
      "datapipeline:ReportTaskRunnerHeartbeat"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsdatapipeline.html"
  },
  "dms": {
    "Certificate": [
      "dms:AddTagsToResource",
      "dms:ListTagsForResource",
      "dms:RemoveTagsFromResource"
    ],
    "ReplicationInstance*": [
      "dms:ApplyPendingMaintenanceAction",
      "dms:DeleteReplicationInstance",
      "dms:DescribeReplicationInstanceTaskLogs",
      "dms:ModifyReplicationInstance",
      "dms:MoveReplicationTask",
      "dms:RebootReplicationInstance"
    ],
    "MigrationProject*": [
      "dms:AssociateExtensionPack",
      "dms:CancelMetadataModelAssessment",
      "dms:CancelMetadataModelConversion",
      "dms:CancelMetadataModelExport",
      "dms:DeleteMigrationProject",
      "dms:DisassociateExtensionPack",
      "dms:StartMetadataModelAssessment",
      "dms:StartMetadataModelConversion",
      "dms:StartMetadataModelExportAsScripts",
      "dms:StartMetadataModelExportToTarget",
      "dms:StartMetadataModelImport",
      "dms:UpdateConversionConfiguration",
      "dms:UpdateMigrationProject"
    ],
    "?": [
      "dms:BatchStartRecommendations",
      "dms:CreateDataProvider",
      "dms:CreateEndpoint",
      "dms:CreateEventSubscription",
      "dms:CreateFleetAdvisorCollector",
      "dms:CreateInstanceProfile",
      "dms:CreateReplicationInstance",
      "dms:CreateReplicationSubnetGroup",
      "dms:DeleteFleetAdvisorCollector",
      "dms:DeleteFleetAdvisorDatabases",
      "dms:DescribeAccountAttributes",
      "dms:DescribeCertificates",
      "dms:DescribeConnections",
      "dms:DescribeEndpointSettings",
      "dms:DescribeEndpointTypes",
      "dms:DescribeEndpoints",
      "dms:DescribeEventCategories",
      "dms:DescribeEventSubscriptions",
      "dms:DescribeEvents",
      "dms:DescribeFleetAdvisorCollectors",
      "dms:DescribeFleetAdvisorDatabases",
      "dms:DescribeFleetAdvisorLsaAnalysis",
      "dms:DescribeFleetAdvisorSchemaObjectSummary",
      "dms:DescribeFleetAdvisorSchemas",
      "dms:DescribeOrderableReplicationInstances",
      "dms:DescribePendingMaintenanceActions",
      "dms:DescribeRecommendationLimitations",
      "dms:DescribeRecommendations",
      "dms:DescribeReplicationInstances",
      "dms:DescribeReplicationSubnetGroups",
      "dms:DescribeReplicationTasks",
      "dms:ImportCertificate",
      "dms:ModifyEventSubscription",
      "dms:ModifyReplicationSubnetGroup",
      "dms:RunFleetAdvisorLsaAnalysis",
      "dms:StartRecommendations",
      "dms:UpdateSubscriptionsToEventBridge"
    ],
    "ReplicationTaskAssessmentRun*": [
      "dms:CancelReplicationTaskAssessmentRun",
      "dms:DeleteReplicationTaskAssessmentRun"
    ],
    "DataProvider*": [
      "dms:CreateMigrationProject",
      "dms:DeleteDataProvider",
      "dms:UpdateDataProvider"
    ],
    "Endpoint*": [
      "dms:CreateReplicationTask",
      "dms:DeleteConnection",
      "dms:DeleteEndpoint",
      "dms:DescribeRefreshSchemasStatus",
      "dms:DescribeSchemas",
      "dms:ModifyEndpoint",
      "dms:RefreshSchemas",
      "dms:TestConnection"
    ],
    "Certificate*": [
      "dms:DeleteCertificate"
    ],
    "EventSubscription*": [
      "dms:DeleteEventSubscription"
    ],
    "InstanceProfile*": [
      "dms:DeleteInstanceProfile",
      "dms:UpdateInstanceProfile"
    ],
    "ReplicationSubnetGroup*": [
      "dms:DeleteReplicationSubnetGroup"
    ],
    "ReplicationTask*": [
      "dms:DeleteReplicationTask",
      "dms:DescribeTableStatistics",
      "dms:ModifyReplicationTask",
      "dms:ReloadTables",
      "dms:StartReplicationTask",
      "dms:StartReplicationTaskAssessment",
      "dms:StartReplicationTaskAssessmentRun",
      "dms:StopReplicationTask"
    ],
    "ReplicationInstance": [
      "dms:DescribeApplicableIndividualAssessments",
      "dms:DescribeReplicationTaskAssessmentRuns"
    ],
    "ReplicationTask": [
      "dms:DescribeReplicationTaskAssessmentResults",
      "dms:DescribeReplicationTaskIndividualAssessments"
    ],
    "MigrationProject": [
      "dms:ExportMetadataModelAssessment",
      "dms:GetMetadataModel",
      "dms:ListExtensionPacks",
      "dms:ListMetadataModelAssessmentActionItems",
      "dms:ListMetadataModelAssessments",
      "dms:ListMetadataModelConversions",
      "dms:ListMetadataModelExports"
    ],
    "DataProvider": [
      "dms:ListDataProviders",
      "dms:ListMigrationProjects"
    ],
    "InstanceProfile": [
      "dms:ListInstanceProfiles"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsdatabasemigrationservice.html"
  },
  "dbqms": {
    "?": [
      "dbqms:CreateFavoriteQuery",
      "dbqms:CreateQueryHistory",
      "dbqms:CreateTab",
      "dbqms:DeleteFavoriteQueries",
      "dbqms:DeleteQueryHistory",
      "dbqms:DeleteTab",
      "dbqms:DescribeFavoriteQueries",
      "dbqms:DescribeQueryHistory",
      "dbqms:DescribeTabs",
      "dbqms:GetQueryString",
      "dbqms:UpdateFavoriteQuery",
      "dbqms:UpdateQueryHistory",
      "dbqms:UpdateTab"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_databasequerymetadataservice.html"
  },
  "datasync": {
    "taskexecution*": [
      "datasync:CancelTaskExecution",
      "datasync:DescribeTaskExecution",
      "datasync:UpdateTaskExecution"
    ],
    "?": [
      "datasync:CreateAgent",
      "datasync:CreateLocationEfs",
      "datasync:CreateLocationFsxLustre",
      "datasync:CreateLocationFsxOntap",
      "datasync:CreateLocationFsxOpenZfs",
      "datasync:CreateLocationFsxWindows",
      "datasync:CreateLocationHdfs",
      "datasync:CreateLocationNfs",
      "datasync:CreateLocationObjectStorage",
      "datasync:CreateLocationS3",
      "datasync:CreateLocationSmb",
      "datasync:ListAgents",
      "datasync:ListLocations",
      "datasync:ListTasks"
    ],
    "location*": [
      "datasync:CreateTask",
      "datasync:DeleteLocation",
      "datasync:DescribeLocationEfs",
      "datasync:DescribeLocationFsxLustre",
      "datasync:DescribeLocationFsxOntap",
      "datasync:DescribeLocationFsxOpenZfs",
      "datasync:DescribeLocationFsxWindows",
      "datasync:DescribeLocationHdfs",
      "datasync:DescribeLocationNfs",
      "datasync:DescribeLocationObjectStorage",
      "datasync:DescribeLocationS3",
      "datasync:DescribeLocationSmb",
      "datasync:UpdateLocationHdfs",
      "datasync:UpdateLocationNfs",
      "datasync:UpdateLocationObjectStorage",
      "datasync:UpdateLocationSmb"
    ],
    "agent*": [
      "datasync:DeleteAgent",
      "datasync:DescribeAgent",
      "datasync:UpdateAgent"
    ],
    "task*": [
      "datasync:DeleteTask",
      "datasync:DescribeTask",
      "datasync:ListTaskExecutions",
      "datasync:StartTaskExecution",
      "datasync:UpdateTask"
    ],
    "agent": [
      "datasync:ListTagsForResource",
      "datasync:TagResource",
      "datasync:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsdatasync.html"
  },
  "deepcomposer": {
    "model*": [
      "deepcomposer:DeleteModel"
    ],
    "composition": [
      "deepcomposer:ListTagsForResource",
      "deepcomposer:TagResource",
      "deepcomposer:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsdeepcomposer.html"
  },
  "deeplens": {
    "?": [
      "deeplens:AssociateServiceRoleToAccount",
      "deeplens:CreateDeviceCertificates",
      "deeplens:CreateModel",
      "deeplens:CreateProject",
      "deeplens:GetAssociatedResources",
      "deeplens:GetDeploymentStatus",
      "deeplens:ImportProjectFromTemplate",
      "deeplens:ListDeployments",
      "deeplens:ListDevices",
      "deeplens:ListModels",
      "deeplens:ListProjects",
      "deeplens:RegisterDevice"
    ],
    "device*": [
      "deeplens:BatchGetDevice",
      "deeplens:DeployProject",
      "deeplens:DeregisterDevice",
      "deeplens:GetDevice",
      "deeplens:RemoveProject"
    ],
    "model*": [
      "deeplens:BatchGetModel",
      "deeplens:DeleteModel",
      "deeplens:GetModel"
    ],
    "project*": [
      "deeplens:BatchGetProject",
      "deeplens:DeleteProject",
      "deeplens:GetProject",
      "deeplens:UpdateProject"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsdeeplens.html"
  },
  "deepracer": {
    "car": [
      "deepracer:ListTagsForResource",
      "deepracer:TagResource",
      "deepracer:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsdeepracer.html"
  },
  "detective": {
    "?": [
      "detective:AcceptInvitation",
      "detective:BatchGetMembershipDatasources",
      "detective:CreateGraph",
      "detective:DisableOrganizationAdminAccount",
      "detective:DisassociateMembership",
      "detective:EnableOrganizationAdminAccount",
      "detective:ListGraphs",
      "detective:ListInvitations",
      "detective:ListOrganizationAdminAccount",
      "detective:RejectInvitation"
    ],
    "Graph*": [
      "detective:BatchGetGraphMemberDatasources",
      "detective:CreateMembers",
      "detective:DeleteGraph",
      "detective:DeleteMembers",
      "detective:DescribeOrganizationConfiguration",
      "detective:GetMembers",
      "detective:ListDatasourcePackages",
      "detective:ListMembers",
      "detective:ListTagsForResource",
      "detective:StartMonitoringMember",
      "detective:TagResource",
      "detective:UntagResource",
      "detective:UpdateDatasourcePackages",
      "detective:UpdateOrganizationConfiguration"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazondetective.html"
  },
  "devicefarm": {
    "project*": [
      "devicefarm:CreateDevicePool",
      "devicefarm:CreateNetworkProfile",
      "devicefarm:CreateUpload",
      "devicefarm:DeleteProject",
      "devicefarm:GetProject",
      "devicefarm:ListDevicePools",
      "devicefarm:ListNetworkProfiles",
      "devicefarm:ListRemoteAccessSessions",
      "devicefarm:ListRuns",
      "devicefarm:ListUploads",
      "devicefarm:ScheduleRun",
      "devicefarm:UpdateProject"
    ],
    "?": [
      "devicefarm:CreateInstanceProfile",
      "devicefarm:CreateProject",
      "devicefarm:CreateTestGridProject",
      "devicefarm:CreateVPCEConfiguration",
      "devicefarm:GetAccountSettings",
      "devicefarm:GetOfferingStatus",
      "devicefarm:ListDeviceInstances",
      "devicefarm:ListDevices",
      "devicefarm:ListInstanceProfiles",
      "devicefarm:ListOfferingPromotions",
      "devicefarm:ListOfferingTransactions",
      "devicefarm:ListOfferings",
      "devicefarm:ListProjects",
      "devicefarm:ListTestGridProjects",
      "devicefarm:ListVPCEConfigurations",
      "devicefarm:PurchaseOffering",
      "devicefarm:RenewOffering"
    ],
    "device*": [
      "devicefarm:CreateRemoteAccessSession",
      "devicefarm:GetDevice"
    ],
    "testgrid-project*": [
      "devicefarm:CreateTestGridUrl",
      "devicefarm:DeleteTestGridProject",
      "devicefarm:GetTestGridProject",
      "devicefarm:ListTestGridSessions",
      "devicefarm:UpdateTestGridProject"
    ],
    "devicepool*": [
      "devicefarm:DeleteDevicePool",
      "devicefarm:GetDevicePool",
      "devicefarm:GetDevicePoolCompatibility",
      "devicefarm:UpdateDevicePool"
    ],
    "instanceprofile*": [
      "devicefarm:DeleteInstanceProfile",
      "devicefarm:GetInstanceProfile",
      "devicefarm:UpdateInstanceProfile"
    ],
    "networkprofile*": [
      "devicefarm:DeleteNetworkProfile",
      "devicefarm:GetNetworkProfile",
      "devicefarm:UpdateNetworkProfile"
    ],
    "session*": [
      "devicefarm:DeleteRemoteAccessSession",
      "devicefarm:GetRemoteAccessSession",
      "devicefarm:InstallToRemoteAccessSession",
      "devicefarm:StopRemoteAccessSession"
    ],
    "run*": [
      "devicefarm:DeleteRun",
      "devicefarm:GetRun",
      "devicefarm:ListJobs",
      "devicefarm:ListUniqueProblems",
      "devicefarm:StopRun"
    ],
    "upload*": [
      "devicefarm:DeleteUpload",
      "devicefarm:GetUpload",
      "devicefarm:UpdateUpload"
    ],
    "vpceconfiguration*": [
      "devicefarm:DeleteVPCEConfiguration",
      "devicefarm:GetVPCEConfiguration",
      "devicefarm:UpdateVPCEConfiguration"
    ],
    "deviceinstance*": [
      "devicefarm:GetDeviceInstance",
      "devicefarm:UpdateDeviceInstance"
    ],
    "job*": [
      "devicefarm:GetJob",
      "devicefarm:ListSamples",
      "devicefarm:ListSuites",
      "devicefarm:StopJob"
    ],
    "suite*": [
      "devicefarm:GetSuite",
      "devicefarm:ListTests"
    ],
    "test*": [
      "devicefarm:GetTest"
    ],
    "testgrid-project": [
      "devicefarm:GetTestGridSession"
    ],
    "job": [
      "devicefarm:ListArtifacts"
    ],
    "device": [
      "devicefarm:ListTagsForResource",
      "devicefarm:TagResource",
      "devicefarm:UntagResource"
    ],
    "testgrid-session*": [
      "devicefarm:ListTestGridSessionActions",
      "devicefarm:ListTestGridSessionArtifacts"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsdevicefarm.html"
  },
  "devops-guru": {
    "topic*": [
      "devops-guru:AddNotificationChannel",
      "devops-guru:RemoveNotificationChannel"
    ],
    "?": [
      "devops-guru:DeleteInsight",
      "devops-guru:DescribeAccountHealth",
      "devops-guru:DescribeAccountOverview",
      "devops-guru:DescribeAnomaly",
      "devops-guru:DescribeEventSourcesConfig",
      "devops-guru:DescribeFeedback",
      "devops-guru:DescribeInsight",
      "devops-guru:DescribeOrganizationHealth",
      "devops-guru:DescribeOrganizationOverview",
      "devops-guru:DescribeOrganizationResourceCollectionHealth",
      "devops-guru:DescribeResourceCollectionHealth",
      "devops-guru:DescribeServiceIntegration",
      "devops-guru:GetCostEstimation",
      "devops-guru:GetResourceCollection",
      "devops-guru:ListAnomaliesForInsight",
      "devops-guru:ListAnomalousLogGroups",
      "devops-guru:ListEvents",
      "devops-guru:ListInsights",
      "devops-guru:ListMonitoredResources",
      "devops-guru:ListNotificationChannels",
      "devops-guru:ListOrganizationInsights",
      "devops-guru:ListRecommendations",
      "devops-guru:PutFeedback",
      "devops-guru:SearchInsights",
      "devops-guru:SearchOrganizationInsights",
      "devops-guru:StartCostEstimation",
      "devops-guru:UpdateEventSourcesConfig",
      "devops-guru:UpdateResourceCollection",
      "devops-guru:UpdateServiceIntegration"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazondevopsguru.html"
  },
  "directconnect": {
    "dx-gateway*": [
      "directconnect:AcceptDirectConnectGatewayAssociationProposal",
      "directconnect:CreateDirectConnectGatewayAssociation",
      "directconnect:CreateDirectConnectGatewayAssociationProposal",
      "directconnect:DeleteDirectConnectGateway",
      "directconnect:DeleteDirectConnectGatewayAssociation",
      "directconnect:UpdateDirectConnectGateway"
    ],
    "dxcon*": [
      "directconnect:AllocateConnectionOnInterconnect",
      "directconnect:AssociateConnectionWithLag",
      "directconnect:AssociateHostedConnection",
      "directconnect:ConfirmConnection",
      "directconnect:DeleteConnection",
      "directconnect:DeleteInterconnect",
      "directconnect:DescribeConnectionLoa",
      "directconnect:DescribeConnectionsOnInterconnect",
      "directconnect:DescribeInterconnectLoa",
      "directconnect:DisassociateConnectionFromLag",
      "directconnect:UpdateConnection"
    ],
    "dxcon": [
      "directconnect:AllocateHostedConnection",
      "directconnect:AllocatePrivateVirtualInterface",
      "directconnect:AllocatePublicVirtualInterface",
      "directconnect:AllocateTransitVirtualInterface",
      "directconnect:AssociateMacSecKey",
      "directconnect:CreateLag",
      "directconnect:CreatePrivateVirtualInterface",
      "directconnect:CreatePublicVirtualInterface",
      "directconnect:CreateTransitVirtualInterface",
      "directconnect:DescribeConnections",
      "directconnect:DescribeHostedConnections",
      "directconnect:DescribeInterconnects",
      "directconnect:DescribeLoa",
      "directconnect:DescribeTags",
      "directconnect:DescribeVirtualInterfaces",
      "directconnect:DisassociateMacSecKey",
      "directconnect:TagResource",
      "directconnect:UntagResource"
    ],
    "dxvif*": [
      "directconnect:AssociateVirtualInterface",
      "directconnect:ConfirmPrivateVirtualInterface",
      "directconnect:ConfirmPublicVirtualInterface",
      "directconnect:ConfirmTransitVirtualInterface",
      "directconnect:CreateBGPPeer",
      "directconnect:DeleteBGPPeer",
      "directconnect:DeleteVirtualInterface",
      "directconnect:DescribeRouterConfiguration",
      "directconnect:ListVirtualInterfaceTestHistory",
      "directconnect:StartBgpFailoverTest",
      "directconnect:StopBgpFailoverTest",
      "directconnect:UpdateVirtualInterfaceAttributes"
    ],
    "?": [
      "directconnect:ConfirmCustomerAgreement",
      "directconnect:CreateDirectConnectGateway",
      "directconnect:DeleteDirectConnectGatewayAssociationProposal",
      "directconnect:DescribeCustomerMetadata",
      "directconnect:DescribeLocations",
      "directconnect:DescribeVirtualGateways",
      "directconnect:UpdateDirectConnectGatewayAssociation"
    ],
    "dxlag": [
      "directconnect:CreateConnection",
      "directconnect:CreateInterconnect",
      "directconnect:DescribeLags"
    ],
    "dxlag*": [
      "directconnect:DeleteLag",
      "directconnect:UpdateLag"
    ],
    "dx-gateway": [
      "directconnect:DescribeDirectConnectGatewayAssociationProposals",
      "directconnect:DescribeDirectConnectGatewayAssociations",
      "directconnect:DescribeDirectConnectGatewayAttachments",
      "directconnect:DescribeDirectConnectGateways"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsdirectconnect.html"
  },
  "ds": {
    "directory*": [
      "ds:AcceptSharedDirectory",
      "ds:AddIpRoutes",
      "ds:AddRegion",
      "ds:AddTagsToResource",
      "ds:CancelSchemaExtension",
      "ds:CreateAlias",
      "ds:CreateComputer",
      "ds:CreateConditionalForwarder",
      "ds:CreateLogSubscription",
      "ds:CreateSnapshot",
      "ds:CreateTrust",
      "ds:DeleteConditionalForwarder",
      "ds:DeleteDirectory",
      "ds:DeleteLogSubscription",
      "ds:DeleteSnapshot",
      "ds:DeleteTrust",
      "ds:DeregisterCertificate",
      "ds:DeregisterEventTopic",
      "ds:DescribeCertificate",
      "ds:DescribeClientAuthenticationSettings",
      "ds:DescribeConditionalForwarders",
      "ds:DescribeDomainControllers",
      "ds:DescribeEventTopics",
      "ds:DescribeLDAPSSettings",
      "ds:DescribeRegions",
      "ds:DescribeSettings",
      "ds:DescribeSharedDirectories",
      "ds:DescribeUpdateDirectory",
      "ds:DisableClientAuthentication",
      "ds:DisableLDAPS",
      "ds:DisableRadius",
      "ds:DisableSso",
      "ds:EnableClientAuthentication",
      "ds:EnableLDAPS",
      "ds:EnableRadius",
      "ds:EnableSso",
      "ds:GetSnapshotLimits",
      "ds:ListCertificates",
      "ds:ListIpRoutes",
      "ds:ListSchemaExtensions",
      "ds:ListTagsForResource",
      "ds:RegisterCertificate",
      "ds:RegisterEventTopic",
      "ds:RejectSharedDirectory",
      "ds:RemoveIpRoutes",
      "ds:RemoveRegion",
      "ds:RemoveTagsFromResource",
      "ds:ResetUserPassword",
      "ds:RestoreFromSnapshot",
      "ds:ShareDirectory",
      "ds:StartSchemaExtension",
      "ds:UnshareDirectory",
      "ds:UpdateConditionalForwarder",
      "ds:UpdateDirectorySetup",
      "ds:UpdateNumberOfDomainControllers",
      "ds:UpdateRadius",
      "ds:UpdateSettings",
      "ds:UpdateTrust",
      "ds:VerifyTrust"
    ],
    "?": [
      "ds:ConnectDirectory",
      "ds:CreateDirectory",
      "ds:CreateMicrosoftAD",
      "ds:DescribeDirectories",
      "ds:DescribeSnapshots",
      "ds:DescribeTrusts",
      "ds:GetDirectoryLimits",
      "ds:ListLogSubscriptions"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsdirectoryservice.html"
  },
  "docdb-elastic": {
    "?": [
      "docdb-elastic:CreateCluster",
      "docdb-elastic:ListClusterSnapshots",
      "docdb-elastic:ListClusters"
    ],
    "cluster*": [
      "docdb-elastic:CreateClusterSnapshot",
      "docdb-elastic:DeleteCluster",
      "docdb-elastic:GetCluster",
      "docdb-elastic:UpdateCluster"
    ],
    "cluster-snapshot*": [
      "docdb-elastic:DeleteClusterSnapshot",
      "docdb-elastic:GetClusterSnapshot",
      "docdb-elastic:RestoreClusterFromSnapshot"
    ],
    "cluster": [
      "docdb-elastic:ListTagsForResource",
      "docdb-elastic:TagResource",
      "docdb-elastic:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazondocumentdbelasticclusters.html"
  },
  "dynamodb": {
    "table*": [
      "dynamodb:BatchGetItem",
      "dynamodb:BatchWriteItem",
      "dynamodb:ConditionCheckItem",
      "dynamodb:CreateBackup",
      "dynamodb:CreateTable",
      "dynamodb:DeleteItem",
      "dynamodb:DeleteTable",
      "dynamodb:DescribeContinuousBackups",
      "dynamodb:DescribeContributorInsights",
      "dynamodb:DescribeKinesisStreamingDestination",
      "dynamodb:DescribeTable",
      "dynamodb:DescribeTableReplicaAutoScaling",
      "dynamodb:DescribeTimeToLive",
      "dynamodb:DisableKinesisStreamingDestination",
      "dynamodb:EnableKinesisStreamingDestination",
      "dynamodb:ExportTableToPointInTime",
      "dynamodb:GetItem",
      "dynamodb:ImportTable",
      "dynamodb:ListTagsOfResource",
      "dynamodb:PartiQLDelete",
      "dynamodb:PartiQLInsert",
      "dynamodb:PartiQLSelect",
      "dynamodb:PartiQLUpdate",
      "dynamodb:PutItem",
      "dynamodb:Query",
      "dynamodb:RestoreTableToPointInTime",
      "dynamodb:Scan",
      "dynamodb:TagResource",
      "dynamodb:UntagResource",
      "dynamodb:UpdateContinuousBackups",
      "dynamodb:UpdateContributorInsights",
      "dynamodb:UpdateItem",
      "dynamodb:UpdateTable",
      "dynamodb:UpdateTableReplicaAutoScaling",
      "dynamodb:UpdateTimeToLive"
    ],
    "global-table*": [
      "dynamodb:CreateGlobalTable",
      "dynamodb:DescribeGlobalTable",
      "dynamodb:DescribeGlobalTableSettings",
      "dynamodb:UpdateGlobalTable",
      "dynamodb:UpdateGlobalTableSettings"
    ],
    "backup*": [
      "dynamodb:DeleteBackup",
      "dynamodb:DescribeBackup",
      "dynamodb:RestoreTableFromBackup"
    ],
    "?": [
      "dynamodb:DescribeEndpoints",
      "dynamodb:DescribeLimits",
      "dynamodb:ListBackups",
      "dynamodb:ListContributorInsights",
      "dynamodb:ListExports",
      "dynamodb:ListGlobalTables",
      "dynamodb:ListImports",
      "dynamodb:ListStreams",
      "dynamodb:ListTables"
    ],
    "export*": [
      "dynamodb:DescribeExport"
    ],
    "import*": [
      "dynamodb:DescribeImport"
    ],
    "stream*": [
      "dynamodb:DescribeStream",
      "dynamodb:GetRecords",
      "dynamodb:GetShardIterator"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazondynamodb.html"
  },
  "dax": {
    "application*": [
      "dax:BatchGetItem",
      "dax:BatchWriteItem",
      "dax:ConditionCheckItem",
      "dax:CreateCluster",
      "dax:DecreaseReplicationFactor",
      "dax:DeleteCluster",
      "dax:DeleteItem",
      "dax:GetItem",
      "dax:IncreaseReplicationFactor",
      "dax:ListTags",
      "dax:PutItem",
      "dax:Query",
      "dax:RebootNode",
      "dax:Scan",
      "dax:TagResource",
      "dax:UntagResource",
      "dax:UpdateCluster",
      "dax:UpdateItem"
    ],
    "?": [
      "dax:CreateParameterGroup",
      "dax:CreateSubnetGroup",
      "dax:DeleteParameterGroup",
      "dax:DeleteSubnetGroup",
      "dax:DescribeDefaultParameters",
      "dax:DescribeEvents",
      "dax:DescribeParameterGroups",
      "dax:DescribeParameters",
      "dax:DescribeSubnetGroups",
      "dax:UpdateParameterGroup",
      "dax:UpdateSubnetGroup"
    ],
    "application": [
      "dax:DescribeClusters"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazondynamodbacceleratordax.html"
  },
  "ec2": {
    "elastic-ip*": [
      "ec2:AcceptAddressTransfer",
      "ec2:AllocateAddress",
      "ec2:AssociateNatGatewayAddress",
      "ec2:DisableAddressTransfer",
      "ec2:DisassociateNatGatewayAddress",
      "ec2:EnableAddressTransfer",
      "ec2:ModifyAddressAttribute",
      "ec2:ResetAddressAttribute"
    ],
    "?": [
      "ec2:AcceptReservedInstancesExchangeQuote",
      "ec2:AdvertiseByoipCidr",
      "ec2:AssociateTrunkInterface",
      "ec2:BundleInstance",
      "ec2:CancelBundleTask",
      "ec2:CancelConversionTask",
      "ec2:CancelReservedInstancesListing",
      "ec2:ConfirmProductInstance",
      "ec2:CreateDefaultSubnet",
      "ec2:CreateDefaultVpc",
      "ec2:CreateReservedInstancesListing",
      "ec2:CreateSpotDatafeedSubscription",
      "ec2:CreateSubnetCidrReservation",
      "ec2:DeleteQueuedReservedInstances",
      "ec2:DeleteSpotDatafeedSubscription",
      "ec2:DeleteSubnetCidrReservation",
      "ec2:DeprovisionByoipCidr",
      "ec2:DeregisterInstanceEventNotificationAttributes",
      "ec2:DescribeAccountAttributes",
      "ec2:DescribeAddressTransfers",
      "ec2:DescribeAddresses",
      "ec2:DescribeAggregateIdFormat",
      "ec2:DescribeAvailabilityZones",
      "ec2:DescribeAwsNetworkPerformanceMetricSubscriptions",
      "ec2:DescribeBundleTasks",
      "ec2:DescribeByoipCidrs",
      "ec2:DescribeCapacityReservationFleets",
      "ec2:DescribeCapacityReservations",
      "ec2:DescribeCarrierGateways",
      "ec2:DescribeClassicLinkInstances",
      "ec2:DescribeCoipPools",
      "ec2:DescribeConversionTasks",
      "ec2:DescribeCustomerGateways",
      "ec2:DescribeDhcpOptions",
      "ec2:DescribeEgressOnlyInternetGateways",
      "ec2:DescribeElasticGpus",
      "ec2:DescribeExportImageTasks",
      "ec2:DescribeExportTasks",
      "ec2:DescribeFastSnapshotRestores",
      "ec2:DescribeFleets",
      "ec2:DescribeFlowLogs",
      "ec2:DescribeFpgaImages",
      "ec2:DescribeHostReservationOfferings",
      "ec2:DescribeHostReservations",
      "ec2:DescribeHosts",
      "ec2:DescribeIamInstanceProfileAssociations",
      "ec2:DescribeIdFormat",
      "ec2:DescribeIdentityIdFormat",
      "ec2:DescribeImages",
      "ec2:DescribeImportImageTasks",
      "ec2:DescribeImportSnapshotTasks",
      "ec2:DescribeInstanceCreditSpecifications",
      "ec2:DescribeInstanceEventNotificationAttributes",
      "ec2:DescribeInstanceEventWindows",
      "ec2:DescribeInstanceStatus",
      "ec2:DescribeInstanceTypeOfferings",
      "ec2:DescribeInstanceTypes",
      "ec2:DescribeInstances",
      "ec2:DescribeInternetGateways",
      "ec2:DescribeIpamPools",
      "ec2:DescribeIpamResourceDiscoveries",
      "ec2:DescribeIpamResourceDiscoveryAssociations",
      "ec2:DescribeIpamScopes",
      "ec2:DescribeIpams",
      "ec2:DescribeIpv6Pools",
      "ec2:DescribeKeyPairs",
      "ec2:DescribeLaunchTemplateVersions",
      "ec2:DescribeLaunchTemplates",
      "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
      "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
      "ec2:DescribeLocalGatewayRouteTables",
      "ec2:DescribeLocalGatewayVirtualInterfaceGroups",
      "ec2:DescribeLocalGatewayVirtualInterfaces",
      "ec2:DescribeLocalGateways",
      "ec2:DescribeManagedPrefixLists",
      "ec2:DescribeMovingAddresses",
      "ec2:DescribeNatGateways",
      "ec2:DescribeNetworkAcls",
      "ec2:DescribeNetworkInsightsAccessScopeAnalyses",
      "ec2:DescribeNetworkInsightsAccessScopes",
      "ec2:DescribeNetworkInsightsAnalyses",
      "ec2:DescribeNetworkInsightsPaths",
      "ec2:DescribeNetworkInterfaceAttribute",
      "ec2:DescribeNetworkInterfacePermissions",
      "ec2:DescribeNetworkInterfaces",
      "ec2:DescribePlacementGroups",
      "ec2:DescribePrefixLists",
      "ec2:DescribePrincipalIdFormat",
      "ec2:DescribePublicIpv4Pools",
      "ec2:DescribeRegions",
      "ec2:DescribeReplaceRootVolumeTasks",
      "ec2:DescribeReservedInstances",
      "ec2:DescribeReservedInstancesListings",
      "ec2:DescribeReservedInstancesModifications",
      "ec2:DescribeReservedInstancesOfferings",
      "ec2:DescribeRouteTables",
      "ec2:DescribeScheduledInstanceAvailability",
      "ec2:DescribeScheduledInstances",
      "ec2:DescribeSecurityGroupReferences",
      "ec2:DescribeSecurityGroupRules",
      "ec2:DescribeSecurityGroups",
      "ec2:DescribeSnapshotTierStatus",
      "ec2:DescribeSnapshots",
      "ec2:DescribeSpotDatafeedSubscription",
      "ec2:DescribeSpotFleetRequests",
      "ec2:DescribeSpotInstanceRequests",
      "ec2:DescribeSpotPriceHistory",
      "ec2:DescribeStaleSecurityGroups",
      "ec2:DescribeStoreImageTasks",
      "ec2:DescribeSubnets",
      "ec2:DescribeTags",
      "ec2:DescribeTrafficMirrorFilters",
      "ec2:DescribeTrafficMirrorSessions",
      "ec2:DescribeTrafficMirrorTargets",
      "ec2:DescribeTransitGatewayAttachments",
      "ec2:DescribeTransitGatewayConnectPeers",
      "ec2:DescribeTransitGatewayConnects",
      "ec2:DescribeTransitGatewayMulticastDomains",
      "ec2:DescribeTransitGatewayPeeringAttachments",
      "ec2:DescribeTransitGatewayPolicyTables",
      "ec2:DescribeTransitGatewayRouteTableAnnouncements",
      "ec2:DescribeTransitGatewayRouteTables",
      "ec2:DescribeTransitGatewayVpcAttachments",
      "ec2:DescribeTransitGateways",
      "ec2:DescribeTrunkInterfaceAssociations",
      "ec2:DescribeVerifiedAccessEndpoints",
      "ec2:DescribeVerifiedAccessGroups",
      "ec2:DescribeVerifiedAccessInstanceLoggingConfigurations",
      "ec2:DescribeVerifiedAccessInstances",
      "ec2:DescribeVerifiedAccessTrustProviders",
      "ec2:DescribeVolumeStatus",
      "ec2:DescribeVolumes",
      "ec2:DescribeVolumesModifications",
      "ec2:DescribeVpcClassicLink",
      "ec2:DescribeVpcClassicLinkDnsSupport",
      "ec2:DescribeVpcEndpointConnectionNotifications",
      "ec2:DescribeVpcEndpointConnections",
      "ec2:DescribeVpcEndpointServiceConfigurations",
      "ec2:DescribeVpcEndpointServicePermissions",
      "ec2:DescribeVpcEndpointServices",
      "ec2:DescribeVpcEndpoints",
      "ec2:DescribeVpcPeeringConnections",
      "ec2:DescribeVpcs",
      "ec2:DescribeVpnConnections",
      "ec2:DescribeVpnGateways",
      "ec2:DisableAwsNetworkPerformanceMetricSubscription",
      "ec2:DisableEbsEncryptionByDefault",
      "ec2:DisableIpamOrganizationAdminAccount",
      "ec2:DisableSerialConsoleAccess",
      "ec2:DisassociateTrunkInterface",
      "ec2:EnableAwsNetworkPerformanceMetricSubscription",
      "ec2:EnableEbsEncryptionByDefault",
      "ec2:EnableIpamOrganizationAdminAccount",
      "ec2:EnableReachabilityAnalyzerOrganizationSharing",
      "ec2:EnableSerialConsoleAccess",
      "ec2:ExportTransitGatewayRoutes",
      "ec2:GetAssociatedIpv6PoolCidrs",
      "ec2:GetAwsNetworkPerformanceData",
      "ec2:GetDefaultCreditSpecification",
      "ec2:GetEbsDefaultKmsKeyId",
      "ec2:GetEbsEncryptionByDefault",
      "ec2:GetHostReservationPurchasePreview",
      "ec2:GetInstanceTypesFromInstanceRequirements",
      "ec2:GetNetworkInsightsAccessScopeAnalysisFindings",
      "ec2:GetNetworkInsightsAccessScopeContent",
      "ec2:GetReservedInstancesExchangeQuote",
      "ec2:GetSerialConsoleAccessStatus",
      "ec2:GetSpotPlacementScores",
      "ec2:GetSubnetCidrReservations",
      "ec2:GetTransitGatewayAttachmentPropagations",
      "ec2:GetTransitGatewayPrefixListReferences",
      "ec2:GetTransitGatewayRouteTableAssociations",
      "ec2:GetTransitGatewayRouteTablePropagations",
      "ec2:GetVpnConnectionDeviceTypes",
      "ec2:ModifyAvailabilityZoneGroup",
      "ec2:ModifyDefaultCreditSpecification",
      "ec2:ModifyEbsDefaultKmsKeyId",
      "ec2:ModifyIdFormat",
      "ec2:ModifyIdentityIdFormat",
      "ec2:MoveAddressToVpc",
      "ec2:ProvisionByoipCidr",
      "ec2:PurchaseReservedInstancesOffering",
      "ec2:PurchaseScheduledInstances",
      "ec2:RegisterInstanceEventNotificationAttributes",
      "ec2:ReportInstanceStatus",
      "ec2:ResetEbsDefaultKmsKeyId",
      "ec2:RestoreAddressToClassic",
      "ec2:RunScheduledInstances",
      "ec2:WithdrawByoipCidr"
    ],
    "transit-gateway-attachment": [
      "ec2:AcceptTransitGatewayMulticastDomainAssociations",
      "ec2:RejectTransitGatewayMulticastDomainAssociations"
    ],
    "transit-gateway-attachment*": [
      "ec2:AcceptTransitGatewayPeeringAttachment",
      "ec2:AcceptTransitGatewayVpcAttachment",
      "ec2:AssociateTransitGatewayPolicyTable",
      "ec2:AssociateTransitGatewayRouteTable",
      "ec2:CreateTransitGatewayConnect",
      "ec2:CreateTransitGatewayConnectPeer",
      "ec2:CreateTransitGatewayRouteTableAnnouncement",
      "ec2:DeleteTransitGatewayConnect",
      "ec2:DeleteTransitGatewayPeeringAttachment",
      "ec2:DeleteTransitGatewayVpcAttachment",
      "ec2:DisassociateTransitGatewayPolicyTable",
      "ec2:DisassociateTransitGatewayRouteTable",
      "ec2:ModifyTransitGatewayVpcAttachment",
      "ec2:RejectTransitGatewayPeeringAttachment",
      "ec2:RejectTransitGatewayVpcAttachment"
    ],
    "vpc-endpoint-service*": [
      "ec2:AcceptVpcEndpointConnections",
      "ec2:CreateVpcEndpointServiceConfiguration",
      "ec2:DeleteVpcEndpointServiceConfigurations",
      "ec2:ModifyVpcEndpointServiceConfiguration",
      "ec2:ModifyVpcEndpointServicePayerResponsibility",
      "ec2:ModifyVpcEndpointServicePermissions",
      "ec2:RejectVpcEndpointConnections",
      "ec2:StartVpcEndpointServicePrivateDnsVerification"
    ],
    "vpc*": [
      "ec2:AcceptVpcPeeringConnection",
      "ec2:AssociateVpcCidrBlock",
      "ec2:AttachVpnGateway",
      "ec2:CreateVpc",
      "ec2:CreateVpcEndpoint",
      "ec2:CreateVpcPeeringConnection",
      "ec2:DeleteVpc",
      "ec2:DescribeVpcAttribute",
      "ec2:DetachVpnGateway",
      "ec2:DisableVpcClassicLink",
      "ec2:EnableVpcClassicLink",
      "ec2:ModifyVpcAttribute",
      "ec2:ModifyVpcTenancy"
    ],
    "dedicated-host*": [
      "ec2:AllocateHosts",
      "ec2:ModifyHosts",
      "ec2:PurchaseHostReservation",
      "ec2:ReleaseHosts"
    ],
    "ipam-pool*": [
      "ec2:AllocateIpamPoolCidr",
      "ec2:CreateIpamPool",
      "ec2:DeleteIpamPool",
      "ec2:DeprovisionIpamPoolCidr",
      "ec2:GetIpamPoolAllocations",
      "ec2:GetIpamPoolCidrs",
      "ec2:ModifyIpamPool",
      "ec2:MoveByoipCidrToIpam",
      "ec2:ProvisionIpamPoolCidr",
      "ec2:ProvisionPublicIpv4PoolCidr",
      "ec2:ReleaseIpamPoolAllocation"
    ],
    "client-vpn-endpoint*": [
      "ec2:ApplySecurityGroupsToClientVpnTargetNetwork",
      "ec2:AssociateClientVpnTargetNetwork",
      "ec2:AuthorizeClientVpnIngress",
      "ec2:CreateClientVpnEndpoint",
      "ec2:CreateClientVpnRoute",
      "ec2:DeleteClientVpnEndpoint",
      "ec2:DeleteClientVpnRoute",
      "ec2:DescribeClientVpnAuthorizationRules",
      "ec2:DescribeClientVpnConnections",
      "ec2:DescribeClientVpnRoutes",
      "ec2:DescribeClientVpnTargetNetworks",
      "ec2:DisassociateClientVpnTargetNetwork",
      "ec2:ExportClientVpnClientCertificateRevocationList",
      "ec2:ExportClientVpnClientConfiguration",
      "ec2:ImportClientVpnClientCertificateRevocationList",
      "ec2:ModifyClientVpnEndpoint",
      "ec2:RevokeClientVpnIngress",
      "ec2:TerminateClientVpnConnections"
    ],
    "network-interface*": [
      "ec2:AssignIpv6Addresses",
      "ec2:AssignPrivateIpAddresses",
      "ec2:CreateNetworkInterface",
      "ec2:CreateNetworkInterfacePermission",
      "ec2:CreateTrafficMirrorSession",
      "ec2:DeleteNetworkInterface",
      "ec2:ModifyNetworkInterfaceAttribute",
      "ec2:RegisterTransitGatewayMulticastGroupMembers",
      "ec2:RegisterTransitGatewayMulticastGroupSources",
      "ec2:ResetNetworkInterfaceAttribute",
      "ec2:UnassignIpv6Addresses",
      "ec2:UnassignPrivateIpAddresses"
    ],
    "natgateway*": [
      "ec2:AssignPrivateNatGatewayAddress",
      "ec2:CreateNatGateway",
      "ec2:DeleteNatGateway",
      "ec2:UnassignPrivateNatGatewayAddress"
    ],
    "elastic-ip": [
      "ec2:AssociateAddress",
      "ec2:DescribeAddressesAttribute",
      "ec2:DisassociateAddress",
      "ec2:ReleaseAddress"
    ],
    "dhcp-options*": [
      "ec2:AssociateDhcpOptions",
      "ec2:CreateDhcpOptions",
      "ec2:DeleteDhcpOptions"
    ],
    "certificate*": [
      "ec2:AssociateEnclaveCertificateIamRole",
      "ec2:DisassociateEnclaveCertificateIamRole",
      "ec2:GetAssociatedEnclaveCertificateIamRoles"
    ],
    "instance*": [
      "ec2:AssociateIamInstanceProfile",
      "ec2:AttachClassicLinkVpc",
      "ec2:AttachNetworkInterface",
      "ec2:AttachVolume",
      "ec2:CreateReplaceRootVolumeTask",
      "ec2:CreateSnapshots",
      "ec2:DescribeInstanceAttribute",
      "ec2:DetachClassicLinkVpc",
      "ec2:DetachNetworkInterface",
      "ec2:DisassociateIamInstanceProfile",
      "ec2:GetConsoleOutput",
      "ec2:GetConsoleScreenshot",
      "ec2:GetInstanceUefiData",
      "ec2:GetLaunchTemplateData",
      "ec2:GetPasswordData",
      "ec2:ImportInstance",
      "ec2:ModifyInstanceAttribute",
      "ec2:ModifyInstanceCapacityReservationAttributes",
      "ec2:ModifyInstanceCreditSpecification",
      "ec2:ModifyInstanceEventStartTime",
      "ec2:ModifyInstanceMaintenanceOptions",
      "ec2:ModifyInstanceMetadataOptions",
      "ec2:ModifyInstancePlacement",
      "ec2:ModifyPrivateDnsNameOptions",
      "ec2:MonitorInstances",
      "ec2:RebootInstances",
      "ec2:ReplaceIamInstanceProfileAssociation",
      "ec2:ResetInstanceAttribute",
      "ec2:SendDiagnosticInterrupt",
      "ec2:StartInstances",
      "ec2:StopInstances",
      "ec2:TerminateInstances",
      "ec2:UnmonitorInstances"
    ],
    "instance-event-window*": [
      "ec2:AssociateInstanceEventWindow",
      "ec2:CreateInstanceEventWindow",
      "ec2:DeleteInstanceEventWindow",
      "ec2:DisassociateInstanceEventWindow",
      "ec2:ModifyInstanceEventWindow"
    ],
    "ipam*": [
      "ec2:AssociateIpamResourceDiscovery",
      "ec2:CreateIpam",
      "ec2:CreateIpamScope",
      "ec2:DeleteIpam",
      "ec2:ModifyIpam"
    ],
    "route-table*": [
      "ec2:AssociateRouteTable",
      "ec2:CreateRoute",
      "ec2:CreateRouteTable",
      "ec2:DeleteRoute",
      "ec2:DeleteRouteTable",
      "ec2:DisableVgwRoutePropagation",
      "ec2:EnableVgwRoutePropagation",
      "ec2:ReplaceRoute",
      "ec2:ReplaceRouteTableAssociation"
    ],
    "subnet*": [
      "ec2:AssociateSubnetCidrBlock",
      "ec2:AssociateTransitGatewayMulticastDomain",
      "ec2:CreateSubnet",
      "ec2:CreateTransitGatewayVpcAttachment",
      "ec2:DeleteSubnet",
      "ec2:DisassociateSubnetCidrBlock",
      "ec2:DisassociateTransitGatewayMulticastDomain",
      "ec2:ModifySubnetAttribute"
    ],
    "internet-gateway*": [
      "ec2:AttachInternetGateway",
      "ec2:CreateInternetGateway",
      "ec2:DeleteInternetGateway",
      "ec2:DetachInternetGateway"
    ],
    "verified-access-instance*": [
      "ec2:AttachVerifiedAccessTrustProvider",
      "ec2:CreateVerifiedAccessInstance",
      "ec2:DeleteVerifiedAccessInstance",
      "ec2:DetachVerifiedAccessTrustProvider",
      "ec2:ModifyVerifiedAccessInstance",
      "ec2:ModifyVerifiedAccessInstanceLoggingConfiguration"
    ],
    "security-group*": [
      "ec2:AuthorizeSecurityGroupEgress",
      "ec2:AuthorizeSecurityGroupIngress",
      "ec2:CreateSecurityGroup",
      "ec2:DeleteSecurityGroup",
      "ec2:ModifySecurityGroupRules",
      "ec2:RevokeSecurityGroupEgress",
      "ec2:RevokeSecurityGroupIngress",
      "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
      "ec2:UpdateSecurityGroupRuleDescriptionsIngress"
    ],
    "capacity-reservation*": [
      "ec2:CancelCapacityReservation",
      "ec2:CreateCapacityReservation",
      "ec2:GetCapacityReservationUsage",
      "ec2:GetGroupsForCapacityReservation",
      "ec2:ModifyCapacityReservation"
    ],
    "capacity-reservation-fleet*": [
      "ec2:CancelCapacityReservationFleets",
      "ec2:CreateCapacityReservationFleet",
      "ec2:ModifyCapacityReservationFleet"
    ],
    "export-image-task": [
      "ec2:CancelExportTask"
    ],
    "image*": [
      "ec2:CancelImageLaunchPermission",
      "ec2:CopyImage",
      "ec2:CreateImage",
      "ec2:CreateRestoreImageTask",
      "ec2:CreateStoreImageTask",
      "ec2:DeregisterImage",
      "ec2:DescribeImageAttribute",
      "ec2:DisableFastLaunch",
      "ec2:DisableImageDeprecation",
      "ec2:EnableFastLaunch",
      "ec2:EnableImageDeprecation",
      "ec2:ImportImage",
      "ec2:ModifyImageAttribute",
      "ec2:RegisterImage",
      "ec2:ResetImageAttribute",
      "ec2:RestoreImageFromRecycleBin",
      "ec2:RunInstances"
    ],
    "import-image-task": [
      "ec2:CancelImportTask"
    ],
    "spot-fleet-request*": [
      "ec2:CancelSpotFleetRequests",
      "ec2:DescribeSpotFleetInstances",
      "ec2:DescribeSpotFleetRequestHistory",
      "ec2:ModifySpotFleetRequest",
      "ec2:RequestSpotFleet"
    ],
    "spot-instances-request*": [
      "ec2:CancelSpotInstanceRequests",
      "ec2:RequestSpotInstances"
    ],
    "fpga-image*": [
      "ec2:CopyFpgaImage",
      "ec2:CreateFpgaImage",
      "ec2:DeleteFpgaImage",
      "ec2:DescribeFpgaImageAttribute",
      "ec2:ModifyFpgaImageAttribute",
      "ec2:ResetFpgaImageAttribute"
    ],
    "snapshot*": [
      "ec2:CopySnapshot",
      "ec2:CreateSnapshot",
      "ec2:DeleteSnapshot",
      "ec2:DescribeSnapshotAttribute",
      "ec2:DisableFastSnapshotRestores",
      "ec2:EnableFastSnapshotRestores",
      "ec2:ModifySnapshotAttribute",
      "ec2:ModifySnapshotTier",
      "ec2:ResetSnapshotAttribute",
      "ec2:RestoreSnapshotFromRecycleBin",
      "ec2:RestoreSnapshotTier"
    ],
    "carrier-gateway*": [
      "ec2:CreateCarrierGateway",
      "ec2:DeleteCarrierGateway"
    ],
    "coip-pool*": [
      "ec2:CreateCoipCidr",
      "ec2:DeleteCoipCidr",
      "ec2:DeleteCoipPool",
      "ec2:GetCoipPoolUsage"
    ],
    "local-gateway-route-table*": [
      "ec2:CreateCoipPool",
      "ec2:CreateLocalGatewayRoute",
      "ec2:CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
      "ec2:CreateLocalGatewayRouteTableVpcAssociation",
      "ec2:DeleteLocalGatewayRoute",
      "ec2:DeleteLocalGatewayRouteTable",
      "ec2:ModifyLocalGatewayRoute",
      "ec2:SearchLocalGatewayRoutes"
    ],
    "customer-gateway*": [
      "ec2:CreateCustomerGateway",
      "ec2:CreateVpnConnection",
      "ec2:DeleteCustomerGateway"
    ],
    "egress-only-internet-gateway*": [
      "ec2:CreateEgressOnlyInternetGateway",
      "ec2:DeleteEgressOnlyInternetGateway"
    ],
    "fleet*": [
      "ec2:CreateFleet",
      "ec2:DeleteFleets",
      "ec2:DescribeFleetHistory",
      "ec2:DescribeFleetInstances",
      "ec2:ModifyFleet"
    ],
    "vpc-flow-log*": [
      "ec2:CreateFlowLogs",
      "ec2:DeleteFlowLogs",
      "ec2:GetFlowLogsIntegrationTemplate"
    ],
    "export-instance-task*": [
      "ec2:CreateInstanceExportTask"
    ],
    "ipam-resource-discovery*": [
      "ec2:CreateIpamResourceDiscovery",
      "ec2:DeleteIpamResourceDiscovery",
      "ec2:GetIpamDiscoveredAccounts",
      "ec2:GetIpamDiscoveredResourceCidrs",
      "ec2:ModifyIpamResourceDiscovery"
    ],
    "key-pair*": [
      "ec2:CreateKeyPair",
      "ec2:ImportKeyPair"
    ],
    "launch-template*": [
      "ec2:CreateLaunchTemplate",
      "ec2:CreateLaunchTemplateVersion",
      "ec2:DeleteLaunchTemplate",
      "ec2:DeleteLaunchTemplateVersions",
      "ec2:ModifyLaunchTemplate"
    ],
    "local-gateway*": [
      "ec2:CreateLocalGatewayRouteTable"
    ],
    "prefix-list*": [
      "ec2:CreateManagedPrefixList",
      "ec2:CreateTransitGatewayPrefixListReference",
      "ec2:DeleteManagedPrefixList",
      "ec2:DeleteTransitGatewayPrefixListReference",
      "ec2:GetManagedPrefixListAssociations",
      "ec2:GetManagedPrefixListEntries",
      "ec2:ModifyManagedPrefixList",
      "ec2:ModifyTransitGatewayPrefixListReference",
      "ec2:RestoreManagedPrefixListVersion"
    ],
    "network-acl*": [
      "ec2:CreateNetworkAcl",
      "ec2:CreateNetworkAclEntry",
      "ec2:DeleteNetworkAcl",
      "ec2:DeleteNetworkAclEntry",
      "ec2:ReplaceNetworkAclAssociation",
      "ec2:ReplaceNetworkAclEntry"
    ],
    "network-insights-access-scope*": [
      "ec2:CreateNetworkInsightsAccessScope",
      "ec2:DeleteNetworkInsightsAccessScope",
      "ec2:StartNetworkInsightsAccessScopeAnalysis"
    ],
    "network-insights-path*": [
      "ec2:CreateNetworkInsightsPath",
      "ec2:DeleteNetworkInsightsPath"
    ],
    "placement-group*": [
      "ec2:CreatePlacementGroup"
    ],
    "ipv4pool-ec2*": [
      "ec2:CreatePublicIpv4Pool",
      "ec2:DeletePublicIpv4Pool",
      "ec2:DeprovisionPublicIpv4PoolCidr"
    ],
    "capacity-reservation": [
      "ec2:CreateTags",
      "ec2:DeleteTags"
    ],
    "traffic-mirror-filter*": [
      "ec2:CreateTrafficMirrorFilter",
      "ec2:CreateTrafficMirrorFilterRule",
      "ec2:DeleteTrafficMirrorFilter",
      "ec2:DeleteTrafficMirrorFilterRule",
      "ec2:ModifyTrafficMirrorFilterNetworkServices",
      "ec2:ModifyTrafficMirrorFilterRule"
    ],
    "traffic-mirror-target*": [
      "ec2:CreateTrafficMirrorTarget",
      "ec2:DeleteTrafficMirrorTarget"
    ],
    "transit-gateway*": [
      "ec2:CreateTransitGateway",
      "ec2:CreateTransitGatewayMulticastDomain",
      "ec2:CreateTransitGatewayPeeringAttachment",
      "ec2:CreateTransitGatewayPolicyTable",
      "ec2:CreateTransitGatewayRouteTable",
      "ec2:DeleteTransitGateway",
      "ec2:ModifyTransitGateway"
    ],
    "transit-gateway-route-table*": [
      "ec2:CreateTransitGatewayRoute",
      "ec2:DeleteTransitGatewayRoute",
      "ec2:DeleteTransitGatewayRouteTable",
      "ec2:DisableTransitGatewayRouteTablePropagation",
      "ec2:EnableTransitGatewayRouteTablePropagation",
      "ec2:ReplaceTransitGatewayRoute",
      "ec2:SearchTransitGatewayRoutes"
    ],
    "verified-access-endpoint*": [
      "ec2:CreateVerifiedAccessEndpoint",
      "ec2:DeleteVerifiedAccessEndpoint",
      "ec2:GetVerifiedAccessEndpointPolicy",
      "ec2:ModifyVerifiedAccessEndpoint",
      "ec2:ModifyVerifiedAccessEndpointPolicy"
    ],
    "verified-access-group*": [
      "ec2:CreateVerifiedAccessGroup",
      "ec2:DeleteVerifiedAccessGroup",
      "ec2:GetVerifiedAccessGroupPolicy",
      "ec2:ModifyVerifiedAccessGroup",
      "ec2:ModifyVerifiedAccessGroupPolicy"
    ],
    "verified-access-trust-provider*": [
      "ec2:CreateVerifiedAccessTrustProvider",
      "ec2:DeleteVerifiedAccessTrustProvider",
      "ec2:ModifyVerifiedAccessTrustProvider"
    ],
    "volume*": [
      "ec2:CreateVolume",
      "ec2:DeleteVolume",
      "ec2:DescribeVolumeAttribute",
      "ec2:DetachVolume",
      "ec2:EnableVolumeIO",
      "ec2:ImportVolume",
      "ec2:ModifyVolume",
      "ec2:ModifyVolumeAttribute"
    ],
    "vpc-endpoint": [
      "ec2:CreateVpcEndpointConnectionNotification",
      "ec2:DeleteVpcEndpointConnectionNotifications",
      "ec2:ModifyVpcEndpointConnectionNotification"
    ],
    "vpn-connection*": [
      "ec2:CreateVpnConnectionRoute",
      "ec2:DeleteVpnConnection",
      "ec2:DeleteVpnConnectionRoute",
      "ec2:GetVpnConnectionDeviceSampleConfiguration",
      "ec2:ModifyVpnConnection",
      "ec2:ModifyVpnConnectionOptions",
      "ec2:ModifyVpnTunnelCertificate",
      "ec2:ModifyVpnTunnelOptions"
    ],
    "vpn-gateway*": [
      "ec2:CreateVpnGateway",
      "ec2:DeleteVpnGateway"
    ],
    "ipam-scope*": [
      "ec2:DeleteIpamScope",
      "ec2:GetIpamAddressHistory",
      "ec2:GetIpamResourceCidrs",
      "ec2:ModifyIpamResourceCidr",
      "ec2:ModifyIpamScope"
    ],
    "key-pair": [
      "ec2:DeleteKeyPair"
    ],
    "local-gateway-route-table-virtual-interface-group-association*": [
      "ec2:DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation"
    ],
    "local-gateway-route-table-vpc-association*": [
      "ec2:DeleteLocalGatewayRouteTableVpcAssociation"
    ],
    "network-insights-access-scope-analysis*": [
      "ec2:DeleteNetworkInsightsAccessScopeAnalysis"
    ],
    "network-insights-analysis*": [
      "ec2:DeleteNetworkInsightsAnalysis",
      "ec2:StartNetworkInsightsAnalysis"
    ],
    "network-interface": [
      "ec2:DeleteNetworkInterfacePermission",
      "ec2:DeregisterTransitGatewayMulticastGroupMembers",
      "ec2:DeregisterTransitGatewayMulticastGroupSources"
    ],
    "placement-group": [
      "ec2:DeletePlacementGroup"
    ],
    "traffic-mirror-session*": [
      "ec2:DeleteTrafficMirrorSession",
      "ec2:ModifyTrafficMirrorSession"
    ],
    "transit-gateway-connect-peer*": [
      "ec2:DeleteTransitGatewayConnectPeer"
    ],
    "transit-gateway-multicast-domain*": [
      "ec2:DeleteTransitGatewayMulticastDomain",
      "ec2:GetTransitGatewayMulticastDomainAssociations",
      "ec2:SearchTransitGatewayMulticastGroups"
    ],
    "transit-gateway-policy-table*": [
      "ec2:DeleteTransitGatewayPolicyTable",
      "ec2:GetTransitGatewayPolicyTableAssociations",
      "ec2:GetTransitGatewayPolicyTableEntries"
    ],
    "transit-gateway-route-table-announcement*": [
      "ec2:DeleteTransitGatewayRouteTableAnnouncement"
    ],
    "vpc-endpoint*": [
      "ec2:DeleteVpcEndpoints",
      "ec2:ModifyVpcEndpoint"
    ],
    "vpc-peering-connection*": [
      "ec2:DeleteVpcPeeringConnection",
      "ec2:ModifyVpcPeeringConnectionOptions",
      "ec2:RejectVpcPeeringConnection"
    ],
    "client-vpn-endpoint": [
      "ec2:DescribeClientVpnEndpoints"
    ],
    "image": [
      "ec2:DescribeFastLaunchImages",
      "ec2:ListImagesInRecycleBin"
    ],
    "vpc": [
      "ec2:DisableVpcClassicLinkDnsSupport",
      "ec2:DisassociateVpcCidrBlock",
      "ec2:EnableVpcClassicLinkDnsSupport"
    ],
    "ipam-resource-discovery-association*": [
      "ec2:DisassociateIpamResourceDiscovery"
    ],
    "internet-gateway": [
      "ec2:DisassociateRouteTable"
    ],
    "export-image-task*": [
      "ec2:ExportImage"
    ],
    "import-snapshot-task*": [
      "ec2:ImportSnapshot"
    ],
    "snapshot": [
      "ec2:ListSnapshotsInRecycleBin"
    ],
    "reserved-instances*": [
      "ec2:ModifyReservedInstances"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonec2.html"
  },
  "autoscaling": {
    "autoScalingGroup*": [
      "autoscaling:AttachInstances",
      "autoscaling:AttachLoadBalancerTargetGroups",
      "autoscaling:AttachLoadBalancers",
      "autoscaling:AttachTrafficSources",
      "autoscaling:BatchDeleteScheduledAction",
      "autoscaling:BatchPutScheduledUpdateGroupAction",
      "autoscaling:CancelInstanceRefresh",
      "autoscaling:CompleteLifecycleAction",
      "autoscaling:CreateAutoScalingGroup",
      "autoscaling:CreateOrUpdateTags",
      "autoscaling:DeleteAutoScalingGroup",
      "autoscaling:DeleteLifecycleHook",
      "autoscaling:DeleteNotificationConfiguration",
      "autoscaling:DeletePolicy",
      "autoscaling:DeleteScheduledAction",
      "autoscaling:DeleteTags",
      "autoscaling:DeleteWarmPool",
      "autoscaling:DetachInstances",
      "autoscaling:DetachLoadBalancerTargetGroups",
      "autoscaling:DetachLoadBalancers",
      "autoscaling:DetachTrafficSources",
      "autoscaling:DisableMetricsCollection",
      "autoscaling:EnableMetricsCollection",
      "autoscaling:EnterStandby",
      "autoscaling:ExecutePolicy",
      "autoscaling:ExitStandby",
      "autoscaling:PutLifecycleHook",
      "autoscaling:PutNotificationConfiguration",
      "autoscaling:PutScalingPolicy",
      "autoscaling:PutScheduledUpdateGroupAction",
      "autoscaling:PutWarmPool",
      "autoscaling:RecordLifecycleActionHeartbeat",
      "autoscaling:ResumeProcesses",
      "autoscaling:RollbackInstanceRefresh",
      "autoscaling:SetDesiredCapacity",
      "autoscaling:SetInstanceHealth",
      "autoscaling:SetInstanceProtection",
      "autoscaling:StartInstanceRefresh",
      "autoscaling:SuspendProcesses",
      "autoscaling:TerminateInstanceInAutoScalingGroup",
      "autoscaling:UpdateAutoScalingGroup"
    ],
    "launchConfiguration*": [
      "autoscaling:CreateLaunchConfiguration",
      "autoscaling:DeleteLaunchConfiguration"
    ],
    "?": [
      "autoscaling:DescribeAccountLimits",
      "autoscaling:DescribeAdjustmentTypes",
      "autoscaling:DescribeAutoScalingGroups",
      "autoscaling:DescribeAutoScalingInstances",
      "autoscaling:DescribeAutoScalingNotificationTypes",
      "autoscaling:DescribeInstanceRefreshes",
      "autoscaling:DescribeLaunchConfigurations",
      "autoscaling:DescribeLifecycleHookTypes",
      "autoscaling:DescribeLifecycleHooks",
      "autoscaling:DescribeLoadBalancerTargetGroups",
      "autoscaling:DescribeLoadBalancers",
      "autoscaling:DescribeMetricCollectionTypes",
      "autoscaling:DescribeNotificationConfigurations",
      "autoscaling:DescribePolicies",
      "autoscaling:DescribeScalingActivities",
      "autoscaling:DescribeScalingProcessTypes",
      "autoscaling:DescribeScheduledActions",
      "autoscaling:DescribeTags",
      "autoscaling:DescribeTerminationPolicyTypes",
      "autoscaling:DescribeTrafficSources",
      "autoscaling:DescribeWarmPool",
      "autoscaling:GetPredictiveScalingForecast"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonec2autoscaling.html"
  },
  "imagebuilder": {
    "image*": [
      "imagebuilder:CancelImageCreation",
      "imagebuilder:CreateImage",
      "imagebuilder:DeleteImage",
      "imagebuilder:GetImage",
      "imagebuilder:GetImagePolicy",
      "imagebuilder:ImportVmImage",
      "imagebuilder:ListImagePackages",
      "imagebuilder:PutImagePolicy"
    ],
    "component*": [
      "imagebuilder:CreateComponent",
      "imagebuilder:DeleteComponent",
      "imagebuilder:GetComponent",
      "imagebuilder:GetComponentPolicy",
      "imagebuilder:ImportComponent",
      "imagebuilder:PutComponentPolicy"
    ],
    "containerRecipe*": [
      "imagebuilder:CreateContainerRecipe",
      "imagebuilder:DeleteContainerRecipe",
      "imagebuilder:GetContainerRecipe",
      "imagebuilder:GetContainerRecipePolicy",
      "imagebuilder:PutContainerRecipePolicy"
    ],
    "distributionConfiguration*": [
      "imagebuilder:CreateDistributionConfiguration",
      "imagebuilder:DeleteDistributionConfiguration",
      "imagebuilder:GetDistributionConfiguration",
      "imagebuilder:UpdateDistributionConfiguration"
    ],
    "imagePipeline*": [
      "imagebuilder:CreateImagePipeline",
      "imagebuilder:DeleteImagePipeline",
      "imagebuilder:GetImagePipeline",
      "imagebuilder:ListImagePipelineImages",
      "imagebuilder:StartImagePipelineExecution",
      "imagebuilder:UpdateImagePipeline"
    ],
    "imageRecipe*": [
      "imagebuilder:CreateImageRecipe",
      "imagebuilder:DeleteImageRecipe",
      "imagebuilder:GetImageRecipe",
      "imagebuilder:GetImageRecipePolicy",
      "imagebuilder:PutImageRecipePolicy"
    ],
    "infrastructureConfiguration*": [
      "imagebuilder:CreateInfrastructureConfiguration",
      "imagebuilder:DeleteInfrastructureConfiguration",
      "imagebuilder:GetInfrastructureConfiguration",
      "imagebuilder:UpdateInfrastructureConfiguration"
    ],
    "componentVersion*": [
      "imagebuilder:ListComponentBuildVersions"
    ],
    "?": [
      "imagebuilder:ListComponents",
      "imagebuilder:ListContainerRecipes",
      "imagebuilder:ListDistributionConfigurations",
      "imagebuilder:ListImagePipelines",
      "imagebuilder:ListImageRecipes",
      "imagebuilder:ListImages",
      "imagebuilder:ListInfrastructureConfigurations"
    ],
    "imageVersion*": [
      "imagebuilder:ListImageBuildVersions"
    ],
    "component": [
      "imagebuilder:ListTagsForResource",
      "imagebuilder:TagResource",
      "imagebuilder:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonec2imagebuilder.html"
  },
  "ec2-instance-connect": {
    "instance*": [
      "ec2-instance-connect:SendSSHPublicKey",
      "ec2-instance-connect:SendSerialConsoleSSHPublicKey"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonec2instanceconnect.html"
  },
  "elasticbeanstalk": {
    "environment*": [
      "elasticbeanstalk:AbortEnvironmentUpdate",
      "elasticbeanstalk:ApplyEnvironmentManagedAction",
      "elasticbeanstalk:AssociateEnvironmentOperationsRole",
      "elasticbeanstalk:CreateEnvironment",
      "elasticbeanstalk:DeleteEnvironmentConfiguration",
      "elasticbeanstalk:DisassociateEnvironmentOperationsRole",
      "elasticbeanstalk:RebuildEnvironment",
      "elasticbeanstalk:RequestEnvironmentInfo",
      "elasticbeanstalk:RestartAppServer",
      "elasticbeanstalk:RetrieveEnvironmentInfo",
      "elasticbeanstalk:SwapEnvironmentCNAMEs",
      "elasticbeanstalk:TerminateEnvironment",
      "elasticbeanstalk:UpdateEnvironment"
    ],
    "application": [
      "elasticbeanstalk:AddTags",
      "elasticbeanstalk:DescribeApplications",
      "elasticbeanstalk:DescribeEvents",
      "elasticbeanstalk:ListTagsForResource",
      "elasticbeanstalk:RemoveTags",
      "elasticbeanstalk:UpdateTagsForResource"
    ],
    "?": [
      "elasticbeanstalk:CheckDNSAvailability",
      "elasticbeanstalk:CreateStorageLocation",
      "elasticbeanstalk:DescribeAccountAttributes",
      "elasticbeanstalk:ListPlatformBranches"
    ],
    "application*": [
      "elasticbeanstalk:ComposeEnvironments",
      "elasticbeanstalk:CreateApplication",
      "elasticbeanstalk:CreateApplicationVersion",
      "elasticbeanstalk:DeleteApplication",
      "elasticbeanstalk:PutInstanceStatistics",
      "elasticbeanstalk:UpdateApplication",
      "elasticbeanstalk:UpdateApplicationResourceLifecycle"
    ],
    "configurationtemplate*": [
      "elasticbeanstalk:CreateConfigurationTemplate",
      "elasticbeanstalk:DeleteConfigurationTemplate",
      "elasticbeanstalk:UpdateConfigurationTemplate"
    ],
    "platform*": [
      "elasticbeanstalk:CreatePlatformVersion",
      "elasticbeanstalk:DeletePlatformVersion"
    ],
    "applicationversion*": [
      "elasticbeanstalk:DeleteApplicationVersion",
      "elasticbeanstalk:UpdateApplicationVersion"
    ],
    "applicationversion": [
      "elasticbeanstalk:DescribeApplicationVersions"
    ],
    "configurationtemplate": [
      "elasticbeanstalk:DescribeConfigurationOptions",
      "elasticbeanstalk:DescribeConfigurationSettings",
      "elasticbeanstalk:ValidateConfigurationSettings"
    ],
    "environment": [
      "elasticbeanstalk:DescribeEnvironmentHealth",
      "elasticbeanstalk:DescribeEnvironmentManagedActionHistory",
      "elasticbeanstalk:DescribeEnvironmentManagedActions",
      "elasticbeanstalk:DescribeEnvironmentResources",
      "elasticbeanstalk:DescribeEnvironments",
      "elasticbeanstalk:DescribeInstancesHealth"
    ],
    "platform": [
      "elasticbeanstalk:DescribePlatformVersion",
      "elasticbeanstalk:ListPlatformVersions"
    ],
    "solutionstack": [
      "elasticbeanstalk:ListAvailableSolutionStacks"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awselasticbeanstalk.html"
  },
  "ebs": {
    "snapshot*": [
      "ebs:CompleteSnapshot",
      "ebs:GetSnapshotBlock",
      "ebs:ListChangedBlocks",
      "ebs:ListSnapshotBlocks",
      "ebs:PutSnapshotBlock"
    ],
    "snapshot": [
      "ebs:StartSnapshot"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonelasticblockstore.html"
  },
  "ecr": {
    "repository*": [
      "ecr:BatchCheckLayerAvailability",
      "ecr:BatchDeleteImage",
      "ecr:BatchGetImage",
      "ecr:BatchGetRepositoryScanningConfiguration",
      "ecr:CompleteLayerUpload",
      "ecr:DeleteLifecyclePolicy",
      "ecr:DeleteRepository",
      "ecr:DeleteRepositoryPolicy",
      "ecr:DescribeImageReplicationStatus",
      "ecr:DescribeImageScanFindings",
      "ecr:DescribeImages",
      "ecr:GetDownloadUrlForLayer",
      "ecr:GetLifecyclePolicy",
      "ecr:GetLifecyclePolicyPreview",
      "ecr:GetRepositoryPolicy",
      "ecr:InitiateLayerUpload",
      "ecr:ListImages",
      "ecr:ListTagsForResource",
      "ecr:PutImage",
      "ecr:PutImageScanningConfiguration",
      "ecr:PutImageTagMutability",
      "ecr:PutLifecyclePolicy",
      "ecr:SetRepositoryPolicy",
      "ecr:StartImageScan",
      "ecr:StartLifecyclePolicyPreview",
      "ecr:TagResource",
      "ecr:UntagResource",
      "ecr:UploadLayerPart"
    ],
    "?": [
      "ecr:BatchImportUpstreamImage",
      "ecr:CreatePullThroughCacheRule",
      "ecr:CreateRepository",
      "ecr:DeletePullThroughCacheRule",
      "ecr:DeleteRegistryPolicy",
      "ecr:DescribePullThroughCacheRules",
      "ecr:DescribeRegistry",
      "ecr:GetAuthorizationToken",
      "ecr:GetRegistryPolicy",
      "ecr:GetRegistryScanningConfiguration",
      "ecr:PutRegistryPolicy",
      "ecr:PutRegistryScanningConfiguration",
      "ecr:PutReplicationConfiguration"
    ],
    "repository": [
      "ecr:DescribeRepositories"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonelasticcontainerregistry.html"
  },
  "ecr-public": {
    "repository*": [
      "ecr-public:BatchCheckLayerAvailability",
      "ecr-public:BatchDeleteImage",
      "ecr-public:CompleteLayerUpload",
      "ecr-public:CreateRepository",
      "ecr-public:DeleteRepository",
      "ecr-public:DeleteRepositoryPolicy",
      "ecr-public:DescribeImageTags",
      "ecr-public:DescribeImages",
      "ecr-public:GetRepositoryCatalogData",
      "ecr-public:GetRepositoryPolicy",
      "ecr-public:InitiateLayerUpload",
      "ecr-public:ListTagsForResource",
      "ecr-public:PutImage",
      "ecr-public:PutRepositoryCatalogData",
      "ecr-public:SetRepositoryPolicy",
      "ecr-public:TagResource",
      "ecr-public:UntagResource",
      "ecr-public:UploadLayerPart"
    ],
    "registry*": [
      "ecr-public:DescribeRegistries",
      "ecr-public:GetRegistryCatalogData",
      "ecr-public:PutRegistryCatalogData"
    ],
    "repository": [
      "ecr-public:DescribeRepositories"
    ],
    "?": [
      "ecr-public:GetAuthorizationToken"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonelasticcontainerregistrypublic.html"
  },
  "ecs": {
    "?": [
      "ecs:CreateCapacityProvider",
      "ecs:CreateCluster",
      "ecs:CreateTaskSet",
      "ecs:DeleteAccountSetting",
      "ecs:DeregisterTaskDefinition",
      "ecs:DescribeTaskDefinition",
      "ecs:DiscoverPollEndpoint",
      "ecs:ListAccountSettings",
      "ecs:ListClusters",
      "ecs:ListServices",
      "ecs:ListServicesByNamespace",
      "ecs:ListTaskDefinitionFamilies",
      "ecs:ListTaskDefinitions",
      "ecs:PutAccountSetting",
      "ecs:PutAccountSettingDefault",
      "ecs:RegisterTaskDefinition"
    ],
    "service*": [
      "ecs:CreateService",
      "ecs:DeleteService",
      "ecs:DescribeServices",
      "ecs:UpdateService",
      "ecs:UpdateServicePrimaryTaskSet"
    ],
    "container-instance*": [
      "ecs:DeleteAttributes",
      "ecs:DescribeContainerInstances",
      "ecs:ListTasks",
      "ecs:PutAttributes",
      "ecs:StartTelemetrySession",
      "ecs:UpdateContainerAgent",
      "ecs:UpdateContainerInstancesState"
    ],
    "capacity-provider*": [
      "ecs:DeleteCapacityProvider",
      "ecs:DescribeCapacityProviders",
      "ecs:UpdateCapacityProvider"
    ],
    "cluster*": [
      "ecs:DeleteCluster",
      "ecs:DeregisterContainerInstance",
      "ecs:DescribeClusters",
      "ecs:ListAttributes",
      "ecs:ListContainerInstances",
      "ecs:PutClusterCapacityProviders",
      "ecs:RegisterContainerInstance",
      "ecs:SubmitAttachmentStateChanges",
      "ecs:SubmitContainerStateChange",
      "ecs:SubmitTaskStateChange",
      "ecs:UpdateCluster",
      "ecs:UpdateClusterSettings"
    ],
    "task-definition*": [
      "ecs:DeleteTaskDefinitions",
      "ecs:RunTask",
      "ecs:StartTask"
    ],
    "task-set*": [
      "ecs:DeleteTaskSet",
      "ecs:DescribeTaskSets",
      "ecs:UpdateTaskSet"
    ],
    "task*": [
      "ecs:DescribeTasks",
      "ecs:GetTaskProtection",
      "ecs:StopTask",
      "ecs:UpdateTaskProtection"
    ],
    "cluster": [
      "ecs:ExecuteCommand",
      "ecs:ListTagsForResource"
    ],
    "capacity-provider": [
      "ecs:TagResource",
      "ecs:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonelasticcontainerservice.html"
  },
  "drs": {
    "?": [
      "drs:CreateExtendedSourceServer",
      "drs:CreateReplicationConfigurationTemplate",
      "drs:DescribeJobs",
      "drs:DescribeRecoveryInstances",
      "drs:DescribeReplicationConfigurationTemplates",
      "drs:DescribeSourceServers",
      "drs:InitializeService",
      "drs:ListExtensibleSourceServers",
      "drs:ListStagingAccounts",
      "drs:ListTagsForResource"
    ],
    "JobResource*": [
      "drs:DeleteJob",
      "drs:DescribeJobLogItems"
    ],
    "RecoveryInstanceResource*": [
      "drs:DeleteRecoveryInstance",
      "drs:DisconnectRecoveryInstance",
      "drs:GetFailbackReplicationConfiguration",
      "drs:ReverseReplication",
      "drs:StartFailbackLaunch",
      "drs:StopFailback",
      "drs:TerminateRecoveryInstances",
      "drs:UpdateFailbackReplicationConfiguration"
    ],
    "ReplicationConfigurationTemplateResource*": [
      "drs:DeleteReplicationConfigurationTemplate",
      "drs:UpdateReplicationConfigurationTemplate"
    ],
    "SourceServerResource*": [
      "drs:DeleteSourceServer",
      "drs:DescribeRecoverySnapshots",
      "drs:DisconnectSourceServer",
      "drs:GetLaunchConfiguration",
      "drs:GetReplicationConfiguration",
      "drs:RetryDataReplication",
      "drs:StartRecovery",
      "drs:StartReplication",
      "drs:StopReplication",
      "drs:UpdateLaunchConfiguration",
      "drs:UpdateReplicationConfiguration"
    ],
    "JobResource": [
      "drs:TagResource",
      "drs:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awselasticdisasterrecovery.html"
  },
  "elasticfilesystem": {
    "file-system*": [
      "elasticfilesystem:CreateAccessPoint",
      "elasticfilesystem:CreateMountTarget",
      "elasticfilesystem:CreateReplicationConfiguration",
      "elasticfilesystem:CreateTags",
      "elasticfilesystem:DeleteFileSystem",
      "elasticfilesystem:DeleteFileSystemPolicy",
      "elasticfilesystem:DeleteMountTarget",
      "elasticfilesystem:DeleteReplicationConfiguration",
      "elasticfilesystem:DeleteTags",
      "elasticfilesystem:DescribeBackupPolicy",
      "elasticfilesystem:DescribeLifecycleConfiguration",
      "elasticfilesystem:DescribeMountTargetSecurityGroups",
      "elasticfilesystem:DescribeMountTargets",
      "elasticfilesystem:DescribeTags",
      "elasticfilesystem:ModifyMountTargetSecurityGroups",
      "elasticfilesystem:PutBackupPolicy",
      "elasticfilesystem:PutFileSystemPolicy",
      "elasticfilesystem:PutLifecycleConfiguration",
      "elasticfilesystem:UpdateFileSystem"
    ],
    "?": [
      "elasticfilesystem:CreateFileSystem",
      "elasticfilesystem:DescribeAccountPreferences",
      "elasticfilesystem:PutAccountPreferences"
    ],
    "access-point*": [
      "elasticfilesystem:DeleteAccessPoint"
    ],
    "access-point": [
      "elasticfilesystem:DescribeAccessPoints",
      "elasticfilesystem:ListTagsForResource",
      "elasticfilesystem:TagResource",
      "elasticfilesystem:UntagResource"
    ],
    "file-system": [
      "elasticfilesystem:DescribeFileSystemPolicy",
      "elasticfilesystem:DescribeFileSystems",
      "elasticfilesystem:DescribeReplicationConfigurations"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonelasticfilesystem.html"
  },
  "elastic-inference": {
    "accelerator*": [
      "elastic-inference:Connect"
    ],
    "?": [
      "elastic-inference:DescribeAcceleratorOfferings",
      "elastic-inference:DescribeAcceleratorTypes",
      "elastic-inference:DescribeAccelerators",
      "elastic-inference:ListTagsForResource",
      "elastic-inference:TagResource",
      "elastic-inference:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonelasticinference.html"
  },
  "eks": {
    "cluster*": [
      "eks:AssociateEncryptionConfig",
      "eks:AssociateIdentityProviderConfig",
      "eks:CreateAddon",
      "eks:CreateFargateProfile",
      "eks:CreateNodegroup",
      "eks:DeleteCluster",
      "eks:DeregisterCluster",
      "eks:DescribeCluster",
      "eks:DescribeUpdate",
      "eks:ListAddons",
      "eks:ListFargateProfiles",
      "eks:ListIdentityProviderConfigs",
      "eks:ListNodegroups",
      "eks:ListUpdates",
      "eks:UpdateClusterConfig",
      "eks:UpdateClusterVersion"
    ],
    "?": [
      "eks:CreateCluster",
      "eks:DescribeAddonConfiguration",
      "eks:DescribeAddonVersions",
      "eks:ListClusters",
      "eks:RegisterCluster"
    ],
    "addon*": [
      "eks:DeleteAddon",
      "eks:DescribeAddon",
      "eks:UpdateAddon"
    ],
    "fargateprofile*": [
      "eks:DeleteFargateProfile",
      "eks:DescribeFargateProfile"
    ],
    "nodegroup*": [
      "eks:DeleteNodegroup",
      "eks:DescribeNodegroup",
      "eks:UpdateNodegroupConfig",
      "eks:UpdateNodegroupVersion"
    ],
    "identityproviderconfig*": [
      "eks:DescribeIdentityProviderConfig",
      "eks:DisassociateIdentityProviderConfig"
    ],
    "addon": [
      "eks:ListTagsForResource",
      "eks:TagResource",
      "eks:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonelastickubernetesservice.html"
  },
  "elasticloadbalancing": {
    "listener/app*": [
      "elasticloadbalancing:AddListenerCertificates",
      "elasticloadbalancing:CreateRule",
      "elasticloadbalancing:DeleteListener",
      "elasticloadbalancing:ModifyListener",
      "elasticloadbalancing:RemoveListenerCertificates"
    ],
    "listener-rule/app": [
      "elasticloadbalancing:AddTags",
      "elasticloadbalancing:RemoveTags"
    ],
    "loadbalancer/app/": [
      "elasticloadbalancing:CreateListener",
      "elasticloadbalancing:CreateLoadBalancer",
      "elasticloadbalancing:DeleteLoadBalancer",
      "elasticloadbalancing:ModifyLoadBalancerAttributes",
      "elasticloadbalancing:SetIpAddressType",
      "elasticloadbalancing:SetSecurityGroups",
      "elasticloadbalancing:SetSubnets"
    ],
    "targetgroup*": [
      "elasticloadbalancing:CreateTargetGroup",
      "elasticloadbalancing:DeleteTargetGroup",
      "elasticloadbalancing:DeregisterTargets",
      "elasticloadbalancing:ModifyTargetGroup",
      "elasticloadbalancing:ModifyTargetGroupAttributes",
      "elasticloadbalancing:RegisterTargets"
    ],
    "listener-rule/app*": [
      "elasticloadbalancing:DeleteRule",
      "elasticloadbalancing:ModifyRule",
      "elasticloadbalancing:SetRulePriorities"
    ],
    "?": [
      "elasticloadbalancing:DescribeAccountLimits",
      "elasticloadbalancing:DescribeListenerCertificates",
      "elasticloadbalancing:DescribeListeners",
      "elasticloadbalancing:DescribeLoadBalancerAttributes",
      "elasticloadbalancing:DescribeLoadBalancers",
      "elasticloadbalancing:DescribeRules",
      "elasticloadbalancing:DescribeSSLPolicies",
      "elasticloadbalancing:DescribeTags",
      "elasticloadbalancing:DescribeTargetGroupAttributes",
      "elasticloadbalancing:DescribeTargetGroups",
      "elasticloadbalancing:DescribeTargetHealth"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_elasticloadbalancingv2.html"
  },
  "elasticmapreduce": {
    "cluster*": [
      "elasticmapreduce:AddInstanceFleet",
      "elasticmapreduce:AddInstanceGroups",
      "elasticmapreduce:AddJobFlowSteps",
      "elasticmapreduce:CancelSteps",
      "elasticmapreduce:CreatePersistentAppUI",
      "elasticmapreduce:DescribeCluster",
      "elasticmapreduce:DescribeJobFlows",
      "elasticmapreduce:DescribePersistentAppUI",
      "elasticmapreduce:DescribeStep",
      "elasticmapreduce:GetAutoTerminationPolicy",
      "elasticmapreduce:GetClusterSessionCredentials",
      "elasticmapreduce:GetManagedScalingPolicy",
      "elasticmapreduce:GetOnClusterAppUIPresignedURL",
      "elasticmapreduce:GetPersistentAppUIPresignedURL",
      "elasticmapreduce:ListBootstrapActions",
      "elasticmapreduce:ListInstanceFleets",
      "elasticmapreduce:ListInstanceGroups",
      "elasticmapreduce:ListInstances",
      "elasticmapreduce:ListSteps",
      "elasticmapreduce:ModifyCluster",
      "elasticmapreduce:ModifyInstanceFleet",
      "elasticmapreduce:PutAutoScalingPolicy",
      "elasticmapreduce:PutAutoTerminationPolicy",
      "elasticmapreduce:PutManagedScalingPolicy",
      "elasticmapreduce:RemoveAutoScalingPolicy",
      "elasticmapreduce:RemoveAutoTerminationPolicy",
      "elasticmapreduce:RemoveManagedScalingPolicy",
      "elasticmapreduce:SetTerminationProtection",
      "elasticmapreduce:StartNotebookExecution",
      "elasticmapreduce:TerminateJobFlows"
    ],
    "cluster": [
      "elasticmapreduce:AddTags",
      "elasticmapreduce:ModifyInstanceGroups",
      "elasticmapreduce:RemoveTags"
    ],
    "?": [
      "elasticmapreduce:CreateSecurityConfiguration",
      "elasticmapreduce:CreateStudio",
      "elasticmapreduce:DeleteSecurityConfiguration",
      "elasticmapreduce:DescribeReleaseLabel",
      "elasticmapreduce:DescribeSecurityConfiguration",
      "elasticmapreduce:GetBlockPublicAccessConfiguration",
      "elasticmapreduce:ListClusters",
      "elasticmapreduce:ListNotebookExecutions",
      "elasticmapreduce:ListReleaseLabels",
      "elasticmapreduce:ListSecurityConfigurations",
      "elasticmapreduce:ListStudioSessionMappings",
      "elasticmapreduce:ListStudios",
      "elasticmapreduce:PutBlockPublicAccessConfiguration",
      "elasticmapreduce:RunJobFlow"
    ],
    "studio*": [
      "elasticmapreduce:CreateStudioPresignedUrl",
      "elasticmapreduce:CreateStudioSessionMapping",
      "elasticmapreduce:DeleteStudio",
      "elasticmapreduce:DeleteStudioSessionMapping",
      "elasticmapreduce:DescribeStudio",
      "elasticmapreduce:GetStudioSessionMapping",
      "elasticmapreduce:UpdateStudio",
      "elasticmapreduce:UpdateStudioSessionMapping"
    ],
    "notebook-execution*": [
      "elasticmapreduce:DescribeNotebookExecution",
      "elasticmapreduce:StopNotebookExecution"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonelasticmapreduce.html"
  },
  "elastictranscoder": {
    "job*": [
      "elastictranscoder:CancelJob",
      "elastictranscoder:ReadJob"
    ],
    "pipeline*": [
      "elastictranscoder:CreateJob",
      "elastictranscoder:DeletePipeline",
      "elastictranscoder:ListJobsByPipeline",
      "elastictranscoder:ReadPipeline",
      "elastictranscoder:UpdatePipeline",
      "elastictranscoder:UpdatePipelineNotifications",
      "elastictranscoder:UpdatePipelineStatus"
    ],
    "?": [
      "elastictranscoder:CreatePipeline",
      "elastictranscoder:CreatePreset",
      "elastictranscoder:ListJobsByStatus",
      "elastictranscoder:ListPipelines",
      "elastictranscoder:ListPresets",
      "elastictranscoder:TestRole"
    ],
    "preset*": [
      "elastictranscoder:DeletePreset",
      "elastictranscoder:ReadPreset"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonelastictranscoder.html"
  },
  "elasticache": {
    "cluster": [
      "elasticache:AddTagsToResource",
      "elasticache:BatchApplyUpdateAction",
      "elasticache:BatchStopUpdateAction",
      "elasticache:CompleteMigration",
      "elasticache:DescribeUpdateActions",
      "elasticache:ListAllowedNodeTypeModifications",
      "elasticache:ListTagsForResource",
      "elasticache:RemoveTagsFromResource"
    ],
    "securitygroup*": [
      "elasticache:AuthorizeCacheSecurityGroupIngress",
      "elasticache:CreateCacheSecurityGroup",
      "elasticache:DeleteCacheSecurityGroup",
      "elasticache:DescribeCacheSecurityGroups",
      "elasticache:RevokeCacheSecurityGroupIngress"
    ],
    "replicationgroup*": [
      "elasticache:Connect",
      "elasticache:DecreaseReplicaCount",
      "elasticache:DeleteReplicationGroup",
      "elasticache:DescribeReplicationGroups",
      "elasticache:IncreaseReplicaCount",
      "elasticache:ModifyReplicationGroup",
      "elasticache:ModifyReplicationGroupShardConfiguration",
      "elasticache:StartMigration",
      "elasticache:TestFailover"
    ],
    "snapshot*": [
      "elasticache:CopySnapshot",
      "elasticache:CreateSnapshot",
      "elasticache:DeleteSnapshot",
      "elasticache:DescribeSnapshots"
    ],
    "parametergroup*": [
      "elasticache:CreateCacheCluster",
      "elasticache:CreateCacheParameterGroup",
      "elasticache:CreateReplicationGroup",
      "elasticache:DeleteCacheParameterGroup",
      "elasticache:DescribeCacheParameterGroups",
      "elasticache:DescribeCacheParameters",
      "elasticache:ModifyCacheParameterGroup",
      "elasticache:ResetCacheParameterGroup"
    ],
    "subnetgroup*": [
      "elasticache:CreateCacheSubnetGroup",
      "elasticache:DeleteCacheSubnetGroup",
      "elasticache:DescribeCacheSubnetGroups",
      "elasticache:ModifyCacheSubnetGroup"
    ],
    "globalreplicationgroup*": [
      "elasticache:CreateGlobalReplicationGroup",
      "elasticache:DecreaseNodeGroupsInGlobalReplicationGroup",
      "elasticache:DeleteGlobalReplicationGroup",
      "elasticache:DescribeGlobalReplicationGroups",
      "elasticache:DisassociateGlobalReplicationGroup",
      "elasticache:FailoverGlobalReplicationGroup",
      "elasticache:IncreaseNodeGroupsInGlobalReplicationGroup",
      "elasticache:ModifyGlobalReplicationGroup",
      "elasticache:RebalanceSlotsInGlobalReplicationGroup"
    ],
    "user*": [
      "elasticache:CreateUser",
      "elasticache:CreateUserGroup",
      "elasticache:DeleteUser",
      "elasticache:DescribeUsers",
      "elasticache:ModifyUser",
      "elasticache:ModifyUserGroup"
    ],
    "cluster*": [
      "elasticache:DeleteCacheCluster",
      "elasticache:DescribeCacheClusters",
      "elasticache:ModifyCacheCluster",
      "elasticache:RebootCacheCluster"
    ],
    "usergroup*": [
      "elasticache:DeleteUserGroup",
      "elasticache:DescribeUserGroups"
    ],
    "?": [
      "elasticache:DescribeCacheEngineVersions",
      "elasticache:DescribeEngineDefaultParameters",
      "elasticache:DescribeEvents",
      "elasticache:DescribeReservedCacheNodesOfferings",
      "elasticache:DescribeServiceUpdates"
    ],
    "reserved-instance*": [
      "elasticache:DescribeReservedCacheNodes",
      "elasticache:PurchaseReservedCacheNodesOffering"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonelasticache.html"
  },
  "elemental-appliances-software": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awselementalappliancesandsoftware.html"
  },
  "elemental-activations": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awselementalappliancesandsoftwareactivationservice.html"
  },
  "mediaconnect": {
    "?": [
      "mediaconnect:AddFlowMediaStreams",
      "mediaconnect:AddFlowOutputs",
      "mediaconnect:AddFlowSources",
      "mediaconnect:AddFlowVpcInterfaces",
      "mediaconnect:CreateFlow",
      "mediaconnect:DeleteFlow",
      "mediaconnect:DescribeFlow",
      "mediaconnect:DescribeOffering",
      "mediaconnect:DescribeReservation",
      "mediaconnect:GrantFlowEntitlements",
      "mediaconnect:ListEntitlements",
      "mediaconnect:ListFlows",
      "mediaconnect:ListOfferings",
      "mediaconnect:ListReservations",
      "mediaconnect:ListTagsForResource",
      "mediaconnect:PurchaseOffering",
      "mediaconnect:RemoveFlowMediaStream",
      "mediaconnect:RemoveFlowOutput",
      "mediaconnect:RemoveFlowSource",
      "mediaconnect:RemoveFlowVpcInterface",
      "mediaconnect:RevokeFlowEntitlement",
      "mediaconnect:StartFlow",
      "mediaconnect:StopFlow",
      "mediaconnect:TagResource",
      "mediaconnect:UntagResource",
      "mediaconnect:UpdateFlow",
      "mediaconnect:UpdateFlowEntitlement",
      "mediaconnect:UpdateFlowMediaStream",
      "mediaconnect:UpdateFlowOutput",
      "mediaconnect:UpdateFlowSource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awselementalmediaconnect.html"
  },
  "mediaconvert": {
    "?": [
      "mediaconvert:AssociateCertificate",
      "mediaconvert:CreatePreset",
      "mediaconvert:CreateQueue",
      "mediaconvert:DeletePolicy",
      "mediaconvert:DescribeEndpoints",
      "mediaconvert:DisassociateCertificate",
      "mediaconvert:GetPolicy",
      "mediaconvert:ListJobTemplates",
      "mediaconvert:ListPresets",
      "mediaconvert:ListQueues",
      "mediaconvert:PutPolicy"
    ],
    "Job*": [
      "mediaconvert:CancelJob",
      "mediaconvert:GetJob"
    ],
    "JobTemplate": [
      "mediaconvert:CreateJob",
      "mediaconvert:ListTagsForResource",
      "mediaconvert:TagResource",
      "mediaconvert:UntagResource"
    ],
    "Preset": [
      "mediaconvert:CreateJobTemplate"
    ],
    "JobTemplate*": [
      "mediaconvert:DeleteJobTemplate",
      "mediaconvert:GetJobTemplate",
      "mediaconvert:UpdateJobTemplate"
    ],
    "Preset*": [
      "mediaconvert:DeletePreset",
      "mediaconvert:GetPreset",
      "mediaconvert:UpdatePreset"
    ],
    "Queue*": [
      "mediaconvert:DeleteQueue",
      "mediaconvert:GetQueue",
      "mediaconvert:UpdateQueue"
    ],
    "Queue": [
      "mediaconvert:ListJobs"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awselementalmediaconvert.html"
  },
  "medialive": {
    "input-device*": [
      "medialive:AcceptInputDeviceTransfer",
      "medialive:CancelInputDeviceTransfer",
      "medialive:ClaimDevice",
      "medialive:DescribeInputDevice",
      "medialive:DescribeInputDeviceThumbnail",
      "medialive:RebootInputDevice",
      "medialive:RejectInputDeviceTransfer",
      "medialive:StartInputDeviceMaintenanceWindow",
      "medialive:TransferInputDevice",
      "medialive:UpdateInputDevice"
    ],
    "?": [
      "medialive:BatchDelete",
      "medialive:BatchStart",
      "medialive:BatchStop",
      "medialive:ListChannels",
      "medialive:ListInputDeviceTransfers",
      "medialive:ListInputDevices",
      "medialive:ListInputSecurityGroups",
      "medialive:ListInputs",
      "medialive:ListMultiplexPrograms",
      "medialive:ListMultiplexes",
      "medialive:ListOfferings",
      "medialive:ListReservations"
    ],
    "channel*": [
      "medialive:BatchUpdateSchedule",
      "medialive:CreateChannel",
      "medialive:DeleteChannel",
      "medialive:DeleteSchedule",
      "medialive:DescribeChannel",
      "medialive:DescribeSchedule",
      "medialive:StartChannel",
      "medialive:StopChannel",
      "medialive:UpdateChannel",
      "medialive:UpdateChannelClass"
    ],
    "input*": [
      "medialive:CreateInput",
      "medialive:CreatePartnerInput",
      "medialive:DeleteInput",
      "medialive:DescribeInput",
      "medialive:UpdateInput"
    ],
    "input-security-group*": [
      "medialive:CreateInputSecurityGroup",
      "medialive:DeleteInputSecurityGroup",
      "medialive:DescribeInputSecurityGroup",
      "medialive:UpdateInputSecurityGroup"
    ],
    "multiplex*": [
      "medialive:CreateMultiplex",
      "medialive:CreateMultiplexProgram",
      "medialive:DeleteMultiplex",
      "medialive:DeleteMultiplexProgram",
      "medialive:DescribeMultiplex",
      "medialive:DescribeMultiplexProgram",
      "medialive:StartMultiplex",
      "medialive:StopMultiplex",
      "medialive:UpdateMultiplex",
      "medialive:UpdateMultiplexProgram"
    ],
    "channel": [
      "medialive:CreateTags",
      "medialive:DeleteTags",
      "medialive:ListTagsForResource"
    ],
    "reservation*": [
      "medialive:DeleteReservation",
      "medialive:DescribeReservation",
      "medialive:UpdateReservation"
    ],
    "offering*": [
      "medialive:DescribeOffering",
      "medialive:PurchaseOffering"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awselementalmedialive.html"
  },
  "mediapackage": {
    "channels*": [
      "mediapackage:ConfigureLogs",
      "mediapackage:DeleteChannel",
      "mediapackage:DescribeChannel",
      "mediapackage:RotateChannelCredentials",
      "mediapackage:RotateIngestEndpointCredentials",
      "mediapackage:UpdateChannel"
    ],
    "?": [
      "mediapackage:CreateChannel",
      "mediapackage:CreateHarvestJob",
      "mediapackage:CreateOriginEndpoint",
      "mediapackage:ListChannels",
      "mediapackage:ListHarvestJobs",
      "mediapackage:ListOriginEndpoints"
    ],
    "origin_endpoints*": [
      "mediapackage:DeleteOriginEndpoint",
      "mediapackage:DescribeOriginEndpoint",
      "mediapackage:UpdateOriginEndpoint"
    ],
    "harvest_jobs*": [
      "mediapackage:DescribeHarvestJob"
    ],
    "channels": [
      "mediapackage:ListTagsForResource",
      "mediapackage:TagResource",
      "mediapackage:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awselementalmediapackage.html"
  },
  "mediapackage-vod": {
    "packaging-groups*": [
      "mediapackage-vod:ConfigureLogs",
      "mediapackage-vod:DeletePackagingGroup",
      "mediapackage-vod:DescribePackagingGroup",
      "mediapackage-vod:UpdatePackagingGroup"
    ],
    "?": [
      "mediapackage-vod:CreateAsset",
      "mediapackage-vod:CreatePackagingConfiguration",
      "mediapackage-vod:CreatePackagingGroup",
      "mediapackage-vod:ListAssets",
      "mediapackage-vod:ListPackagingConfigurations",
      "mediapackage-vod:ListPackagingGroups"
    ],
    "assets*": [
      "mediapackage-vod:DeleteAsset",
      "mediapackage-vod:DescribeAsset"
    ],
    "packaging-configurations*": [
      "mediapackage-vod:DeletePackagingConfiguration",
      "mediapackage-vod:DescribePackagingConfiguration"
    ],
    "assets": [
      "mediapackage-vod:ListTagsForResource",
      "mediapackage-vod:TagResource",
      "mediapackage-vod:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awselementalmediapackagevod.html"
  },
  "mediastore": {
    "?": [
      "mediastore:CreateContainer",
      "mediastore:ListContainers"
    ],
    "container*": [
      "mediastore:DeleteContainer",
      "mediastore:DeleteContainerPolicy",
      "mediastore:DeleteCorsPolicy",
      "mediastore:DeleteLifecyclePolicy",
      "mediastore:DeleteMetricPolicy",
      "mediastore:DescribeContainer",
      "mediastore:GetContainerPolicy",
      "mediastore:GetCorsPolicy",
      "mediastore:GetLifecyclePolicy",
      "mediastore:GetMetricPolicy",
      "mediastore:PutContainerPolicy",
      "mediastore:PutCorsPolicy",
      "mediastore:PutLifecyclePolicy",
      "mediastore:PutMetricPolicy",
      "mediastore:StartAccessLogging",
      "mediastore:StopAccessLogging"
    ],
    "object*": [
      "mediastore:DeleteObject",
      "mediastore:DescribeObject",
      "mediastore:GetObject",
      "mediastore:PutObject"
    ],
    "folder": [
      "mediastore:ListItems"
    ],
    "container": [
      "mediastore:ListTagsForResource",
      "mediastore:TagResource",
      "mediastore:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awselementalmediastore.html"
  },
  "mediatailor": {
    "channel*": [
      "mediatailor:ConfigureLogsForChannel",
      "mediatailor:DeleteChannel",
      "mediatailor:DeleteChannelPolicy",
      "mediatailor:DescribeChannel",
      "mediatailor:GetChannelPolicy",
      "mediatailor:GetChannelSchedule",
      "mediatailor:PutChannelPolicy",
      "mediatailor:StartChannel",
      "mediatailor:StopChannel",
      "mediatailor:UpdateChannel"
    ],
    "playbackConfiguration*": [
      "mediatailor:ConfigureLogsForPlaybackConfiguration",
      "mediatailor:CreatePrefetchSchedule",
      "mediatailor:DeletePlaybackConfiguration",
      "mediatailor:DeletePrefetchSchedule",
      "mediatailor:GetPlaybackConfiguration",
      "mediatailor:GetPrefetchSchedule",
      "mediatailor:ListPrefetchSchedules"
    ],
    "?": [
      "mediatailor:CreateChannel",
      "mediatailor:CreateLiveSource",
      "mediatailor:CreateProgram",
      "mediatailor:CreateSourceLocation",
      "mediatailor:CreateVodSource",
      "mediatailor:ListAlerts",
      "mediatailor:ListChannels",
      "mediatailor:ListLiveSources",
      "mediatailor:ListPlaybackConfigurations",
      "mediatailor:ListSourceLocations",
      "mediatailor:ListVodSources",
      "mediatailor:PutPlaybackConfiguration"
    ],
    "liveSource*": [
      "mediatailor:DeleteLiveSource",
      "mediatailor:DescribeLiveSource",
      "mediatailor:UpdateLiveSource"
    ],
    "program*": [
      "mediatailor:DeleteProgram",
      "mediatailor:DescribeProgram",
      "mediatailor:UpdateProgram"
    ],
    "sourceLocation*": [
      "mediatailor:DeleteSourceLocation",
      "mediatailor:DescribeSourceLocation",
      "mediatailor:UpdateSourceLocation"
    ],
    "vodSource*": [
      "mediatailor:DeleteVodSource",
      "mediatailor:DescribeVodSource",
      "mediatailor:UpdateVodSource"
    ],
    "channel": [
      "mediatailor:ListTagsForResource",
      "mediatailor:TagResource",
      "mediatailor:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awselementalmediatailor.html"
  },
  "elemental-support-cases": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awselementalsupportcases.html"
  },
  "elemental-support-content": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awselementalsupportcontent.html"
  },
  "emr-containers": {
    "jobRun*": [
      "emr-containers:CancelJobRun",
      "emr-containers:DescribeJobRun"
    ],
    "?": [
      "emr-containers:CreateJobTemplate",
      "emr-containers:CreateVirtualCluster",
      "emr-containers:ListJobTemplates",
      "emr-containers:ListVirtualClusters"
    ],
    "virtualCluster*": [
      "emr-containers:CreateManagedEndpoint",
      "emr-containers:DeleteVirtualCluster",
      "emr-containers:DescribeVirtualCluster",
      "emr-containers:ListJobRuns",
      "emr-containers:ListManagedEndpoints",
      "emr-containers:StartJobRun"
    ],
    "jobTemplate*": [
      "emr-containers:DeleteJobTemplate",
      "emr-containers:DescribeJobTemplate"
    ],
    "managedEndpoint*": [
      "emr-containers:DeleteManagedEndpoint",
      "emr-containers:DescribeManagedEndpoint"
    ],
    "jobRun": [
      "emr-containers:ListTagsForResource",
      "emr-containers:TagResource",
      "emr-containers:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonemroneksemrcontainers.html"
  },
  "emr-serverless": {
    "jobRun*": [
      "emr-serverless:CancelJobRun",
      "emr-serverless:GetDashboardForJobRun",
      "emr-serverless:GetJobRun"
    ],
    "?": [
      "emr-serverless:CreateApplication",
      "emr-serverless:ListApplications"
    ],
    "application*": [
      "emr-serverless:DeleteApplication",
      "emr-serverless:GetApplication",
      "emr-serverless:ListJobRuns",
      "emr-serverless:StartApplication",
      "emr-serverless:StartJobRun",
      "emr-serverless:StopApplication",
      "emr-serverless:UpdateApplication"
    ],
    "application": [
      "emr-serverless:ListTagsForResource",
      "emr-serverless:TagResource",
      "emr-serverless:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonemrserverless.html"
  },
  "events": {
    "event-source*": [
      "events:ActivateEventSource",
      "events:CreatePartnerEventSource",
      "events:DeactivateEventSource",
      "events:DeletePartnerEventSource",
      "events:DescribeEventSource",
      "events:DescribePartnerEventSource",
      "events:ListPartnerEventSourceAccounts"
    ],
    "replay*": [
      "events:CancelReplay",
      "events:DescribeReplay"
    ],
    "api-destination*": [
      "events:CreateApiDestination",
      "events:DeleteApiDestination",
      "events:DescribeApiDestination",
      "events:UpdateApiDestination"
    ],
    "archive*": [
      "events:CreateArchive",
      "events:DeleteArchive",
      "events:DescribeArchive",
      "events:StartReplay",
      "events:UpdateArchive"
    ],
    "connection*": [
      "events:CreateConnection",
      "events:DeauthorizeConnection",
      "events:DeleteConnection",
      "events:DescribeConnection",
      "events:UpdateConnection"
    ],
    "endpoint*": [
      "events:CreateEndpoint",
      "events:DeleteEndpoint",
      "events:DescribeEndpoint",
      "events:UpdateEndpoint"
    ],
    "event-bus*": [
      "events:CreateEventBus",
      "events:DeleteEventBus",
      "events:PutEvents"
    ],
    "rule-on-custom-event-bus": [
      "events:DeleteRule",
      "events:DescribeRule",
      "events:DisableRule",
      "events:EnableRule",
      "events:ListTargetsByRule",
      "events:PutRule",
      "events:PutTargets",
      "events:RemoveTargets"
    ],
    "event-bus": [
      "events:DescribeEventBus",
      "events:ListTagsForResource",
      "events:TagResource",
      "events:UntagResource"
    ],
    "?": [
      "events:ListApiDestinations",
      "events:ListArchives",
      "events:ListConnections",
      "events:ListEndpoints",
      "events:ListEventBuses",
      "events:ListEventSources",
      "events:ListPartnerEventSources",
      "events:ListReplays",
      "events:ListRuleNamesByTarget",
      "events:ListRules",
      "events:PutPartnerEvents",
      "events:PutPermission",
      "events:RemovePermission",
      "events:TestEventPattern"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoneventbridge.html"
  },
  "pipes": {
    "pipe*": [
      "pipes:CreatePipe",
      "pipes:DeletePipe",
      "pipes:DescribePipe",
      "pipes:ListTagsForResource",
      "pipes:StartPipe",
      "pipes:StopPipe",
      "pipes:TagResource",
      "pipes:UntagResource",
      "pipes:UpdatePipe"
    ],
    "?": [
      "pipes:ListPipes"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoneventbridgepipes.html"
  },
  "scheduler": {
    "schedule*": [
      "scheduler:CreateSchedule",
      "scheduler:DeleteSchedule",
      "scheduler:GetSchedule",
      "scheduler:UpdateSchedule"
    ],
    "schedule-group*": [
      "scheduler:CreateScheduleGroup",
      "scheduler:DeleteScheduleGroup",
      "scheduler:GetScheduleGroup",
      "scheduler:TagResource",
      "scheduler:UntagResource"
    ],
    "?": [
      "scheduler:ListScheduleGroups",
      "scheduler:ListSchedules"
    ],
    "schedule-group": [
      "scheduler:ListTagsForResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoneventbridgescheduler.html"
  },
  "schemas": {
    "discoverer*": [
      "schemas:CreateDiscoverer",
      "schemas:DeleteDiscoverer",
      "schemas:DescribeDiscoverer",
      "schemas:ListDiscoverers",
      "schemas:StartDiscoverer",
      "schemas:StopDiscoverer",
      "schemas:UpdateDiscoverer"
    ],
    "registry*": [
      "schemas:CreateRegistry",
      "schemas:DeleteRegistry",
      "schemas:DeleteResourcePolicy",
      "schemas:DescribeRegistry",
      "schemas:ExportSchema",
      "schemas:GetResourcePolicy",
      "schemas:ListRegistries",
      "schemas:PutResourcePolicy",
      "schemas:UpdateRegistry"
    ],
    "schema*": [
      "schemas:CreateSchema",
      "schemas:DeleteSchema",
      "schemas:DeleteSchemaVersion",
      "schemas:DescribeCodeBinding",
      "schemas:DescribeSchema",
      "schemas:GetCodeBindingSource",
      "schemas:ListSchemaVersions",
      "schemas:ListSchemas",
      "schemas:PutCodeBinding",
      "schemas:SearchSchemas",
      "schemas:UpdateSchema"
    ],
    "?": [
      "schemas:GetDiscoveredSchema"
    ],
    "discoverer": [
      "schemas:ListTagsForResource",
      "schemas:TagResource",
      "schemas:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoneventbridgeschemas.html"
  },
  "fis": {
    "action*": [
      "fis:CreateExperimentTemplate",
      "fis:GetAction"
    ],
    "experiment-template*": [
      "fis:DeleteExperimentTemplate",
      "fis:GetExperimentTemplate",
      "fis:UpdateExperimentTemplate"
    ],
    "experiment*": [
      "fis:GetExperiment",
      "fis:StartExperiment",
      "fis:StopExperiment"
    ],
    "?": [
      "fis:GetTargetResourceType",
      "fis:ListActions",
      "fis:ListExperimentTemplates",
      "fis:ListExperiments",
      "fis:ListTargetResourceTypes"
    ],
    "action": [
      "fis:ListTagsForResource",
      "fis:TagResource",
      "fis:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsfaultinjectionsimulator.html"
  },
  "finspace": {
    "environment*": [
      "finspace:CreateEnvironment",
      "finspace:DeleteEnvironment",
      "finspace:GetEnvironment",
      "finspace:ListEnvironments",
      "finspace:ListTagsForResource",
      "finspace:TagResource",
      "finspace:UntagResource",
      "finspace:UpdateEnvironment"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonfinspace.html"
  },
  "finspace-api": {
    "credential*": [
      "finspace-api:GetProgrammaticAccessCredentials"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonfinspaceapi.html"
  },
  "fms": {
    "?": [
      "fms:AssociateAdminAccount",
      "fms:AssociateThirdPartyFirewall",
      "fms:DeleteNotificationChannel",
      "fms:DisassociateAdminAccount",
      "fms:DisassociateThirdPartyFirewall",
      "fms:GetAdminAccount",
      "fms:GetNotificationChannel",
      "fms:GetThirdPartyFirewallAssociationStatus",
      "fms:ListAppsLists",
      "fms:ListDiscoveredResources",
      "fms:ListMemberAccounts",
      "fms:ListPolicies",
      "fms:ListProtocolsLists",
      "fms:ListResourceSets",
      "fms:ListThirdPartyFirewallFirewallPolicies",
      "fms:PutNotificationChannel"
    ],
    "resource-set*": [
      "fms:BatchAssociateResource",
      "fms:BatchDisassociateResource",
      "fms:DeleteResourceSet",
      "fms:GetResourceSet",
      "fms:ListResourceSetResources",
      "fms:PutResourceSet"
    ],
    "applications-list*": [
      "fms:DeleteAppsList",
      "fms:GetAppsList",
      "fms:PutAppsList"
    ],
    "policy*": [
      "fms:DeletePolicy",
      "fms:GetComplianceDetail",
      "fms:GetPolicy",
      "fms:GetProtectionStatus",
      "fms:GetViolationDetails",
      "fms:ListComplianceStatus",
      "fms:ListTagsForResource",
      "fms:PutPolicy"
    ],
    "protocols-list*": [
      "fms:DeleteProtocolsList",
      "fms:GetProtocolsList",
      "fms:PutProtocolsList"
    ],
    "applications-list": [
      "fms:TagResource",
      "fms:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsfirewallmanager.html"
  },
  "forecast": {
    "?": [
      "forecast:CreateAutoPredictor",
      "forecast:ListDatasetGroups",
      "forecast:ListDatasetImportJobs",
      "forecast:ListDatasets",
      "forecast:ListExplainabilities",
      "forecast:ListExplainabilityExports",
      "forecast:ListForecastExportJobs",
      "forecast:ListForecasts",
      "forecast:ListMonitors",
      "forecast:ListPredictorBacktestExportJobs",
      "forecast:ListPredictors",
      "forecast:ListWhatIfAnalyses",
      "forecast:ListWhatIfForecastExports",
      "forecast:ListWhatIfForecasts"
    ],
    "dataset*": [
      "forecast:CreateDataset",
      "forecast:DeleteDataset",
      "forecast:DeleteResourceTree",
      "forecast:DescribeDataset",
      "forecast:UpdateDatasetGroup"
    ],
    "datasetGroup*": [
      "forecast:CreateDatasetGroup",
      "forecast:CreatePredictor",
      "forecast:DeleteDatasetGroup",
      "forecast:DescribeDatasetGroup"
    ],
    "datasetImportJob*": [
      "forecast:CreateDatasetImportJob",
      "forecast:DeleteDatasetImportJob",
      "forecast:DescribeDatasetImportJob",
      "forecast:StopResource"
    ],
    "forecast*": [
      "forecast:CreateExplainability",
      "forecast:CreateForecastExportJob",
      "forecast:CreateWhatIfAnalysis",
      "forecast:DeleteForecast",
      "forecast:DescribeForecast",
      "forecast:QueryForecast"
    ],
    "explainability*": [
      "forecast:CreateExplainabilityExport",
      "forecast:DeleteExplainability",
      "forecast:DescribeExplainability"
    ],
    "predictor*": [
      "forecast:CreateForecast",
      "forecast:CreateMonitor",
      "forecast:CreatePredictorBacktestExportJob",
      "forecast:DeletePredictor",
      "forecast:DescribeAutoPredictor",
      "forecast:DescribePredictor",
      "forecast:GetAccuracyMetrics"
    ],
    "whatIfAnalysis*": [
      "forecast:CreateWhatIfForecast",
      "forecast:DeleteWhatIfAnalysis",
      "forecast:DescribeWhatIfAnalysis"
    ],
    "whatIfForecast*": [
      "forecast:CreateWhatIfForecastExport",
      "forecast:DeleteWhatIfForecast",
      "forecast:DescribeWhatIfForecast",
      "forecast:QueryWhatIfForecast"
    ],
    "explainabilityExport*": [
      "forecast:DeleteExplainabilityExport",
      "forecast:DescribeExplainabilityExport"
    ],
    "forecastExport*": [
      "forecast:DeleteForecastExportJob",
      "forecast:DescribeForecastExportJob"
    ],
    "monitor*": [
      "forecast:DeleteMonitor",
      "forecast:DescribeMonitor",
      "forecast:ListMonitorEvaluations",
      "forecast:ResumeResource"
    ],
    "predictorBacktestExportJob*": [
      "forecast:DeletePredictorBacktestExportJob",
      "forecast:DescribePredictorBacktestExportJob"
    ],
    "whatIfForecastExport*": [
      "forecast:DeleteWhatIfForecastExport",
      "forecast:DescribeWhatIfForecastExport"
    ],
    "dataset": [
      "forecast:ListTagsForResource",
      "forecast:TagResource",
      "forecast:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonforecast.html"
  },
  "frauddetector": {
    "?": [
      "frauddetector:BatchCreateVariable",
      "frauddetector:CreateList",
      "frauddetector:CreateVariable",
      "frauddetector:GetKMSEncryptionKey",
      "frauddetector:PutKMSEncryptionKey"
    ],
    "variable*": [
      "frauddetector:BatchGetVariable",
      "frauddetector:DeleteVariable",
      "frauddetector:UpdateVariable"
    ],
    "batch-import*": [
      "frauddetector:CancelBatchImportJob",
      "frauddetector:CreateBatchImportJob",
      "frauddetector:DeleteBatchImportJob"
    ],
    "batch-prediction*": [
      "frauddetector:CancelBatchPredictionJob",
      "frauddetector:CreateBatchPredictionJob",
      "frauddetector:DeleteBatchPredictionJob"
    ],
    "detector*": [
      "frauddetector:CreateDetectorVersion",
      "frauddetector:CreateRule",
      "frauddetector:DeleteDetector",
      "frauddetector:DescribeDetector",
      "frauddetector:GetEventPrediction",
      "frauddetector:GetEventPredictionMetadata",
      "frauddetector:PutDetector",
      "frauddetector:UpdateDetectorVersion"
    ],
    "event-type*": [
      "frauddetector:CreateModel",
      "frauddetector:DeleteEvent",
      "frauddetector:DeleteEventType",
      "frauddetector:DeleteEventsByEventType",
      "frauddetector:GetDeleteEventsByEventTypeStatus",
      "frauddetector:GetEvent",
      "frauddetector:PutEventType",
      "frauddetector:PutExternalModel",
      "frauddetector:SendEvent",
      "frauddetector:UpdateEventLabel"
    ],
    "model*": [
      "frauddetector:CreateModelVersion",
      "frauddetector:DeleteModel",
      "frauddetector:UpdateModel",
      "frauddetector:UpdateModelVersion"
    ],
    "detector-version*": [
      "frauddetector:DeleteDetectorVersion",
      "frauddetector:GetDetectorVersion",
      "frauddetector:UpdateDetectorVersionMetadata",
      "frauddetector:UpdateDetectorVersionStatus"
    ],
    "entity-type*": [
      "frauddetector:DeleteEntityType",
      "frauddetector:PutEntityType"
    ],
    "external-model*": [
      "frauddetector:DeleteExternalModel"
    ],
    "label*": [
      "frauddetector:DeleteLabel",
      "frauddetector:PutLabel"
    ],
    "list*": [
      "frauddetector:DeleteList",
      "frauddetector:GetListElements",
      "frauddetector:UpdateList"
    ],
    "model-version*": [
      "frauddetector:DeleteModelVersion",
      "frauddetector:GetModelVersion",
      "frauddetector:UpdateModelVersionStatus"
    ],
    "outcome*": [
      "frauddetector:DeleteOutcome",
      "frauddetector:PutOutcome"
    ],
    "rule*": [
      "frauddetector:DeleteRule",
      "frauddetector:UpdateRuleMetadata",
      "frauddetector:UpdateRuleVersion"
    ],
    "model-version": [
      "frauddetector:DescribeModelVersions"
    ],
    "batch-import": [
      "frauddetector:GetBatchImportJobs",
      "frauddetector:ListTagsForResource",
      "frauddetector:TagResource",
      "frauddetector:UntagResource"
    ],
    "batch-prediction": [
      "frauddetector:GetBatchPredictionJobs"
    ],
    "detector": [
      "frauddetector:GetDetectors",
      "frauddetector:ListEventPredictions"
    ],
    "entity-type": [
      "frauddetector:GetEntityTypes"
    ],
    "event-type": [
      "frauddetector:GetEventTypes"
    ],
    "external-model": [
      "frauddetector:GetExternalModels"
    ],
    "label": [
      "frauddetector:GetLabels"
    ],
    "list": [
      "frauddetector:GetListsMetadata"
    ],
    "model": [
      "frauddetector:GetModels"
    ],
    "outcome": [
      "frauddetector:GetOutcomes"
    ],
    "rule": [
      "frauddetector:GetRules"
    ],
    "variable": [
      "frauddetector:GetVariables"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonfrauddetector.html"
  },
  "freetier": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsfreetier.html"
  },
  "freertos": {
    "configuration*": [
      "freertos:CreateSoftwareConfiguration",
      "freertos:DeleteSoftwareConfiguration",
      "freertos:DescribeSoftwareConfiguration",
      "freertos:UpdateSoftwareConfiguration"
    ],
    "?": [
      "freertos:DescribeHardwarePlatform",
      "freertos:GetSoftwareURL",
      "freertos:GetSoftwareURLForConfiguration",
      "freertos:ListFreeRTOSVersions",
      "freertos:ListHardwarePlatforms",
      "freertos:ListHardwareVendors",
      "freertos:ListSoftwareConfigurations"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonfreertos.html"
  },
  "fsx": {
    "file-system*": [
      "fsx:AssociateFileSystemAliases",
      "fsx:CreateDataRepositoryTask",
      "fsx:CreateFileSystem",
      "fsx:CreateStorageVirtualMachine",
      "fsx:DeleteFileSystem",
      "fsx:DescribeFileSystemAliases",
      "fsx:DisassociateFileSystemAliases",
      "fsx:ReleaseFileSystemNfsV3Locks",
      "fsx:UpdateFileSystem"
    ],
    "task*": [
      "fsx:CancelDataRepositoryTask"
    ],
    "backup*": [
      "fsx:CopyBackup",
      "fsx:CreateBackup",
      "fsx:CreateFileSystemFromBackup",
      "fsx:CreateVolumeFromBackup",
      "fsx:DeleteBackup",
      "fsx:ManageBackupPrincipalAssociations"
    ],
    "association*": [
      "fsx:CreateDataRepositoryAssociation",
      "fsx:DeleteDataRepositoryAssociation",
      "fsx:UpdateDataRepositoryAssociation"
    ],
    "file-cache*": [
      "fsx:CreateFileCache",
      "fsx:DeleteFileCache",
      "fsx:UpdateFileCache"
    ],
    "snapshot*": [
      "fsx:CreateSnapshot",
      "fsx:DeleteSnapshot",
      "fsx:RestoreVolumeFromSnapshot",
      "fsx:UpdateSnapshot"
    ],
    "volume*": [
      "fsx:CreateVolume",
      "fsx:DeleteVolume",
      "fsx:UpdateVolume"
    ],
    "storage-virtual-machine*": [
      "fsx:DeleteStorageVirtualMachine",
      "fsx:UpdateStorageVirtualMachine"
    ],
    "?": [
      "fsx:DescribeBackups",
      "fsx:DescribeDataRepositoryAssociations",
      "fsx:DescribeDataRepositoryTasks",
      "fsx:DescribeFileCaches",
      "fsx:DescribeFileSystems",
      "fsx:DescribeSnapshots",
      "fsx:DescribeStorageVirtualMachines",
      "fsx:DescribeVolumes"
    ],
    "association": [
      "fsx:ListTagsForResource",
      "fsx:TagResource",
      "fsx:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonfsx.html"
  },
  "gamelift": {
    "?": [
      "gamelift:AcceptMatch",
      "gamelift:CreateAlias",
      "gamelift:CreateBuild",
      "gamelift:CreateFleet",
      "gamelift:CreateGameServerGroup",
      "gamelift:CreateGameSession",
      "gamelift:CreateGameSessionQueue",
      "gamelift:CreateLocation",
      "gamelift:CreateMatchmakingConfiguration",
      "gamelift:CreateMatchmakingRuleSet",
      "gamelift:CreatePlayerSession",
      "gamelift:CreatePlayerSessions",
      "gamelift:CreateScript",
      "gamelift:CreateVpcPeeringAuthorization",
      "gamelift:CreateVpcPeeringConnection",
      "gamelift:DeleteVpcPeeringAuthorization",
      "gamelift:DeleteVpcPeeringConnection",
      "gamelift:DescribeEC2InstanceLimits",
      "gamelift:DescribeFleetAttributes",
      "gamelift:DescribeFleetCapacity",
      "gamelift:DescribeFleetUtilization",
      "gamelift:DescribeGameSessionDetails",
      "gamelift:DescribeGameSessionPlacement",
      "gamelift:DescribeGameSessionQueues",
      "gamelift:DescribeGameSessions",
      "gamelift:DescribeMatchmaking",
      "gamelift:DescribeMatchmakingConfigurations",
      "gamelift:DescribeMatchmakingRuleSets",
      "gamelift:DescribePlayerSessions",
      "gamelift:DescribeVpcPeeringAuthorizations",
      "gamelift:DescribeVpcPeeringConnections",
      "gamelift:GetGameSessionLogUrl",
      "gamelift:ListAliases",
      "gamelift:ListBuilds",
      "gamelift:ListFleets",
      "gamelift:ListGameServerGroups",
      "gamelift:ListLocations",
      "gamelift:ListScripts",
      "gamelift:SearchGameSessions",
      "gamelift:StartMatchBackfill",
      "gamelift:StartMatchmaking",
      "gamelift:StopGameSessionPlacement",
      "gamelift:StopMatchmaking",
      "gamelift:UpdateGameSession",
      "gamelift:ValidateMatchmakingRuleSet"
    ],
    "gameServerGroup*": [
      "gamelift:ClaimGameServer",
      "gamelift:DeleteGameServerGroup",
      "gamelift:DeregisterGameServer",
      "gamelift:DescribeGameServer",
      "gamelift:DescribeGameServerGroup",
      "gamelift:DescribeGameServerInstances",
      "gamelift:ListGameServers",
      "gamelift:RegisterGameServer",
      "gamelift:ResumeGameServerGroup",
      "gamelift:SuspendGameServerGroup",
      "gamelift:UpdateGameServer",
      "gamelift:UpdateGameServerGroup"
    ],
    "fleet*": [
      "gamelift:CreateFleetLocations",
      "gamelift:DeleteFleet",
      "gamelift:DeleteFleetLocations",
      "gamelift:DeleteScalingPolicy",
      "gamelift:DeregisterCompute",
      "gamelift:DescribeCompute",
      "gamelift:DescribeFleetEvents",
      "gamelift:DescribeFleetLocationAttributes",
      "gamelift:DescribeFleetLocationCapacity",
      "gamelift:DescribeFleetLocationUtilization",
      "gamelift:DescribeFleetPortSettings",
      "gamelift:DescribeInstances",
      "gamelift:DescribeRuntimeConfiguration",
      "gamelift:DescribeScalingPolicies",
      "gamelift:GetComputeAccess",
      "gamelift:GetComputeAuthToken",
      "gamelift:GetInstanceAccess",
      "gamelift:ListCompute",
      "gamelift:PutScalingPolicy",
      "gamelift:RegisterCompute",
      "gamelift:StartFleetActions",
      "gamelift:StopFleetActions",
      "gamelift:UpdateFleetAttributes",
      "gamelift:UpdateFleetCapacity",
      "gamelift:UpdateFleetPortSettings",
      "gamelift:UpdateRuntimeConfiguration"
    ],
    "alias*": [
      "gamelift:DeleteAlias",
      "gamelift:DescribeAlias",
      "gamelift:ResolveAlias",
      "gamelift:UpdateAlias"
    ],
    "build*": [
      "gamelift:DeleteBuild",
      "gamelift:DescribeBuild",
      "gamelift:RequestUploadCredentials",
      "gamelift:UpdateBuild"
    ],
    "gameSessionQueue*": [
      "gamelift:DeleteGameSessionQueue",
      "gamelift:StartGameSessionPlacement",
      "gamelift:UpdateGameSessionQueue"
    ],
    "location*": [
      "gamelift:DeleteLocation"
    ],
    "matchmakingConfiguration*": [
      "gamelift:DeleteMatchmakingConfiguration",
      "gamelift:UpdateMatchmakingConfiguration"
    ],
    "matchmakingRuleSet*": [
      "gamelift:DeleteMatchmakingRuleSet"
    ],
    "script*": [
      "gamelift:DeleteScript",
      "gamelift:DescribeScript",
      "gamelift:UpdateScript"
    ],
    "alias": [
      "gamelift:ListTagsForResource",
      "gamelift:TagResource",
      "gamelift:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazongamelift.html"
  },
  "gamesparks": {
    "?": [
      "gamesparks:CreateGame",
      "gamesparks:GetExtension",
      "gamesparks:GetExtensionVersion",
      "gamesparks:ListExtensionVersions",
      "gamesparks:ListExtensions",
      "gamesparks:ListGames"
    ],
    "game*": [
      "gamesparks:CreateSnapshot",
      "gamesparks:CreateStage",
      "gamesparks:DeleteGame",
      "gamesparks:DeleteStage",
      "gamesparks:DisconnectPlayer",
      "gamesparks:ExportSnapshot",
      "gamesparks:GetGame",
      "gamesparks:GetGameConfiguration",
      "gamesparks:GetGeneratedCodeJob",
      "gamesparks:GetPlayerConnectionStatus",
      "gamesparks:GetSnapshot",
      "gamesparks:GetStage",
      "gamesparks:GetStageDeployment",
      "gamesparks:ImportGameConfiguration",
      "gamesparks:ListGeneratedCodeJobs",
      "gamesparks:ListSnapshots",
      "gamesparks:ListStageDeployments",
      "gamesparks:ListStages",
      "gamesparks:StartGeneratedCodeJob",
      "gamesparks:StartStageDeployment",
      "gamesparks:UpdateGame",
      "gamesparks:UpdateGameConfiguration",
      "gamesparks:UpdateSnapshot",
      "gamesparks:UpdateStage"
    ],
    "game": [
      "gamesparks:ListTagsForResource",
      "gamesparks:TagResource",
      "gamesparks:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazongamesparks.html"
  },
  "globalaccelerator": {
    "endpointgroup*": [
      "globalaccelerator:AddCustomRoutingEndpoints",
      "globalaccelerator:AddEndpoints",
      "globalaccelerator:AllowCustomRoutingTraffic",
      "globalaccelerator:DeleteCustomRoutingEndpointGroup",
      "globalaccelerator:DeleteEndpointGroup",
      "globalaccelerator:DenyCustomRoutingTraffic",
      "globalaccelerator:DescribeCustomRoutingEndpointGroup",
      "globalaccelerator:DescribeEndpointGroup",
      "globalaccelerator:RemoveCustomRoutingEndpoints",
      "globalaccelerator:RemoveEndpoints",
      "globalaccelerator:UpdateEndpointGroup"
    ],
    "?": [
      "globalaccelerator:AdvertiseByoipCidr",
      "globalaccelerator:CreateAccelerator",
      "globalaccelerator:CreateCustomRoutingAccelerator",
      "globalaccelerator:DeprovisionByoipCidr",
      "globalaccelerator:ListAccelerators",
      "globalaccelerator:ListByoipCidrs",
      "globalaccelerator:ListCustomRoutingAccelerators",
      "globalaccelerator:ListCustomRoutingPortMappingsByDestination",
      "globalaccelerator:ProvisionByoipCidr",
      "globalaccelerator:WithdrawByoipCidr"
    ],
    "listener*": [
      "globalaccelerator:CreateCustomRoutingEndpointGroup",
      "globalaccelerator:CreateEndpointGroup",
      "globalaccelerator:DeleteCustomRoutingListener",
      "globalaccelerator:DeleteListener",
      "globalaccelerator:DescribeCustomRoutingListener",
      "globalaccelerator:DescribeListener",
      "globalaccelerator:ListCustomRoutingEndpointGroups",
      "globalaccelerator:ListEndpointGroups",
      "globalaccelerator:UpdateCustomRoutingListener",
      "globalaccelerator:UpdateListener"
    ],
    "accelerator*": [
      "globalaccelerator:CreateCustomRoutingListener",
      "globalaccelerator:CreateListener",
      "globalaccelerator:DeleteAccelerator",
      "globalaccelerator:DeleteCustomRoutingAccelerator",
      "globalaccelerator:DescribeAccelerator",
      "globalaccelerator:DescribeAcceleratorAttributes",
      "globalaccelerator:DescribeCustomRoutingAccelerator",
      "globalaccelerator:DescribeCustomRoutingAcceleratorAttributes",
      "globalaccelerator:ListCustomRoutingListeners",
      "globalaccelerator:ListCustomRoutingPortMappings",
      "globalaccelerator:ListListeners",
      "globalaccelerator:UpdateAccelerator",
      "globalaccelerator:UpdateAcceleratorAttributes",
      "globalaccelerator:UpdateCustomRoutingAccelerator",
      "globalaccelerator:UpdateCustomRoutingAcceleratorAttributes"
    ],
    "accelerator": [
      "globalaccelerator:ListTagsForResource",
      "globalaccelerator:TagResource",
      "globalaccelerator:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsglobalaccelerator.html"
  },
  "glue": {
    "catalog*": [
      "glue:BatchCreatePartition",
      "glue:BatchDeleteConnection",
      "glue:BatchDeletePartition",
      "glue:BatchDeleteTable",
      "glue:BatchDeleteTableVersion",
      "glue:BatchGetPartition",
      "glue:BatchUpdatePartition",
      "glue:CreateConnection",
      "glue:CreateDatabase",
      "glue:CreatePartition",
      "glue:CreatePartitionIndex",
      "glue:CreateTable",
      "glue:CreateUserDefinedFunction",
      "glue:DeleteColumnStatisticsForPartition",
      "glue:DeleteColumnStatisticsForTable",
      "glue:DeleteConnection",
      "glue:DeleteDatabase",
      "glue:DeletePartition",
      "glue:DeletePartitionIndex",
      "glue:DeleteResourcePolicy",
      "glue:DeleteTable",
      "glue:DeleteTableVersion",
      "glue:DeleteUserDefinedFunction",
      "glue:GetCatalogImportStatus",
      "glue:GetColumnStatisticsForPartition",
      "glue:GetColumnStatisticsForTable",
      "glue:GetConnection",
      "glue:GetConnections",
      "glue:GetDataCatalogEncryptionSettings",
      "glue:GetDatabase",
      "glue:GetDatabases",
      "glue:GetPartition",
      "glue:GetPartitionIndexes",
      "glue:GetPartitions",
      "glue:GetResourcePolicies",
      "glue:GetResourcePolicy",
      "glue:GetTable",
      "glue:GetTableVersion",
      "glue:GetTableVersions",
      "glue:GetTables",
      "glue:GetUserDefinedFunction",
      "glue:GetUserDefinedFunctions",
      "glue:ImportCatalogToGlue",
      "glue:PutDataCatalogEncryptionSettings",
      "glue:PutResourcePolicy",
      "glue:SearchTables",
      "glue:UpdateColumnStatisticsForPartition",
      "glue:UpdateColumnStatisticsForTable",
      "glue:UpdateConnection",
      "glue:UpdateDatabase",
      "glue:UpdatePartition",
      "glue:UpdateTable",
      "glue:UpdateUserDefinedFunction"
    ],
    "blueprint*": [
      "glue:BatchGetBlueprints",
      "glue:CreateBlueprint",
      "glue:DeleteBlueprint",
      "glue:GetBlueprint",
      "glue:GetBlueprintRun",
      "glue:GetBlueprintRuns",
      "glue:StartBlueprintRun",
      "glue:UpdateBlueprint"
    ],
    "crawler*": [
      "glue:BatchGetCrawlers",
      "glue:DeleteCrawler",
      "glue:GetCrawler",
      "glue:StartCrawler",
      "glue:StopCrawler",
      "glue:UpdateCrawler"
    ],
    "?": [
      "glue:BatchGetCustomEntityTypes",
      "glue:CheckSchemaVersionValidity",
      "glue:CreateClassifier",
      "glue:CreateCrawler",
      "glue:CreateCustomEntityType",
      "glue:CreateDataQualityRuleset",
      "glue:CreateDevEndpoint",
      "glue:CreateMLTransform",
      "glue:CreateScript",
      "glue:CreateSecurityConfiguration",
      "glue:CreateSession",
      "glue:DeleteClassifier",
      "glue:DeleteCustomEntityType",
      "glue:DeleteSecurityConfiguration",
      "glue:DeregisterDataPreview",
      "glue:GetClassifier",
      "glue:GetClassifiers",
      "glue:GetCrawlerMetrics",
      "glue:GetCrawlers",
      "glue:GetCustomEntityType",
      "glue:GetDataflowGraph",
      "glue:GetDevEndpoints",
      "glue:GetJobBookmark",
      "glue:GetJobs",
      "glue:GetMapping",
      "glue:GetNotebookInstanceStatus",
      "glue:GetPlan",
      "glue:GetSecurityConfiguration",
      "glue:GetSecurityConfigurations",
      "glue:GetTriggers",
      "glue:GlueNotebookAuthorize",
      "glue:GlueNotebookRefreshCredentials",
      "glue:ListBlueprints",
      "glue:ListCrawlers",
      "glue:ListCrawls",
      "glue:ListCustomEntityTypes",
      "glue:ListDevEndpoints",
      "glue:ListJobs",
      "glue:ListRegistries",
      "glue:ListSessions",
      "glue:ListTriggers",
      "glue:ListWorkflows",
      "glue:ResetJobBookmark",
      "glue:StartCrawlerSchedule",
      "glue:StartNotebook",
      "glue:StopCrawlerSchedule",
      "glue:TerminateNotebook",
      "glue:UpdateClassifier",
      "glue:UpdateCrawlerSchedule",
      "glue:UseGlueStudio"
    ],
    "devendpoint*": [
      "glue:BatchGetDevEndpoints",
      "glue:DeleteDevEndpoint",
      "glue:GetDevEndpoint",
      "glue:UpdateDevEndpoint"
    ],
    "job*": [
      "glue:BatchGetJobs",
      "glue:BatchStopJobRun",
      "glue:CreateJob",
      "glue:DeleteJob",
      "glue:GetJob",
      "glue:GetJobRun",
      "glue:GetJobRuns",
      "glue:StartJobRun",
      "glue:UpdateJob",
      "glue:UpdateJobFromSourceControl",
      "glue:UpdateSourceControlFromJob"
    ],
    "trigger*": [
      "glue:BatchGetTriggers",
      "glue:CreateTrigger",
      "glue:DeleteTrigger",
      "glue:GetTrigger",
      "glue:StartTrigger",
      "glue:StopTrigger",
      "glue:UpdateTrigger"
    ],
    "workflow*": [
      "glue:BatchGetWorkflows",
      "glue:CreateWorkflow",
      "glue:DeleteWorkflow",
      "glue:GetWorkflow",
      "glue:GetWorkflowRun",
      "glue:GetWorkflowRunProperties",
      "glue:GetWorkflowRuns",
      "glue:NotifyEvent",
      "glue:PutWorkflowRunProperties",
      "glue:ResumeWorkflowRun",
      "glue:StartWorkflowRun",
      "glue:StopWorkflowRun",
      "glue:UpdateWorkflow"
    ],
    "dataQualityRuleset*": [
      "glue:CancelDataQualityRuleRecommendationRun",
      "glue:CancelDataQualityRulesetEvaluationRun",
      "glue:DeleteDataQualityRuleset",
      "glue:GetDataQualityResult",
      "glue:GetDataQualityRuleRecommendationRun",
      "glue:GetDataQualityRuleset",
      "glue:GetDataQualityRulesetEvaluationRun",
      "glue:ListDataQualityResults",
      "glue:ListDataQualityRuleRecommendationRuns",
      "glue:ListDataQualityRulesetEvaluationRuns",
      "glue:ListDataQualityRulesets",
      "glue:StartDataQualityRuleRecommendationRun",
      "glue:StartDataQualityRulesetEvaluationRun",
      "glue:UpdateDataQualityRuleset"
    ],
    "mlTransform*": [
      "glue:CancelMLTaskRun",
      "glue:DeleteMLTransform",
      "glue:GetMLTaskRun",
      "glue:GetMLTaskRuns",
      "glue:GetMLTransform",
      "glue:GetMLTransforms",
      "glue:ListMLTransforms",
      "glue:StartExportLabelsTaskRun",
      "glue:StartImportLabelsTaskRun",
      "glue:StartMLEvaluationTaskRun",
      "glue:StartMLLabelingSetGenerationTaskRun",
      "glue:UpdateMLTransform"
    ],
    "session*": [
      "glue:CancelStatement",
      "glue:DeleteSession",
      "glue:GetSession",
      "glue:GetStatement",
      "glue:ListStatements",
      "glue:RunStatement",
      "glue:StopSession"
    ],
    "registry*": [
      "glue:CreateRegistry",
      "glue:CreateSchema",
      "glue:DeleteRegistry",
      "glue:DeleteSchema",
      "glue:DeleteSchemaVersions",
      "glue:GetRegistry",
      "glue:GetSchema",
      "glue:GetSchemaByDefinition",
      "glue:GetSchemaVersionsDiff",
      "glue:ListSchemaVersions",
      "glue:RegisterSchemaVersion",
      "glue:UpdateRegistry",
      "glue:UpdateSchema"
    ],
    "registry": [
      "glue:GetSchemaVersion",
      "glue:ListSchemas",
      "glue:PutSchemaVersionMetadata",
      "glue:QuerySchemaVersionMetadata",
      "glue:RemoveSchemaVersionMetadata"
    ],
    "blueprint": [
      "glue:GetTags",
      "glue:TagResource",
      "glue:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsglue.html"
  },
  "databrew": {
    "Recipe*": [
      "databrew:BatchDeleteRecipeVersion",
      "databrew:DeleteRecipeVersion",
      "databrew:DescribeRecipe",
      "databrew:ListRecipeVersions",
      "databrew:PublishRecipe",
      "databrew:UpdateRecipe"
    ],
    "?": [
      "databrew:CreateDataset",
      "databrew:CreateProfileJob",
      "databrew:CreateProject",
      "databrew:CreateRecipe",
      "databrew:CreateRecipeJob",
      "databrew:CreateRuleset",
      "databrew:CreateSchedule",
      "databrew:ListDatasets",
      "databrew:ListJobs",
      "databrew:ListProjects",
      "databrew:ListRecipes",
      "databrew:ListRulesets",
      "databrew:ListSchedules"
    ],
    "Dataset*": [
      "databrew:DeleteDataset",
      "databrew:DescribeDataset",
      "databrew:UpdateDataset"
    ],
    "Job*": [
      "databrew:DeleteJob",
      "databrew:DescribeJob",
      "databrew:DescribeJobRun",
      "databrew:ListJobRuns",
      "databrew:StartJobRun",
      "databrew:StopJobRun",
      "databrew:UpdateProfileJob",
      "databrew:UpdateRecipeJob"
    ],
    "Project*": [
      "databrew:DeleteProject",
      "databrew:DescribeProject",
      "databrew:SendProjectSessionAction",
      "databrew:StartProjectSession",
      "databrew:UpdateProject"
    ],
    "Ruleset*": [
      "databrew:DeleteRuleset",
      "databrew:DescribeRuleset",
      "databrew:UpdateRuleset"
    ],
    "Schedule*": [
      "databrew:DeleteSchedule",
      "databrew:DescribeSchedule",
      "databrew:UpdateSchedule"
    ],
    "Dataset": [
      "databrew:ListTagsForResource",
      "databrew:TagResource",
      "databrew:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsgluedatabrew.html"
  },
  "groundstation": {
    "Contact*": [
      "groundstation:CancelContact",
      "groundstation:DescribeContact"
    ],
    "?": [
      "groundstation:CreateConfig",
      "groundstation:CreateDataflowEndpointGroup",
      "groundstation:CreateEphemeris",
      "groundstation:CreateMissionProfile",
      "groundstation:GetMinuteUsage",
      "groundstation:ListConfigs",
      "groundstation:ListContacts",
      "groundstation:ListDataflowEndpointGroups",
      "groundstation:ListEphemerides",
      "groundstation:ListGroundStations",
      "groundstation:ListMissionProfiles",
      "groundstation:ListSatellites",
      "groundstation:ReserveContact"
    ],
    "Config*": [
      "groundstation:DeleteConfig",
      "groundstation:GetConfig",
      "groundstation:UpdateConfig"
    ],
    "DataflowEndpointGroup*": [
      "groundstation:DeleteDataflowEndpointGroup",
      "groundstation:GetDataflowEndpointGroup"
    ],
    "EphemerisItem*": [
      "groundstation:DeleteEphemeris",
      "groundstation:DescribeEphemeris",
      "groundstation:UpdateEphemeris"
    ],
    "MissionProfile*": [
      "groundstation:DeleteMissionProfile",
      "groundstation:GetMissionProfile",
      "groundstation:UpdateMissionProfile"
    ],
    "Satellite*": [
      "groundstation:GetSatellite"
    ],
    "Config": [
      "groundstation:ListTagsForResource",
      "groundstation:TagResource",
      "groundstation:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsgroundstation.html"
  },
  "groundtruthlabeling": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazongroundtruthlabeling.html"
  },
  "guardduty": {
    "?": [
      "guardduty:AcceptAdministratorInvitation",
      "guardduty:AcceptInvitation",
      "guardduty:ArchiveFindings",
      "guardduty:CreateDetector",
      "guardduty:CreateIPSet",
      "guardduty:CreateMembers",
      "guardduty:CreatePublishingDestination",
      "guardduty:CreateSampleFindings",
      "guardduty:CreateThreatIntelSet",
      "guardduty:DeclineInvitations",
      "guardduty:DeleteInvitations",
      "guardduty:DeleteMembers",
      "guardduty:DescribeMalwareScans",
      "guardduty:DescribeOrganizationConfiguration",
      "guardduty:DisableOrganizationAdminAccount",
      "guardduty:DisassociateFromAdministratorAccount",
      "guardduty:DisassociateFromMasterAccount",
      "guardduty:DisassociateMembers",
      "guardduty:EnableOrganizationAdminAccount",
      "guardduty:GetAdministratorAccount",
      "guardduty:GetFindings",
      "guardduty:GetFindingsStatistics",
      "guardduty:GetInvitationsCount",
      "guardduty:GetMalwareScanSettings",
      "guardduty:GetMasterAccount",
      "guardduty:GetMemberDetectors",
      "guardduty:GetMembers",
      "guardduty:GetRemainingFreeTrialDays",
      "guardduty:GetUsageStatistics",
      "guardduty:InviteMembers",
      "guardduty:ListDetectors",
      "guardduty:ListFilters",
      "guardduty:ListFindings",
      "guardduty:ListIPSets",
      "guardduty:ListInvitations",
      "guardduty:ListMembers",
      "guardduty:ListOrganizationAdminAccounts",
      "guardduty:ListPublishingDestinations",
      "guardduty:ListThreatIntelSets",
      "guardduty:StartMonitoringMembers",
      "guardduty:StopMonitoringMembers",
      "guardduty:UnarchiveFindings",
      "guardduty:UpdateFindingsFeedback",
      "guardduty:UpdateMalwareScanSettings",
      "guardduty:UpdateMemberDetectors",
      "guardduty:UpdateOrganizationConfiguration"
    ],
    "filter*": [
      "guardduty:CreateFilter",
      "guardduty:DeleteFilter",
      "guardduty:GetFilter",
      "guardduty:UpdateFilter"
    ],
    "detector*": [
      "guardduty:DeleteDetector",
      "guardduty:GetDetector",
      "guardduty:UpdateDetector"
    ],
    "ipset*": [
      "guardduty:DeleteIPSet",
      "guardduty:GetIPSet",
      "guardduty:UpdateIPSet"
    ],
    "publishingDestination*": [
      "guardduty:DeletePublishingDestination",
      "guardduty:DescribePublishingDestination",
      "guardduty:UpdatePublishingDestination"
    ],
    "threatintelset*": [
      "guardduty:DeleteThreatIntelSet",
      "guardduty:GetThreatIntelSet",
      "guardduty:UpdateThreatIntelSet"
    ],
    "detector": [
      "guardduty:ListTagsForResource",
      "guardduty:TagResource",
      "guardduty:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonguardduty.html"
  },
  "health": {
    "?": [
      "health:DescribeAffectedAccountsForOrganization",
      "health:DescribeAffectedEntitiesForOrganization",
      "health:DescribeEntityAggregates",
      "health:DescribeEventAggregates",
      "health:DescribeEventDetailsForOrganization",
      "health:DescribeEventTypes",
      "health:DescribeEvents",
      "health:DescribeEventsForOrganization",
      "health:DescribeHealthServiceStatusForOrganization",
      "health:DisableHealthServiceAccessForOrganization",
      "health:EnableHealthServiceAccessForOrganization"
    ],
    "event*": [
      "health:DescribeAffectedEntities",
      "health:DescribeEventDetails"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awshealthapisandnotifications.html"
  },
  "healthlake": {
    "?": [
      "healthlake:CreateFHIRDatastore",
      "healthlake:ListFHIRDatastores"
    ],
    "datastore*": [
      "healthlake:CreateResource",
      "healthlake:DeleteFHIRDatastore",
      "healthlake:DeleteResource",
      "healthlake:DescribeFHIRDatastore",
      "healthlake:DescribeFHIRExportJob",
      "healthlake:DescribeFHIRImportJob",
      "healthlake:GetCapabilities",
      "healthlake:ListFHIRExportJobs",
      "healthlake:ListFHIRImportJobs",
      "healthlake:ReadResource",
      "healthlake:SearchWithGet",
      "healthlake:SearchWithPost",
      "healthlake:StartFHIRExportJob",
      "healthlake:StartFHIRImportJob",
      "healthlake:UpdateResource"
    ],
    "datastore": [
      "healthlake:ListTagsForResource",
      "healthlake:TagResource",
      "healthlake:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonhealthlake.html"
  },
  "connect-campaigns": {
    "campaign*": [
      "connect-campaigns:CreateCampaign",
      "connect-campaigns:DeleteCampaign",
      "connect-campaigns:DescribeCampaign",
      "connect-campaigns:GetCampaignState",
      "connect-campaigns:GetCampaignStateBatch",
      "connect-campaigns:PauseCampaign",
      "connect-campaigns:PutDialRequestBatch",
      "connect-campaigns:ResumeCampaign",
      "connect-campaigns:StartCampaign",
      "connect-campaigns:StopCampaign",
      "connect-campaigns:UpdateCampaignDialerConfig",
      "connect-campaigns:UpdateCampaignName",
      "connect-campaigns:UpdateCampaignOutboundCallConfig"
    ],
    "?": [
      "connect-campaigns:DeleteConnectInstanceConfig",
      "connect-campaigns:DeleteInstanceOnboardingJob",
      "connect-campaigns:GetConnectInstanceConfig",
      "connect-campaigns:GetInstanceOnboardingJobStatus",
      "connect-campaigns:ListCampaigns",
      "connect-campaigns:StartInstanceOnboardingJob"
    ],
    "campaign": [
      "connect-campaigns:ListTagsForResource",
      "connect-campaigns:TagResource",
      "connect-campaigns:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_high-volumeoutboundcommunications.html"
  },
  "honeycode": {
    "table*": [
      "honeycode:BatchCreateTableRows",
      "honeycode:BatchDeleteTableRows",
      "honeycode:BatchUpdateTableRows",
      "honeycode:BatchUpsertTableRows",
      "honeycode:DescribeTableDataImportJob",
      "honeycode:ListTableColumns",
      "honeycode:ListTableRows",
      "honeycode:QueryTableRows",
      "honeycode:StartTableDataImportJob"
    ],
    "screen*": [
      "honeycode:GetScreenData"
    ],
    "screen-automation*": [
      "honeycode:InvokeScreenAutomation"
    ],
    "workbook*": [
      "honeycode:ListTables"
    ],
    "?": [
      "honeycode:ListTagsForResource",
      "honeycode:TagResource",
      "honeycode:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonhoneycode.html"
  },
  "access-analyzer": {
    "Analyzer*": [
      "access-analyzer:ApplyArchiveRule",
      "access-analyzer:CreateAccessPreview",
      "access-analyzer:CreateAnalyzer",
      "access-analyzer:DeleteAnalyzer",
      "access-analyzer:GetAccessPreview",
      "access-analyzer:GetAnalyzedResource",
      "access-analyzer:GetAnalyzer",
      "access-analyzer:GetFinding",
      "access-analyzer:ListAccessPreviewFindings",
      "access-analyzer:ListAccessPreviews",
      "access-analyzer:ListAnalyzedResources",
      "access-analyzer:ListArchiveRules",
      "access-analyzer:ListFindings",
      "access-analyzer:StartResourceScan",
      "access-analyzer:UpdateFindings"
    ],
    "?": [
      "access-analyzer:CancelPolicyGeneration",
      "access-analyzer:GetGeneratedPolicy",
      "access-analyzer:ListAnalyzers",
      "access-analyzer:ListPolicyGenerations",
      "access-analyzer:StartPolicyGeneration",
      "access-analyzer:ValidatePolicy"
    ],
    "ArchiveRule*": [
      "access-analyzer:CreateArchiveRule",
      "access-analyzer:DeleteArchiveRule",
      "access-analyzer:GetArchiveRule",
      "access-analyzer:UpdateArchiveRule"
    ],
    "Analyzer": [
      "access-analyzer:ListTagsForResource",
      "access-analyzer:TagResource",
      "access-analyzer:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiamaccessanalyzer.html"
  },
  "sso": {
    "?": [
      "sso:AssociateDirectory",
      "sso:AssociateProfile",
      "sso:CreateApplicationInstance",
      "sso:CreateApplicationInstanceCertificate",
      "sso:CreateManagedApplicationInstance",
      "sso:CreateProfile",
      "sso:CreateTrust",
      "sso:DeleteApplicationInstance",
      "sso:DeleteApplicationInstanceCertificate",
      "sso:DeleteManagedApplicationInstance",
      "sso:DeletePermissionsPolicy",
      "sso:DeleteProfile",
      "sso:DescribeDirectories",
      "sso:DescribePermissionsPolicies",
      "sso:DescribeRegisteredRegions",
      "sso:DescribeTrusts",
      "sso:DisassociateDirectory",
      "sso:DisassociateProfile",
      "sso:GetApplicationInstance",
      "sso:GetApplicationTemplate",
      "sso:GetManagedApplicationInstance",
      "sso:GetMfaDeviceManagementForDirectory",
      "sso:GetPermissionSet",
      "sso:GetPermissionsPolicy",
      "sso:GetProfile",
      "sso:GetSSOStatus",
      "sso:GetSharedSsoConfiguration",
      "sso:GetSsoConfiguration",
      "sso:GetTrust",
      "sso:ImportApplicationInstanceServiceProviderMetadata",
      "sso:ListApplicationInstanceCertificates",
      "sso:ListApplicationInstances",
      "sso:ListApplicationTemplates",
      "sso:ListApplications",
      "sso:ListDirectoryAssociations",
      "sso:ListInstances",
      "sso:ListProfileAssociations",
      "sso:ListProfiles",
      "sso:PutMfaDeviceManagementForDirectory",
      "sso:PutPermissionsPolicy",
      "sso:SearchGroups",
      "sso:SearchUsers",
      "sso:StartSSO",
      "sso:UpdateApplicationInstanceActiveCertificate",
      "sso:UpdateApplicationInstanceDisplayData",
      "sso:UpdateApplicationInstanceResponseConfiguration",
      "sso:UpdateApplicationInstanceResponseSchemaConfiguration",
      "sso:UpdateApplicationInstanceSecurityConfiguration",
      "sso:UpdateApplicationInstanceServiceProviderConfiguration",
      "sso:UpdateApplicationInstanceStatus",
      "sso:UpdateDirectoryAssociation",
      "sso:UpdateManagedApplicationInstanceStatus",
      "sso:UpdateProfile",
      "sso:UpdateSSOConfiguration",
      "sso:UpdateTrust"
    ],
    "Instance*": [
      "sso:AttachCustomerManagedPolicyReferenceToPermissionSet",
      "sso:AttachManagedPolicyToPermissionSet",
      "sso:CreateInstanceAccessControlAttributeConfiguration",
      "sso:CreatePermissionSet",
      "sso:DeleteInlinePolicyFromPermissionSet",
      "sso:DeleteInstanceAccessControlAttributeConfiguration",
      "sso:DeletePermissionSet",
      "sso:DeletePermissionsBoundaryFromPermissionSet",
      "sso:DescribeAccountAssignmentCreationStatus",
      "sso:DescribeAccountAssignmentDeletionStatus",
      "sso:DescribeInstanceAccessControlAttributeConfiguration",
      "sso:DescribePermissionSet",
      "sso:DescribePermissionSetProvisioningStatus",
      "sso:DetachCustomerManagedPolicyReferenceFromPermissionSet",
      "sso:DetachManagedPolicyFromPermissionSet",
      "sso:GetInlinePolicyForPermissionSet",
      "sso:GetPermissionsBoundaryForPermissionSet",
      "sso:ListAccountAssignmentCreationStatus",
      "sso:ListAccountAssignmentDeletionStatus",
      "sso:ListAccountsForProvisionedPermissionSet",
      "sso:ListCustomerManagedPolicyReferencesInPermissionSet",
      "sso:ListManagedPoliciesInPermissionSet",
      "sso:ListPermissionSetProvisioningStatus",
      "sso:ListPermissionSets",
      "sso:ListTagsForResource",
      "sso:PutInlinePolicyToPermissionSet",
      "sso:PutPermissionsBoundaryToPermissionSet",
      "sso:TagResource",
      "sso:UntagResource",
      "sso:UpdateInstanceAccessControlAttributeConfiguration",
      "sso:UpdatePermissionSet"
    ],
    "Account*": [
      "sso:CreateAccountAssignment",
      "sso:DeleteAccountAssignment",
      "sso:ListAccountAssignments",
      "sso:ListPermissionSetsProvisionedToAccount",
      "sso:ProvisionPermissionSet"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiamidentitycentersuccessortoawssinglesign-on.html"
  },
  "sso-directory": {
    "?": [
      "sso-directory:AddMemberToGroup",
      "sso-directory:CompleteVirtualMfaDeviceRegistration",
      "sso-directory:CompleteWebAuthnDeviceRegistration",
      "sso-directory:CreateAlias",
      "sso-directory:CreateBearerToken",
      "sso-directory:CreateExternalIdPConfigurationForDirectory",
      "sso-directory:CreateGroup",
      "sso-directory:CreateProvisioningTenant",
      "sso-directory:CreateUser",
      "sso-directory:DeleteBearerToken",
      "sso-directory:DeleteExternalIdPCertificate",
      "sso-directory:DeleteExternalIdPConfigurationForDirectory",
      "sso-directory:DeleteGroup",
      "sso-directory:DeleteMfaDeviceForUser",
      "sso-directory:DeleteProvisioningTenant",
      "sso-directory:DeleteUser",
      "sso-directory:DescribeDirectory",
      "sso-directory:DescribeGroup",
      "sso-directory:DescribeGroups",
      "sso-directory:DescribeProvisioningTenant",
      "sso-directory:DescribeUser",
      "sso-directory:DescribeUserByUniqueAttribute",
      "sso-directory:DescribeUsers",
      "sso-directory:DisableExternalIdPConfigurationForDirectory",
      "sso-directory:DisableUser",
      "sso-directory:EnableExternalIdPConfigurationForDirectory",
      "sso-directory:EnableUser",
      "sso-directory:GetAWSSPConfigurationForDirectory",
      "sso-directory:GetUserPoolInfo",
      "sso-directory:ImportExternalIdPCertificate",
      "sso-directory:IsMemberInGroup",
      "sso-directory:ListBearerTokens",
      "sso-directory:ListExternalIdPCertificates",
      "sso-directory:ListExternalIdPConfigurationsForDirectory",
      "sso-directory:ListGroupsForMember",
      "sso-directory:ListGroupsForUser",
      "sso-directory:ListMembersInGroup",
      "sso-directory:ListMfaDevicesForUser",
      "sso-directory:ListProvisioningTenants",
      "sso-directory:RemoveMemberFromGroup",
      "sso-directory:SearchGroups",
      "sso-directory:SearchUsers",
      "sso-directory:StartVirtualMfaDeviceRegistration",
      "sso-directory:StartWebAuthnDeviceRegistration",
      "sso-directory:UpdateExternalIdPConfigurationForDirectory",
      "sso-directory:UpdateGroup",
      "sso-directory:UpdateGroupDisplayName",
      "sso-directory:UpdateMfaDeviceForUser",
      "sso-directory:UpdatePassword",
      "sso-directory:UpdateUser",
      "sso-directory:UpdateUserName",
      "sso-directory:VerifyEmail"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiamidentitycentersuccessortoawssinglesign-ondirectory.html"
  },
  "iam": {
    "oidc-provider*": [
      "iam:AddClientIDToOpenIDConnectProvider",
      "iam:CreateOpenIDConnectProvider",
      "iam:DeleteOpenIDConnectProvider",
      "iam:GetOpenIDConnectProvider",
      "iam:ListOpenIDConnectProviderTags",
      "iam:RemoveClientIDFromOpenIDConnectProvider",
      "iam:TagOpenIDConnectProvider",
      "iam:UntagOpenIDConnectProvider",
      "iam:UpdateOpenIDConnectProviderThumbprint"
    ],
    "instance-profile*": [
      "iam:AddRoleToInstanceProfile",
      "iam:CreateInstanceProfile",
      "iam:DeleteInstanceProfile",
      "iam:GetInstanceProfile",
      "iam:ListInstanceProfileTags",
      "iam:ListInstanceProfiles",
      "iam:RemoveRoleFromInstanceProfile",
      "iam:TagInstanceProfile",
      "iam:UntagInstanceProfile"
    ],
    "group*": [
      "iam:AddUserToGroup",
      "iam:AttachGroupPolicy",
      "iam:CreateGroup",
      "iam:DeleteGroup",
      "iam:DeleteGroupPolicy",
      "iam:DetachGroupPolicy",
      "iam:GenerateServiceLastAccessedDetails",
      "iam:GetGroup",
      "iam:GetGroupPolicy",
      "iam:ListAttachedGroupPolicies",
      "iam:ListGroupPolicies",
      "iam:ListPoliciesGrantingServiceAccess",
      "iam:PutGroupPolicy",
      "iam:RemoveUserFromGroup",
      "iam:UpdateGroup"
    ],
    "role*": [
      "iam:AttachRolePolicy",
      "iam:CreateRole",
      "iam:CreateServiceLinkedRole",
      "iam:DeleteRole",
      "iam:DeleteRolePermissionsBoundary",
      "iam:DeleteRolePolicy",
      "iam:DeleteServiceLinkedRole",
      "iam:DetachRolePolicy",
      "iam:GetRole",
      "iam:GetRolePolicy",
      "iam:GetServiceLinkedRoleDeletionStatus",
      "iam:ListAttachedRolePolicies",
      "iam:ListInstanceProfilesForRole",
      "iam:ListRolePolicies",
      "iam:ListRoleTags",
      "iam:PutRolePermissionsBoundary",
      "iam:PutRolePolicy",
      "iam:TagRole",
      "iam:UntagRole",
      "iam:UpdateAssumeRolePolicy",
      "iam:UpdateRole",
      "iam:UpdateRoleDescription"
    ],
    "user*": [
      "iam:AttachUserPolicy",
      "iam:ChangePassword",
      "iam:CreateAccessKey",
      "iam:CreateLoginProfile",
      "iam:CreateServiceSpecificCredential",
      "iam:CreateUser",
      "iam:DeactivateMFADevice",
      "iam:DeleteAccessKey",
      "iam:DeleteLoginProfile",
      "iam:DeleteSSHPublicKey",
      "iam:DeleteServiceSpecificCredential",
      "iam:DeleteSigningCertificate",
      "iam:DeleteUser",
      "iam:DeleteUserPermissionsBoundary",
      "iam:DeleteUserPolicy",
      "iam:DetachUserPolicy",
      "iam:EnableMFADevice",
      "iam:GetAccessKeyLastUsed",
      "iam:GetLoginProfile",
      "iam:GetSSHPublicKey",
      "iam:GetUser",
      "iam:GetUserPolicy",
      "iam:ListAccessKeys",
      "iam:ListAttachedUserPolicies",
      "iam:ListGroupsForUser",
      "iam:ListSSHPublicKeys",
      "iam:ListServiceSpecificCredentials",
      "iam:ListSigningCertificates",
      "iam:ListUserPolicies",
      "iam:ListUserTags",
      "iam:PutUserPermissionsBoundary",
      "iam:PutUserPolicy",
      "iam:ResetServiceSpecificCredential",
      "iam:ResyncMFADevice",
      "iam:TagUser",
      "iam:UntagUser",
      "iam:UpdateAccessKey",
      "iam:UpdateLoginProfile",
      "iam:UpdateSSHPublicKey",
      "iam:UpdateServiceSpecificCredential",
      "iam:UpdateSigningCertificate",
      "iam:UpdateUser",
      "iam:UploadSSHPublicKey",
      "iam:UploadSigningCertificate"
    ],
    "?": [
      "iam:CreateAccountAlias",
      "iam:DeleteAccountAlias",
      "iam:DeleteAccountPasswordPolicy",
      "iam:DeleteCloudFrontPublicKey",
      "iam:GenerateCredentialReport",
      "iam:GetAccountAuthorizationDetails",
      "iam:GetAccountEmailAddress",
      "iam:GetAccountName",
      "iam:GetAccountPasswordPolicy",
      "iam:GetAccountSummary",
      "iam:GetCloudFrontPublicKey",
      "iam:GetContextKeysForCustomPolicy",
      "iam:GetCredentialReport",
      "iam:GetOrganizationsAccessReport",
      "iam:GetServiceLastAccessedDetails",
      "iam:GetServiceLastAccessedDetailsWithEntities",
      "iam:ListAccountAliases",
      "iam:ListCloudFrontPublicKeys",
      "iam:ListGroups",
      "iam:ListOpenIDConnectProviders",
      "iam:ListPolicies",
      "iam:ListRoles",
      "iam:ListSAMLProviders",
      "iam:ListSTSRegionalEndpointsStatus",
      "iam:ListServerCertificates",
      "iam:ListUsers",
      "iam:ListVirtualMFADevices",
      "iam:SetSTSRegionalEndpointStatus",
      "iam:SetSecurityTokenServicePreferences",
      "iam:SimulateCustomPolicy",
      "iam:UpdateAccountEmailAddress",
      "iam:UpdateAccountName",
      "iam:UpdateAccountPasswordPolicy",
      "iam:UpdateCloudFrontPublicKey",
      "iam:UploadCloudFrontPublicKey"
    ],
    "policy*": [
      "iam:CreatePolicy",
      "iam:CreatePolicyVersion",
      "iam:DeletePolicy",
      "iam:DeletePolicyVersion",
      "iam:GetPolicy",
      "iam:GetPolicyVersion",
      "iam:ListEntitiesForPolicy",
      "iam:ListPolicyTags",
      "iam:ListPolicyVersions",
      "iam:SetDefaultPolicyVersion",
      "iam:TagPolicy",
      "iam:UntagPolicy"
    ],
    "saml-provider*": [
      "iam:CreateSAMLProvider",
      "iam:DeleteSAMLProvider",
      "iam:GetSAMLProvider",
      "iam:ListSAMLProviderTags",
      "iam:TagSAMLProvider",
      "iam:UntagSAMLProvider",
      "iam:UpdateSAMLProvider"
    ],
    "mfa*": [
      "iam:CreateVirtualMFADevice",
      "iam:ListMFADeviceTags",
      "iam:TagMFADevice",
      "iam:UntagMFADevice"
    ],
    "server-certificate*": [
      "iam:DeleteServerCertificate",
      "iam:GetServerCertificate",
      "iam:ListServerCertificateTags",
      "iam:TagServerCertificate",
      "iam:UntagServerCertificate",
      "iam:UpdateServerCertificate",
      "iam:UploadServerCertificate"
    ],
    "mfa": [
      "iam:DeleteVirtualMFADevice"
    ],
    "access-report*": [
      "iam:GenerateOrganizationsAccessReport"
    ],
    "group": [
      "iam:GetContextKeysForPrincipalPolicy",
      "iam:SimulatePrincipalPolicy"
    ],
    "user": [
      "iam:ListMFADevices"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsidentityandaccessmanagement.html"
  },
  "rolesanywhere": {
    "?": [
      "rolesanywhere:CreateProfile",
      "rolesanywhere:CreateTrustAnchor",
      "rolesanywhere:DeleteCrl",
      "rolesanywhere:DeleteProfile",
      "rolesanywhere:DeleteTrustAnchor",
      "rolesanywhere:DisableCrl",
      "rolesanywhere:DisableProfile",
      "rolesanywhere:DisableTrustAnchor",
      "rolesanywhere:EnableCrl",
      "rolesanywhere:EnableProfile",
      "rolesanywhere:EnableTrustAnchor",
      "rolesanywhere:GetCrl",
      "rolesanywhere:GetProfile",
      "rolesanywhere:GetSubject",
      "rolesanywhere:GetTrustAnchor",
      "rolesanywhere:ImportCrl",
      "rolesanywhere:ListCrls",
      "rolesanywhere:ListProfiles",
      "rolesanywhere:ListSubjects",
      "rolesanywhere:ListTagsForResource",
      "rolesanywhere:ListTrustAnchors",
      "rolesanywhere:UpdateCrl",
      "rolesanywhere:UpdateProfile",
      "rolesanywhere:UpdateTrustAnchor"
    ],
    "crl": [
      "rolesanywhere:TagResource",
      "rolesanywhere:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsidentityandaccessmanagementrolesanywhere.html"
  },
  "identitystore": {
    "Identitystore*": [
      "identitystore:CreateGroup",
      "identitystore:CreateUser",
      "identitystore:DeleteUser",
      "identitystore:DescribeUser",
      "identitystore:GetUserId",
      "identitystore:UpdateUser"
    ],
    "Group*": [
      "identitystore:CreateGroupMembership",
      "identitystore:DeleteGroup",
      "identitystore:DeleteGroupMembership",
      "identitystore:DescribeGroup",
      "identitystore:DescribeGroupMembership",
      "identitystore:GetGroupId",
      "identitystore:GetGroupMembershipId",
      "identitystore:UpdateGroup"
    ],
    "AllGroupMemberships*": [
      "identitystore:IsMemberInGroups",
      "identitystore:ListGroupMemberships",
      "identitystore:ListGroupMembershipsForMember"
    ],
    "AllGroups*": [
      "identitystore:ListGroups"
    ],
    "AllUsers*": [
      "identitystore:ListUsers"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsidentitystore.html"
  },
  "identitystore-auth": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsidentitystoreauth.html"
  },
  "identity-sync": {
    "SyncProfileResource*": [
      "identity-sync:CreateSyncFilter",
      "identity-sync:CreateSyncTarget",
      "identity-sync:DeleteSyncFilter",
      "identity-sync:DeleteSyncProfile",
      "identity-sync:DeleteSyncTarget",
      "identity-sync:GetSyncProfile",
      "identity-sync:GetSyncTarget",
      "identity-sync:ListSyncFilters",
      "identity-sync:StartSync",
      "identity-sync:StopSync",
      "identity-sync:UpdateSyncTarget"
    ],
    "?": [
      "identity-sync:CreateSyncProfile"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsidentitysync.html"
  },
  "importexport": {
    "?": [
      "importexport:CancelJob",
      "importexport:CreateJob",
      "importexport:GetShippingLabel",
      "importexport:GetStatus",
      "importexport:ListJobs",
      "importexport:UpdateJob"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsimportexportdiskservice.html"
  },
  "inspector": {
    "?": [
      "inspector:AddAttributesToFindings",
      "inspector:CreateAssessmentTarget",
      "inspector:CreateAssessmentTemplate",
      "inspector:CreateExclusionsPreview",
      "inspector:CreateResourceGroup",
      "inspector:DeleteAssessmentRun",
      "inspector:DeleteAssessmentTarget",
      "inspector:DeleteAssessmentTemplate",
      "inspector:DescribeAssessmentRuns",
      "inspector:DescribeAssessmentTargets",
      "inspector:DescribeAssessmentTemplates",
      "inspector:DescribeCrossAccountAccessRole",
      "inspector:DescribeExclusions",
      "inspector:DescribeFindings",
      "inspector:DescribeResourceGroups",
      "inspector:DescribeRulesPackages",
      "inspector:GetAssessmentReport",
      "inspector:GetExclusionsPreview",
      "inspector:GetTelemetryMetadata",
      "inspector:ListAssessmentRunAgents",
      "inspector:ListAssessmentRuns",
      "inspector:ListAssessmentTargets",
      "inspector:ListAssessmentTemplates",
      "inspector:ListEventSubscriptions",
      "inspector:ListExclusions",
      "inspector:ListFindings",
      "inspector:ListRulesPackages",
      "inspector:ListTagsForResource",
      "inspector:PreviewAgents",
      "inspector:RegisterCrossAccountAccessRole",
      "inspector:RemoveAttributesFromFindings",
      "inspector:SetTagsForResource",
      "inspector:StartAssessmentRun",
      "inspector:StopAssessmentRun",
      "inspector:SubscribeToEvent",
      "inspector:UnsubscribeFromEvent",
      "inspector:UpdateAssessmentTarget"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoninspector.html"
  },
  "inspector2": {
    "?": [
      "inspector2:AssociateMember",
      "inspector2:BatchGetAccountStatus",
      "inspector2:BatchGetFreeTrialInfo",
      "inspector2:CancelFindingsReport",
      "inspector2:CreateFindingsReport",
      "inspector2:DescribeOrganizationConfiguration",
      "inspector2:Disable",
      "inspector2:DisableDelegatedAdminAccount",
      "inspector2:DisassociateMember",
      "inspector2:Enable",
      "inspector2:EnableDelegatedAdminAccount",
      "inspector2:GetConfiguration",
      "inspector2:GetDelegatedAdminAccount",
      "inspector2:GetFindingsReportStatus",
      "inspector2:GetMember",
      "inspector2:ListAccountPermissions",
      "inspector2:ListCoverage",
      "inspector2:ListCoverageStatistics",
      "inspector2:ListDelegatedAdminAccounts",
      "inspector2:ListFilters",
      "inspector2:ListFindingAggregations",
      "inspector2:ListFindings",
      "inspector2:ListMembers",
      "inspector2:ListTagsForResource",
      "inspector2:ListUsageTotals",
      "inspector2:TagResource",
      "inspector2:UntagResource",
      "inspector2:UpdateConfiguration",
      "inspector2:UpdateOrganizationConfiguration"
    ],
    "Filter*": [
      "inspector2:CreateFilter",
      "inspector2:DeleteFilter",
      "inspector2:UpdateFilter"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoninspector2.html"
  },
  "ivs": {
    "Channel*": [
      "ivs:BatchGetChannel",
      "ivs:CreateChannel",
      "ivs:DeleteChannel",
      "ivs:GetChannel",
      "ivs:GetStream",
      "ivs:GetStreamSession",
      "ivs:ListChannels",
      "ivs:ListStreamKeys",
      "ivs:ListStreamSessions",
      "ivs:ListStreams",
      "ivs:PutMetadata",
      "ivs:StopStream",
      "ivs:UpdateChannel"
    ],
    "Stream-Key*": [
      "ivs:BatchGetStreamKey",
      "ivs:CreateStreamKey",
      "ivs:DeleteStreamKey",
      "ivs:GetStreamKey"
    ],
    "Recording-Configuration*": [
      "ivs:CreateRecordingConfiguration",
      "ivs:DeleteRecordingConfiguration",
      "ivs:GetRecordingConfiguration",
      "ivs:ListRecordingConfigurations"
    ],
    "Playback-Key-Pair*": [
      "ivs:DeletePlaybackKeyPair",
      "ivs:GetPlaybackKeyPair",
      "ivs:ImportPlaybackKeyPair",
      "ivs:ListPlaybackKeyPairs"
    ],
    "Channel": [
      "ivs:ListTagsForResource",
      "ivs:TagResource",
      "ivs:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoninteractivevideoservice.html"
  },
  "ivschat": {
    "Room*": [
      "ivschat:CreateChatToken",
      "ivschat:CreateRoom",
      "ivschat:DeleteMessage",
      "ivschat:DeleteRoom",
      "ivschat:DisconnectUser",
      "ivschat:GetRoom",
      "ivschat:ListRooms",
      "ivschat:SendEvent",
      "ivschat:UpdateRoom"
    ],
    "Logging-Configuration*": [
      "ivschat:CreateLoggingConfiguration",
      "ivschat:DeleteLoggingConfiguration",
      "ivschat:GetLoggingConfiguration",
      "ivschat:ListLoggingConfigurations",
      "ivschat:UpdateLoggingConfiguration"
    ],
    "Room": [
      "ivschat:ListTagsForResource",
      "ivschat:TagResource",
      "ivschat:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoninteractivevideoservicechat.html"
  },
  "invoicing": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsinvoicingservice.html"
  },
  "iot": {
    "cert*": [
      "iot:AcceptCertificateTransfer",
      "iot:CancelCertificateTransfer",
      "iot:DeleteCertificate",
      "iot:DescribeCertificate",
      "iot:RejectCertificateTransfer",
      "iot:TransferCertificate",
      "iot:UpdateCertificate"
    ],
    "billinggroup*": [
      "iot:AddThingToBillingGroup",
      "iot:CreateBillingGroup",
      "iot:DeleteBillingGroup",
      "iot:DescribeBillingGroup",
      "iot:ListThingsInBillingGroup",
      "iot:RemoveThingFromBillingGroup",
      "iot:UpdateBillingGroup"
    ],
    "thing*": [
      "iot:AddThingToThingGroup",
      "iot:CreateThing",
      "iot:DeleteThing",
      "iot:DeleteThingShadow",
      "iot:DescribeThing",
      "iot:GetThingShadow",
      "iot:ListJobExecutionsForThing",
      "iot:ListMetricValues",
      "iot:ListNamedShadowsForThing",
      "iot:ListThingGroupsForThing",
      "iot:RemoveThingFromThingGroup",
      "iot:UpdateThing",
      "iot:UpdateThingGroupsForThing",
      "iot:UpdateThingShadow"
    ],
    "job*": [
      "iot:AssociateTargetsWithJob",
      "iot:CancelJob",
      "iot:CancelJobExecution",
      "iot:CreateJob",
      "iot:DeleteJob",
      "iot:DeleteJobExecution",
      "iot:DescribeJob",
      "iot:GetJobDocument",
      "iot:ListJobExecutionsForJob",
      "iot:UpdateJob"
    ],
    "cert": [
      "iot:AttachPolicy",
      "iot:AttachPrincipalPolicy",
      "iot:DetachPolicy",
      "iot:DetachPrincipalPolicy",
      "iot:GetEffectivePolicies",
      "iot:TestAuthorization"
    ],
    "securityprofile*": [
      "iot:AttachSecurityProfile",
      "iot:CreateSecurityProfile",
      "iot:DeleteSecurityProfile",
      "iot:DescribeSecurityProfile",
      "iot:DetachSecurityProfile",
      "iot:ListTargetsForSecurityProfile",
      "iot:UpdateSecurityProfile"
    ],
    "?": [
      "iot:AttachThingPrincipal",
      "iot:CancelAuditMitigationActionsTask",
      "iot:CancelAuditTask",
      "iot:CancelDetectMitigationActionsTask",
      "iot:ClearDefaultAuthorizer",
      "iot:CreateAuditSuppression",
      "iot:CreateCertificateFromCsr",
      "iot:CreateKeysAndCertificate",
      "iot:DeleteAccountAuditConfiguration",
      "iot:DeleteAuditSuppression",
      "iot:DeleteRegistrationCode",
      "iot:DeleteV2LoggingLevel",
      "iot:DescribeAccountAuditConfiguration",
      "iot:DescribeAuditFinding",
      "iot:DescribeAuditMitigationActionsTask",
      "iot:DescribeAuditSuppression",
      "iot:DescribeAuditTask",
      "iot:DescribeDefaultAuthorizer",
      "iot:DescribeDetectMitigationActionsTask",
      "iot:DescribeEndpoint",
      "iot:DescribeEventConfigurations",
      "iot:DescribeThingRegistrationTask",
      "iot:DetachThingPrincipal",
      "iot:GetIndexingConfiguration",
      "iot:GetLoggingOptions",
      "iot:GetRegistrationCode",
      "iot:GetV2LoggingOptions",
      "iot:ListAttachedPolicies",
      "iot:ListAuditFindings",
      "iot:ListAuditMitigationActionsExecutions",
      "iot:ListAuditMitigationActionsTasks",
      "iot:ListAuditSuppressions",
      "iot:ListAuditTasks",
      "iot:ListAuthorizers",
      "iot:ListBillingGroups",
      "iot:ListCACertificates",
      "iot:ListCertificates",
      "iot:ListCertificatesByCA",
      "iot:ListCustomMetrics",
      "iot:ListDetectMitigationActionsTasks",
      "iot:ListDimensions",
      "iot:ListDomainConfigurations",
      "iot:ListFleetMetrics",
      "iot:ListIndices",
      "iot:ListJobTemplates",
      "iot:ListJobs",
      "iot:ListManagedJobTemplates",
      "iot:ListMitigationActions",
      "iot:ListOTAUpdates",
      "iot:ListOutgoingCertificates",
      "iot:ListPolicies",
      "iot:ListPolicyPrincipals",
      "iot:ListPrincipalPolicies",
      "iot:ListPrincipalThings",
      "iot:ListProvisioningTemplates",
      "iot:ListRelatedResourcesForAuditFinding",
      "iot:ListRetainedMessages",
      "iot:ListRoleAliases",
      "iot:ListScheduledAudits",
      "iot:ListStreams",
      "iot:ListThingGroups",
      "iot:ListThingPrincipals",
      "iot:ListThingRegistrationTaskReports",
      "iot:ListThingRegistrationTasks",
      "iot:ListThingTypes",
      "iot:ListThings",
      "iot:ListTopicRuleDestinations",
      "iot:ListTopicRules",
      "iot:ListTunnels",
      "iot:ListV2LoggingLevels",
      "iot:OpenTunnel",
      "iot:PutVerificationStateOnViolation",
      "iot:RegisterCACertificate",
      "iot:RegisterCertificate",
      "iot:RegisterCertificateWithoutCA",
      "iot:RegisterThing",
      "iot:SetLoggingOptions",
      "iot:SetV2LoggingLevel",
      "iot:SetV2LoggingOptions",
      "iot:StartAuditMitigationActionsTask",
      "iot:StartOnDemandAuditTask",
      "iot:StartThingRegistrationTask",
      "iot:StopThingRegistrationTask",
      "iot:UpdateAccountAuditConfiguration",
      "iot:UpdateAuditSuppression",
      "iot:UpdateEventConfigurations",
      "iot:UpdateIndexingConfiguration",
      "iot:ValidateSecurityProfileBehaviors"
    ],
    "tunnel*": [
      "iot:CloseTunnel",
      "iot:DescribeTunnel",
      "iot:RotateTunnelAccessToken"
    ],
    "destination*": [
      "iot:ConfirmTopicRuleDestination",
      "iot:CreateTopicRuleDestination",
      "iot:DeleteTopicRuleDestination",
      "iot:GetTopicRuleDestination",
      "iot:UpdateTopicRuleDestination"
    ],
    "client*": [
      "iot:Connect"
    ],
    "authorizer*": [
      "iot:CreateAuthorizer",
      "iot:DeleteAuthorizer",
      "iot:DescribeAuthorizer",
      "iot:SetDefaultAuthorizer",
      "iot:TestInvokeAuthorizer",
      "iot:UpdateAuthorizer"
    ],
    "custommetric*": [
      "iot:CreateCustomMetric",
      "iot:DeleteCustomMetric",
      "iot:DescribeCustomMetric",
      "iot:UpdateCustomMetric"
    ],
    "dimension*": [
      "iot:CreateDimension",
      "iot:DeleteDimension",
      "iot:DescribeDimension",
      "iot:UpdateDimension"
    ],
    "domainconfiguration*": [
      "iot:CreateDomainConfiguration",
      "iot:DeleteDomainConfiguration",
      "iot:DescribeDomainConfiguration",
      "iot:UpdateDomainConfiguration"
    ],
    "dynamicthinggroup*": [
      "iot:CreateDynamicThingGroup",
      "iot:DeleteDynamicThingGroup",
      "iot:UpdateDynamicThingGroup"
    ],
    "fleetmetric*": [
      "iot:CreateFleetMetric",
      "iot:DeleteFleetMetric",
      "iot:DescribeFleetMetric",
      "iot:UpdateFleetMetric"
    ],
    "jobtemplate*": [
      "iot:CreateJobTemplate",
      "iot:DeleteJobTemplate",
      "iot:DescribeJobTemplate",
      "iot:DescribeManagedJobTemplate"
    ],
    "mitigationaction*": [
      "iot:CreateMitigationAction",
      "iot:DeleteMitigationAction",
      "iot:DescribeMitigationAction",
      "iot:UpdateMitigationAction"
    ],
    "otaupdate*": [
      "iot:CreateOTAUpdate",
      "iot:DeleteOTAUpdate",
      "iot:GetOTAUpdate"
    ],
    "policy*": [
      "iot:CreatePolicy",
      "iot:CreatePolicyVersion",
      "iot:DeletePolicy",
      "iot:DeletePolicyVersion",
      "iot:GetPolicy",
      "iot:GetPolicyVersion",
      "iot:ListPolicyVersions",
      "iot:ListTargetsForPolicy",
      "iot:SetDefaultPolicyVersion"
    ],
    "provisioningtemplate*": [
      "iot:CreateProvisioningClaim",
      "iot:CreateProvisioningTemplate",
      "iot:CreateProvisioningTemplateVersion",
      "iot:DeleteProvisioningTemplate",
      "iot:DeleteProvisioningTemplateVersion",
      "iot:DescribeProvisioningTemplate",
      "iot:DescribeProvisioningTemplateVersion",
      "iot:ListProvisioningTemplateVersions",
      "iot:UpdateProvisioningTemplate"
    ],
    "rolealias*": [
      "iot:CreateRoleAlias",
      "iot:DeleteRoleAlias",
      "iot:DescribeRoleAlias",
      "iot:UpdateRoleAlias"
    ],
    "scheduledaudit*": [
      "iot:CreateScheduledAudit",
      "iot:DeleteScheduledAudit",
      "iot:DescribeScheduledAudit",
      "iot:UpdateScheduledAudit"
    ],
    "stream*": [
      "iot:CreateStream",
      "iot:DeleteStream",
      "iot:DescribeStream",
      "iot:UpdateStream"
    ],
    "thinggroup*": [
      "iot:CreateThingGroup",
      "iot:DeleteThingGroup",
      "iot:DescribeThingGroup",
      "iot:ListThingsInThingGroup",
      "iot:UpdateThingGroup"
    ],
    "thingtype*": [
      "iot:CreateThingType",
      "iot:DeleteThingType",
      "iot:DeprecateThingType",
      "iot:DescribeThingType"
    ],
    "rule*": [
      "iot:CreateTopicRule",
      "iot:DeleteTopicRule",
      "iot:DisableTopicRule",
      "iot:EnableTopicRule",
      "iot:GetTopicRule",
      "iot:ReplaceTopicRule"
    ],
    "cacert*": [
      "iot:DeleteCACertificate",
      "iot:DescribeCACertificate",
      "iot:UpdateCACertificate"
    ],
    "index*": [
      "iot:DescribeIndex",
      "iot:GetBucketsAggregation",
      "iot:GetCardinality",
      "iot:GetPercentiles",
      "iot:GetStatistics",
      "iot:SearchIndex"
    ],
    "job": [
      "iot:DescribeJobExecution"
    ],
    "securityprofile": [
      "iot:GetBehaviorModelTrainingSummaries",
      "iot:ListActiveViolations",
      "iot:ListViolationEvents",
      "iot:StartDetectMitigationActionsTask"
    ],
    "topic*": [
      "iot:GetRetainedMessage",
      "iot:Publish",
      "iot:Receive",
      "iot:RetainPublish"
    ],
    "thing": [
      "iot:ListDetectMitigationActionsExecutions"
    ],
    "custommetric": [
      "iot:ListSecurityProfiles"
    ],
    "thinggroup": [
      "iot:ListSecurityProfilesForTarget"
    ],
    "authorizer": [
      "iot:ListTagsForResource",
      "iot:TagResource",
      "iot:UntagResource"
    ],
    "topicfilter*": [
      "iot:Subscribe"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html"
  },
  "iot1click": {
    "project*": [
      "iot1click:AssociateDeviceWithPlacement",
      "iot1click:CreatePlacement",
      "iot1click:CreateProject",
      "iot1click:DeletePlacement",
      "iot1click:DeleteProject",
      "iot1click:DescribePlacement",
      "iot1click:DescribeProject",
      "iot1click:DisassociateDeviceFromPlacement",
      "iot1click:GetDevicesInPlacement",
      "iot1click:ListPlacements",
      "iot1click:UpdatePlacement",
      "iot1click:UpdateProject"
    ],
    "?": [
      "iot1click:ClaimDevicesByClaimCode",
      "iot1click:ListDevices",
      "iot1click:ListProjects"
    ],
    "device*": [
      "iot1click:DescribeDevice",
      "iot1click:FinalizeDeviceClaim",
      "iot1click:GetDeviceMethods",
      "iot1click:InitiateDeviceClaim",
      "iot1click:InvokeDeviceMethod",
      "iot1click:ListDeviceEvents",
      "iot1click:UnclaimDevice",
      "iot1click:UpdateDeviceState"
    ],
    "device": [
      "iot1click:ListTagsForResource",
      "iot1click:TagResource",
      "iot1click:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot1-click.html"
  },
  "iotanalytics": {
    "channel*": [
      "iotanalytics:BatchPutMessage",
      "iotanalytics:CreateChannel",
      "iotanalytics:DeleteChannel",
      "iotanalytics:DescribeChannel",
      "iotanalytics:SampleChannelData",
      "iotanalytics:UpdateChannel"
    ],
    "pipeline*": [
      "iotanalytics:CancelPipelineReprocessing",
      "iotanalytics:CreatePipeline",
      "iotanalytics:DeletePipeline",
      "iotanalytics:DescribePipeline",
      "iotanalytics:StartPipelineReprocessing",
      "iotanalytics:UpdatePipeline"
    ],
    "dataset*": [
      "iotanalytics:CreateDataset",
      "iotanalytics:CreateDatasetContent",
      "iotanalytics:DeleteDataset",
      "iotanalytics:DeleteDatasetContent",
      "iotanalytics:DescribeDataset",
      "iotanalytics:GetDatasetContent",
      "iotanalytics:ListDatasetContents",
      "iotanalytics:UpdateDataset"
    ],
    "datastore*": [
      "iotanalytics:CreateDatastore",
      "iotanalytics:DeleteDatastore",
      "iotanalytics:DescribeDatastore",
      "iotanalytics:UpdateDatastore"
    ],
    "?": [
      "iotanalytics:DescribeLoggingOptions",
      "iotanalytics:ListChannels",
      "iotanalytics:ListDatasets",
      "iotanalytics:ListDatastores",
      "iotanalytics:ListPipelines",
      "iotanalytics:PutLoggingOptions",
      "iotanalytics:RunPipelineActivity"
    ],
    "channel": [
      "iotanalytics:ListTagsForResource",
      "iotanalytics:TagResource",
      "iotanalytics:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiotanalytics.html"
  },
  "iotdeviceadvisor": {
    "?": [
      "iotdeviceadvisor:CreateSuiteDefinition",
      "iotdeviceadvisor:GetEndpoint",
      "iotdeviceadvisor:ListSuiteDefinitions",
      "iotdeviceadvisor:StartSuiteRun"
    ],
    "Suitedefinition*": [
      "iotdeviceadvisor:DeleteSuiteDefinition",
      "iotdeviceadvisor:GetSuiteDefinition",
      "iotdeviceadvisor:ListSuiteRuns",
      "iotdeviceadvisor:UpdateSuiteDefinition"
    ],
    "Suiterun*": [
      "iotdeviceadvisor:GetSuiteRun",
      "iotdeviceadvisor:GetSuiteRunReport",
      "iotdeviceadvisor:StopSuiteRun"
    ],
    "Suitedefinition": [
      "iotdeviceadvisor:ListTagsForResource",
      "iotdeviceadvisor:TagResource",
      "iotdeviceadvisor:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiotcoredeviceadvisor.html"
  },
  "iotwireless": {
    "?": [
      "iotwireless:AssociateAwsAccountWithPartnerAccount",
      "iotwireless:CreateDestination",
      "iotwireless:CreateDeviceProfile",
      "iotwireless:CreateFuotaTask",
      "iotwireless:CreateMulticastGroup",
      "iotwireless:CreateServiceProfile",
      "iotwireless:CreateWirelessDevice",
      "iotwireless:CreateWirelessGateway",
      "iotwireless:CreateWirelessGatewayTaskDefinition",
      "iotwireless:DeleteQueuedMessages",
      "iotwireless:GetEventConfigurationByResourceTypes",
      "iotwireless:GetLogLevelsByResourceTypes",
      "iotwireless:GetPositionEstimate",
      "iotwireless:GetServiceEndpoint",
      "iotwireless:ListDestinations",
      "iotwireless:ListDeviceProfiles",
      "iotwireless:ListEventConfigurations",
      "iotwireless:ListFuotaTasks",
      "iotwireless:ListMulticastGroups",
      "iotwireless:ListNetworkAnalyzerConfigurations",
      "iotwireless:ListPartnerAccounts",
      "iotwireless:ListPositionConfigurations",
      "iotwireless:ListQueuedMessages",
      "iotwireless:ListServiceProfiles",
      "iotwireless:ListWirelessDevices",
      "iotwireless:ListWirelessGatewayTaskDefinitions",
      "iotwireless:ListWirelessGateways",
      "iotwireless:ResetAllResourceLogLevels",
      "iotwireless:UpdateEventConfigurationByResourceTypes",
      "iotwireless:UpdateLogLevelsByResourceTypes"
    ],
    "FuotaTask*": [
      "iotwireless:AssociateMulticastGroupWithFuotaTask",
      "iotwireless:AssociateWirelessDeviceWithFuotaTask",
      "iotwireless:DeleteFuotaTask",
      "iotwireless:DisassociateMulticastGroupFromFuotaTask",
      "iotwireless:DisassociateWirelessDeviceFromFuotaTask",
      "iotwireless:GetFuotaTask",
      "iotwireless:ListMulticastGroupsByFuotaTask",
      "iotwireless:StartFuotaTask",
      "iotwireless:UpdateFuotaTask"
    ],
    "MulticastGroup*": [
      "iotwireless:AssociateWirelessDeviceWithMulticastGroup",
      "iotwireless:CancelMulticastGroupSession",
      "iotwireless:DeleteMulticastGroup",
      "iotwireless:DisassociateWirelessDeviceFromMulticastGroup",
      "iotwireless:GetMulticastGroup",
      "iotwireless:GetMulticastGroupSession",
      "iotwireless:SendDataToMulticastGroup",
      "iotwireless:StartBulkAssociateWirelessDeviceWithMulticastGroup",
      "iotwireless:StartBulkDisassociateWirelessDeviceFromMulticastGroup",
      "iotwireless:StartMulticastGroupSession",
      "iotwireless:UpdateMulticastGroup"
    ],
    "WirelessDevice*": [
      "iotwireless:AssociateWirelessDeviceWithThing",
      "iotwireless:CreateNetworkAnalyzerConfiguration",
      "iotwireless:DeleteWirelessDevice",
      "iotwireless:DisassociateWirelessDeviceFromThing",
      "iotwireless:GetWirelessDevice",
      "iotwireless:GetWirelessDeviceStatistics",
      "iotwireless:SendDataToWirelessDevice",
      "iotwireless:TestWirelessDevice",
      "iotwireless:UpdateWirelessDevice"
    ],
    "WirelessGateway*": [
      "iotwireless:AssociateWirelessGatewayWithCertificate",
      "iotwireless:AssociateWirelessGatewayWithThing",
      "iotwireless:CreateWirelessGatewayTask",
      "iotwireless:DeleteWirelessGateway",
      "iotwireless:DeleteWirelessGatewayTask",
      "iotwireless:DisassociateWirelessGatewayFromCertificate",
      "iotwireless:DisassociateWirelessGatewayFromThing",
      "iotwireless:GetWirelessGateway",
      "iotwireless:GetWirelessGatewayCertificate",
      "iotwireless:GetWirelessGatewayFirmwareInformation",
      "iotwireless:GetWirelessGatewayStatistics",
      "iotwireless:GetWirelessGatewayTask",
      "iotwireless:UpdateWirelessGateway"
    ],
    "Destination*": [
      "iotwireless:DeleteDestination",
      "iotwireless:GetDestination",
      "iotwireless:UpdateDestination"
    ],
    "DeviceProfile*": [
      "iotwireless:DeleteDeviceProfile",
      "iotwireless:GetDeviceProfile"
    ],
    "NetworkAnalyzerConfiguration*": [
      "iotwireless:DeleteNetworkAnalyzerConfiguration",
      "iotwireless:GetNetworkAnalyzerConfiguration",
      "iotwireless:StartNetworkAnalyzerStream",
      "iotwireless:UpdateNetworkAnalyzerConfiguration"
    ],
    "ServiceProfile*": [
      "iotwireless:DeleteServiceProfile",
      "iotwireless:GetServiceProfile"
    ],
    "WirelessGatewayTaskDefinition*": [
      "iotwireless:DeleteWirelessGatewayTaskDefinition",
      "iotwireless:GetWirelessGatewayTaskDefinition"
    ],
    "SidewalkAccount*": [
      "iotwireless:DisassociateAwsAccountFromPartnerAccount",
      "iotwireless:GetPartnerAccount",
      "iotwireless:UpdatePartnerAccount"
    ],
    "WirelessDevice": [
      "iotwireless:GetPosition",
      "iotwireless:GetPositionConfiguration",
      "iotwireless:GetResourceLogLevel",
      "iotwireless:GetResourcePosition",
      "iotwireless:PutPositionConfiguration",
      "iotwireless:PutResourceLogLevel",
      "iotwireless:ResetResourceLogLevel",
      "iotwireless:UpdatePosition",
      "iotwireless:UpdateResourcePosition"
    ],
    "SidewalkAccount": [
      "iotwireless:GetResourceEventConfiguration",
      "iotwireless:UpdateResourceEventConfiguration"
    ],
    "Destination": [
      "iotwireless:ListTagsForResource",
      "iotwireless:TagResource",
      "iotwireless:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiotcoreforlorawan.html"
  },
  "iot-device-tester": {
    "?": [
      "iot-device-tester:CheckVersion",
      "iot-device-tester:DownloadTestSuite",
      "iot-device-tester:LatestIdt",
      "iot-device-tester:SendMetrics",
      "iot-device-tester:SupportedVersion"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiotdevicetester.html"
  },
  "iotevents": {
    "alarmModel*": [
      "iotevents:BatchAcknowledgeAlarm",
      "iotevents:BatchDisableAlarm",
      "iotevents:BatchEnableAlarm",
      "iotevents:BatchResetAlarm",
      "iotevents:BatchSnoozeAlarm",
      "iotevents:CreateAlarmModel",
      "iotevents:DeleteAlarmModel",
      "iotevents:DescribeAlarm",
      "iotevents:DescribeAlarmModel",
      "iotevents:ListAlarmModelVersions",
      "iotevents:ListAlarms",
      "iotevents:UpdateAlarmModel"
    ],
    "detectorModel*": [
      "iotevents:BatchDeleteDetector",
      "iotevents:BatchUpdateDetector",
      "iotevents:CreateDetectorModel",
      "iotevents:DeleteDetectorModel",
      "iotevents:DescribeDetector",
      "iotevents:DescribeDetectorModel",
      "iotevents:ListDetectorModelVersions",
      "iotevents:ListDetectors",
      "iotevents:UpdateDetectorModel"
    ],
    "input*": [
      "iotevents:BatchPutMessage",
      "iotevents:CreateInput",
      "iotevents:DeleteInput",
      "iotevents:DescribeInput",
      "iotevents:UpdateInput",
      "iotevents:UpdateInputRouting"
    ],
    "?": [
      "iotevents:DescribeDetectorModelAnalysis",
      "iotevents:DescribeLoggingOptions",
      "iotevents:GetDetectorModelAnalysisResults",
      "iotevents:ListAlarmModels",
      "iotevents:ListDetectorModels",
      "iotevents:ListInputRoutings",
      "iotevents:ListInputs",
      "iotevents:PutLoggingOptions",
      "iotevents:StartDetectorModelAnalysis"
    ],
    "alarmModel": [
      "iotevents:ListTagsForResource",
      "iotevents:TagResource",
      "iotevents:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiotevents.html"
  },
  "iotfleethub": {
    "?": [
      "iotfleethub:CreateApplication",
      "iotfleethub:ListApplications"
    ],
    "application*": [
      "iotfleethub:DeleteApplication",
      "iotfleethub:DescribeApplication",
      "iotfleethub:UpdateApplication"
    ],
    "application": [
      "iotfleethub:ListTagsForResource",
      "iotfleethub:TagResource",
      "iotfleethub:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiotfleethubfordevicemanagement.html"
  },
  "iotfleetwise": {
    "fleet*": [
      "iotfleetwise:AssociateVehicleFleet",
      "iotfleetwise:CreateCampaign",
      "iotfleetwise:DeleteFleet",
      "iotfleetwise:DisassociateVehicleFleet",
      "iotfleetwise:GetFleet",
      "iotfleetwise:ListVehiclesInFleet",
      "iotfleetwise:UpdateFleet"
    ],
    "decodermanifest*": [
      "iotfleetwise:BatchCreateVehicle",
      "iotfleetwise:CreateVehicle",
      "iotfleetwise:DeleteDecoderManifest",
      "iotfleetwise:GetDecoderManifest",
      "iotfleetwise:ImportDecoderManifest",
      "iotfleetwise:ListDecoderManifestNetworkInterfaces",
      "iotfleetwise:ListDecoderManifestSignals",
      "iotfleetwise:UpdateDecoderManifest"
    ],
    "vehicle*": [
      "iotfleetwise:BatchUpdateVehicle",
      "iotfleetwise:DeleteVehicle",
      "iotfleetwise:GetVehicle",
      "iotfleetwise:GetVehicleStatus",
      "iotfleetwise:ListFleetsForVehicle",
      "iotfleetwise:UpdateVehicle"
    ],
    "modelmanifest*": [
      "iotfleetwise:CreateDecoderManifest",
      "iotfleetwise:DeleteModelManifest",
      "iotfleetwise:GetModelManifest",
      "iotfleetwise:ListModelManifestNodes",
      "iotfleetwise:UpdateModelManifest"
    ],
    "signalcatalog*": [
      "iotfleetwise:CreateFleet",
      "iotfleetwise:CreateModelManifest",
      "iotfleetwise:DeleteSignalCatalog",
      "iotfleetwise:GetSignalCatalog",
      "iotfleetwise:ListSignalCatalogNodes",
      "iotfleetwise:UpdateSignalCatalog"
    ],
    "?": [
      "iotfleetwise:CreateSignalCatalog",
      "iotfleetwise:GetLoggingOptions",
      "iotfleetwise:GetRegisterAccountStatus",
      "iotfleetwise:ImportSignalCatalog",
      "iotfleetwise:ListCampaigns",
      "iotfleetwise:ListDecoderManifests",
      "iotfleetwise:ListFleets",
      "iotfleetwise:ListModelManifests",
      "iotfleetwise:ListSignalCatalogs",
      "iotfleetwise:ListVehicles",
      "iotfleetwise:PutLoggingOptions",
      "iotfleetwise:RegisterAccount"
    ],
    "campaign*": [
      "iotfleetwise:DeleteCampaign",
      "iotfleetwise:GetCampaign",
      "iotfleetwise:UpdateCampaign"
    ],
    "campaign": [
      "iotfleetwise:ListTagsForResource",
      "iotfleetwise:TagResource",
      "iotfleetwise:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiotfleetwise.html"
  },
  "greengrass": {
    "?": [
      "greengrass:AssociateServiceRoleToAccount",
      "greengrass:CreateDeployment",
      "greengrass:DisassociateServiceRoleFromAccount",
      "greengrass:GetServiceRoleForAccount",
      "greengrass:ListComponents",
      "greengrass:ListCoreDevices",
      "greengrass:ListDeployments"
    ],
    "coreDevice*": [
      "greengrass:BatchAssociateClientDeviceWithCoreDevice",
      "greengrass:BatchDisassociateClientDeviceFromCoreDevice",
      "greengrass:DeleteCoreDevice",
      "greengrass:GetCoreDevice",
      "greengrass:ListClientDevicesAssociatedWithCoreDevice",
      "greengrass:ListEffectiveDeployments",
      "greengrass:ListInstalledComponents"
    ],
    "deployment*": [
      "greengrass:CancelDeployment",
      "greengrass:DeleteDeployment",
      "greengrass:GetDeployment"
    ],
    "component*": [
      "greengrass:CreateComponentVersion",
      "greengrass:ListComponentVersions"
    ],
    "componentVersion*": [
      "greengrass:DeleteComponent",
      "greengrass:DescribeComponent",
      "greengrass:GetComponent",
      "greengrass:GetComponentVersionArtifact",
      "greengrass:ResolveComponentCandidates"
    ],
    "connectivityInfo*": [
      "greengrass:GetConnectivityInfo",
      "greengrass:UpdateConnectivityInfo"
    ],
    "component": [
      "greengrass:ListTagsForResource",
      "greengrass:TagResource",
      "greengrass:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiotgreengrassv2.html"
  },
  "iotjobsdata": {
    "thing*": [
      "iotjobsdata:DescribeJobExecution",
      "iotjobsdata:GetPendingJobExecutions",
      "iotjobsdata:StartNextPendingJobExecution",
      "iotjobsdata:UpdateJobExecution"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiotjobsdataplane.html"
  },
  "iotroborunner": {
    "SiteResource*": [
      "iotroborunner:CreateDestination",
      "iotroborunner:CreateWorkerFleet",
      "iotroborunner:DeleteSite",
      "iotroborunner:GetSite",
      "iotroborunner:ListWorkerFleets",
      "iotroborunner:ListWorkers",
      "iotroborunner:UpdateSite"
    ],
    "?": [
      "iotroborunner:CreateSite",
      "iotroborunner:ListDestinations",
      "iotroborunner:ListSites"
    ],
    "WorkerFleetResource*": [
      "iotroborunner:CreateWorker",
      "iotroborunner:DeleteWorkerFleet",
      "iotroborunner:GetWorkerFleet",
      "iotroborunner:UpdateWorkerFleet"
    ],
    "DestinationResource*": [
      "iotroborunner:DeleteDestination",
      "iotroborunner:GetDestination",
      "iotroborunner:UpdateDestination"
    ],
    "WorkerResource*": [
      "iotroborunner:DeleteWorker",
      "iotroborunner:GetWorker",
      "iotroborunner:UpdateWorker"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiotroborunner.html"
  },
  "iotsitewise": {
    "asset*": [
      "iotsitewise:AssociateAssets",
      "iotsitewise:AssociateTimeSeriesToAssetProperty",
      "iotsitewise:DeleteAsset",
      "iotsitewise:DescribeAsset",
      "iotsitewise:DescribeAssetProperty",
      "iotsitewise:DisassociateAssets",
      "iotsitewise:DisassociateTimeSeriesFromAssetProperty",
      "iotsitewise:ListAssetProperties",
      "iotsitewise:ListAssetRelationships",
      "iotsitewise:ListAssociatedAssets",
      "iotsitewise:UpdateAsset",
      "iotsitewise:UpdateAssetProperty"
    ],
    "project*": [
      "iotsitewise:BatchAssociateProjectAssets",
      "iotsitewise:BatchDisassociateProjectAssets",
      "iotsitewise:CreateDashboard",
      "iotsitewise:DeleteProject",
      "iotsitewise:DescribeProject",
      "iotsitewise:ListDashboards",
      "iotsitewise:ListProjectAssets",
      "iotsitewise:UpdateProject"
    ],
    "asset": [
      "iotsitewise:BatchGetAssetPropertyAggregates",
      "iotsitewise:BatchGetAssetPropertyValue",
      "iotsitewise:BatchGetAssetPropertyValueHistory",
      "iotsitewise:BatchPutAssetPropertyValue",
      "iotsitewise:DeleteTimeSeries",
      "iotsitewise:DescribeTimeSeries",
      "iotsitewise:GetAssetPropertyAggregates",
      "iotsitewise:GetAssetPropertyValue",
      "iotsitewise:GetAssetPropertyValueHistory",
      "iotsitewise:GetInterpolatedAssetPropertyValues",
      "iotsitewise:ListTimeSeries"
    ],
    "portal": [
      "iotsitewise:CreateAccessPolicy",
      "iotsitewise:ListAccessPolicies"
    ],
    "asset-model*": [
      "iotsitewise:CreateAsset",
      "iotsitewise:DeleteAssetModel",
      "iotsitewise:DescribeAssetModel",
      "iotsitewise:ListAssetModelProperties",
      "iotsitewise:UpdateAssetModel"
    ],
    "?": [
      "iotsitewise:CreateAssetModel",
      "iotsitewise:CreateBulkImportJob",
      "iotsitewise:CreateGateway",
      "iotsitewise:CreatePortal",
      "iotsitewise:DescribeBulkImportJob",
      "iotsitewise:DescribeDefaultEncryptionConfiguration",
      "iotsitewise:DescribeLoggingOptions",
      "iotsitewise:DescribeStorageConfiguration",
      "iotsitewise:ListAssetModels",
      "iotsitewise:ListBulkImportJobs",
      "iotsitewise:ListGateways",
      "iotsitewise:ListPortals",
      "iotsitewise:PutDefaultEncryptionConfiguration",
      "iotsitewise:PutLoggingOptions",
      "iotsitewise:PutStorageConfiguration"
    ],
    "portal*": [
      "iotsitewise:CreateProject",
      "iotsitewise:DeletePortal",
      "iotsitewise:DescribePortal",
      "iotsitewise:ListProjects",
      "iotsitewise:UpdatePortal"
    ],
    "access-policy*": [
      "iotsitewise:DeleteAccessPolicy",
      "iotsitewise:DescribeAccessPolicy",
      "iotsitewise:UpdateAccessPolicy"
    ],
    "dashboard*": [
      "iotsitewise:DeleteDashboard",
      "iotsitewise:DescribeDashboard",
      "iotsitewise:UpdateDashboard"
    ],
    "gateway*": [
      "iotsitewise:DeleteGateway",
      "iotsitewise:DescribeGateway",
      "iotsitewise:DescribeGatewayCapabilityConfiguration",
      "iotsitewise:UpdateGateway",
      "iotsitewise:UpdateGatewayCapabilityConfiguration"
    ],
    "asset-model": [
      "iotsitewise:ListAssets"
    ],
    "access-policy": [
      "iotsitewise:ListTagsForResource",
      "iotsitewise:TagResource",
      "iotsitewise:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiotsitewise.html"
  },
  "iottwinmaker": {
    "workspace*": [
      "iottwinmaker:BatchPutPropertyValues",
      "iottwinmaker:CreateComponentType",
      "iottwinmaker:CreateEntity",
      "iottwinmaker:CreateScene",
      "iottwinmaker:CreateSyncJob",
      "iottwinmaker:DeleteWorkspace",
      "iottwinmaker:ExecuteQuery",
      "iottwinmaker:GetPropertyValue",
      "iottwinmaker:GetPropertyValueHistory",
      "iottwinmaker:GetWorkspace",
      "iottwinmaker:ListComponentTypes",
      "iottwinmaker:ListEntities",
      "iottwinmaker:ListScenes",
      "iottwinmaker:ListSyncJobs",
      "iottwinmaker:UpdateWorkspace"
    ],
    "?": [
      "iottwinmaker:CreateWorkspace",
      "iottwinmaker:GetPricingPlan",
      "iottwinmaker:ListWorkspaces",
      "iottwinmaker:UpdatePricingPlan"
    ],
    "componentType*": [
      "iottwinmaker:DeleteComponentType",
      "iottwinmaker:GetComponentType",
      "iottwinmaker:UpdateComponentType"
    ],
    "entity*": [
      "iottwinmaker:DeleteEntity",
      "iottwinmaker:GetEntity",
      "iottwinmaker:UpdateEntity"
    ],
    "scene*": [
      "iottwinmaker:DeleteScene",
      "iottwinmaker:GetScene",
      "iottwinmaker:UpdateScene"
    ],
    "syncJob*": [
      "iottwinmaker:DeleteSyncJob",
      "iottwinmaker:GetSyncJob",
      "iottwinmaker:ListSyncResources"
    ],
    "componentType": [
      "iottwinmaker:ListTagsForResource",
      "iottwinmaker:TagResource",
      "iottwinmaker:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiottwinmaker.html"
  },
  "iq": {
    "call*": [
      "iq:AcceptCall",
      "iq:DeclineCall",
      "iq:EndCall",
      "iq:GetCall"
    ],
    "paymentRequest*": [
      "iq:ApprovePaymentRequest",
      "iq:GetPaymentRequest",
      "iq:RejectPaymentRequest",
      "iq:WithdrawPaymentRequest"
    ],
    "proposal*": [
      "iq:ApproveProposal",
      "iq:CompleteProposal",
      "iq:GetProposal",
      "iq:ListProposals",
      "iq:RejectProposal",
      "iq:WithdrawProposal"
    ],
    "conversation*": [
      "iq:ArchiveConversation",
      "iq:GetChatInfo",
      "iq:GetChatMessages",
      "iq:GetConversation",
      "iq:ListConversations",
      "iq:MarkChatMessageRead",
      "iq:SendCompanyChatMessage",
      "iq:SendIndividualChatMessage",
      "iq:UnarchiveConversation",
      "iq:UpdateConversationMembers"
    ],
    "?": [
      "iq:CreateConversation",
      "iq:CreateExpert",
      "iq:CreateListing",
      "iq:CreateMilestoneProposal",
      "iq:CreatePaymentRequest",
      "iq:CreateProject",
      "iq:CreateRequest",
      "iq:CreateScheduledProposal",
      "iq:CreateSeller",
      "iq:CreateUpfrontProposal",
      "iq:InitiateCall",
      "iq:UploadAttachment"
    ],
    "attachment*": [
      "iq:DeleteAttachment"
    ],
    "buyer*": [
      "iq:GetBuyer"
    ],
    "token*": [
      "iq:GetChatToken"
    ],
    "company*": [
      "iq:GetCompanyProfile",
      "iq:UpdateCompanyProfile"
    ],
    "expert*": [
      "iq:GetExpert",
      "iq:UpdateExpert"
    ],
    "listing*": [
      "iq:GetListing",
      "iq:ListListings",
      "iq:UpdateListing"
    ],
    "seller*": [
      "iq:GetMarketplaceSeller",
      "iq:GetReview",
      "iq:ListReviews",
      "iq:WriteReview"
    ],
    "request*": [
      "iq:HideRequest",
      "iq:ListRequests",
      "iq:UpdateRequest"
    ],
    "paymentRequest": [
      "iq:ListPaymentRequests"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiq.html"
  },
  "iq-permission": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiqpermissions.html"
  },
  "kendra": {
    "experience*": [
      "kendra:AssociateEntitiesToExperience",
      "kendra:AssociatePersonasToEntities",
      "kendra:DeleteExperience",
      "kendra:DescribeExperience",
      "kendra:DisassociateEntitiesFromExperience",
      "kendra:DisassociatePersonasFromEntities",
      "kendra:ListEntityPersonas",
      "kendra:ListExperienceEntities"
    ],
    "index*": [
      "kendra:BatchDeleteDocument",
      "kendra:BatchGetDocumentStatus",
      "kendra:BatchPutDocument",
      "kendra:ClearQuerySuggestions",
      "kendra:CreateDataSource",
      "kendra:CreateExperience",
      "kendra:CreateFaq",
      "kendra:CreateQuerySuggestionsBlockList",
      "kendra:CreateThesaurus",
      "kendra:DeleteIndex",
      "kendra:DeletePrincipalMapping",
      "kendra:DeleteQuerySuggestionsBlockList",
      "kendra:DeleteThesaurus",
      "kendra:DescribeIndex",
      "kendra:DescribePrincipalMapping",
      "kendra:DescribeQuerySuggestionsBlockList",
      "kendra:DescribeQuerySuggestionsConfig",
      "kendra:DescribeThesaurus",
      "kendra:GetQuerySuggestions",
      "kendra:GetSnapshots",
      "kendra:ListDataSources",
      "kendra:ListExperiences",
      "kendra:ListFaqs",
      "kendra:ListGroupsOlderThanOrderingId",
      "kendra:ListQuerySuggestionsBlockLists",
      "kendra:ListThesauri",
      "kendra:PutPrincipalMapping",
      "kendra:Query",
      "kendra:SubmitFeedback",
      "kendra:UpdateExperience",
      "kendra:UpdateIndex",
      "kendra:UpdateQuerySuggestionsBlockList",
      "kendra:UpdateQuerySuggestionsConfig",
      "kendra:UpdateThesaurus"
    ],
    "?": [
      "kendra:CreateIndex",
      "kendra:ListIndices"
    ],
    "data-source*": [
      "kendra:DeleteDataSource",
      "kendra:DescribeDataSource",
      "kendra:ListDataSourceSyncJobs",
      "kendra:StartDataSourceSyncJob",
      "kendra:StopDataSourceSyncJob",
      "kendra:UpdateDataSource"
    ],
    "faq*": [
      "kendra:DeleteFaq",
      "kendra:DescribeFaq"
    ],
    "data-source": [
      "kendra:ListTagsForResource",
      "kendra:TagResource",
      "kendra:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonkendra.html"
  },
  "kendra-ranking": {
    "?": [
      "kendra-ranking:CreateRescoreExecutionPlan",
      "kendra-ranking:ListRescoreExecutionPlans"
    ],
    "rescore-execution-plan*": [
      "kendra-ranking:DeleteRescoreExecutionPlan",
      "kendra-ranking:DescribeRescoreExecutionPlan",
      "kendra-ranking:Rescore",
      "kendra-ranking:UpdateRescoreExecutionPlan"
    ],
    "rescore-execution-plan": [
      "kendra-ranking:ListTagsForResource",
      "kendra-ranking:TagResource",
      "kendra-ranking:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonkendraintelligentranking.html"
  },
  "kms": {
    "key*": [
      "kms:CancelKeyDeletion",
      "kms:CreateGrant",
      "kms:Decrypt",
      "kms:DeleteImportedKeyMaterial",
      "kms:DescribeKey",
      "kms:DisableKey",
      "kms:DisableKeyRotation",
      "kms:EnableKey",
      "kms:EnableKeyRotation",
      "kms:Encrypt",
      "kms:GenerateDataKey",
      "kms:GenerateDataKeyPair",
      "kms:GenerateDataKeyPairWithoutPlaintext",
      "kms:GenerateDataKeyWithoutPlaintext",
      "kms:GenerateMac",
      "kms:GetKeyPolicy",
      "kms:GetKeyRotationStatus",
      "kms:GetParametersForImport",
      "kms:GetPublicKey",
      "kms:ImportKeyMaterial",
      "kms:ListGrants",
      "kms:ListKeyPolicies",
      "kms:ListResourceTags",
      "kms:ListRetirableGrants",
      "kms:PutKeyPolicy",
      "kms:ReEncryptFrom",
      "kms:ReEncryptTo",
      "kms:ReplicateKey",
      "kms:RetireGrant",
      "kms:RevokeGrant",
      "kms:ScheduleKeyDeletion",
      "kms:Sign",
      "kms:TagResource",
      "kms:UntagResource",
      "kms:UpdateKeyDescription",
      "kms:UpdatePrimaryRegion",
      "kms:Verify",
      "kms:VerifyMac"
    ],
    "?": [
      "kms:ConnectCustomKeyStore",
      "kms:CreateCustomKeyStore",
      "kms:CreateKey",
      "kms:DeleteCustomKeyStore",
      "kms:DescribeCustomKeyStores",
      "kms:DisconnectCustomKeyStore",
      "kms:GenerateRandom",
      "kms:ListAliases",
      "kms:ListKeys",
      "kms:UpdateCustomKeyStore"
    ],
    "alias*": [
      "kms:CreateAlias",
      "kms:DeleteAlias",
      "kms:UpdateAlias"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awskeymanagementservice.html"
  },
  "cassandra": {
    "keyspace": [
      "cassandra:Alter",
      "cassandra:Create",
      "cassandra:Drop",
      "cassandra:TagResource",
      "cassandra:UntagResource"
    ],
    "table*": [
      "cassandra:Modify",
      "cassandra:Restore",
      "cassandra:Select",
      "cassandra:UpdatePartitioner"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonkeyspacesforapachecassandra.html"
  },
  "kinesis": {
    "stream*": [
      "kinesis:AddTagsToStream",
      "kinesis:CreateStream",
      "kinesis:DecreaseStreamRetentionPeriod",
      "kinesis:DeleteStream",
      "kinesis:DescribeStream",
      "kinesis:DescribeStreamSummary",
      "kinesis:GetRecords",
      "kinesis:GetShardIterator",
      "kinesis:IncreaseStreamRetentionPeriod",
      "kinesis:ListStreamConsumers",
      "kinesis:ListTagsForStream",
      "kinesis:MergeShards",
      "kinesis:PutRecord",
      "kinesis:PutRecords",
      "kinesis:RegisterStreamConsumer",
      "kinesis:RemoveTagsFromStream",
      "kinesis:SplitShard"
    ],
    "consumer*": [
      "kinesis:DeregisterStreamConsumer",
      "kinesis:DescribeStreamConsumer",
      "kinesis:SubscribeToShard"
    ],
    "?": [
      "kinesis:DescribeLimits",
      "kinesis:DisableEnhancedMonitoring",
      "kinesis:EnableEnhancedMonitoring",
      "kinesis:ListShards",
      "kinesis:ListStreams",
      "kinesis:UpdateShardCount",
      "kinesis:UpdateStreamMode"
    ],
    "kmsKey*": [
      "kinesis:StartStreamEncryption",
      "kinesis:StopStreamEncryption"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonkinesis.html"
  },
  "kinesisanalytics": {
    "application*": [
      "kinesisanalytics:AddApplicationCloudWatchLoggingOption",
      "kinesisanalytics:AddApplicationInput",
      "kinesisanalytics:AddApplicationInputProcessingConfiguration",
      "kinesisanalytics:AddApplicationOutput",
      "kinesisanalytics:AddApplicationReferenceDataSource",
      "kinesisanalytics:AddApplicationVpcConfiguration",
      "kinesisanalytics:CreateApplicationPresignedUrl",
      "kinesisanalytics:CreateApplicationSnapshot",
      "kinesisanalytics:DeleteApplication",
      "kinesisanalytics:DeleteApplicationCloudWatchLoggingOption",
      "kinesisanalytics:DeleteApplicationInputProcessingConfiguration",
      "kinesisanalytics:DeleteApplicationOutput",
      "kinesisanalytics:DeleteApplicationReferenceDataSource",
      "kinesisanalytics:DeleteApplicationSnapshot",
      "kinesisanalytics:DeleteApplicationVpcConfiguration",
      "kinesisanalytics:DescribeApplication",
      "kinesisanalytics:DescribeApplicationSnapshot",
      "kinesisanalytics:DescribeApplicationVersion",
      "kinesisanalytics:ListApplicationSnapshots",
      "kinesisanalytics:ListApplicationVersions",
      "kinesisanalytics:ListTagsForResource",
      "kinesisanalytics:RollbackApplication",
      "kinesisanalytics:StartApplication",
      "kinesisanalytics:StopApplication",
      "kinesisanalytics:TagResource",
      "kinesisanalytics:UntagResource",
      "kinesisanalytics:UpdateApplication",
      "kinesisanalytics:UpdateApplicationMaintenanceConfiguration"
    ],
    "?": [
      "kinesisanalytics:CreateApplication",
      "kinesisanalytics:DiscoverInputSchema",
      "kinesisanalytics:ListApplications"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonkinesisanalyticsv2.html"
  },
  "firehose": {
    "deliverystream*": [
      "firehose:CreateDeliveryStream",
      "firehose:DeleteDeliveryStream",
      "firehose:DescribeDeliveryStream",
      "firehose:ListTagsForDeliveryStream",
      "firehose:PutRecord",
      "firehose:PutRecordBatch",
      "firehose:StartDeliveryStreamEncryption",
      "firehose:StopDeliveryStreamEncryption",
      "firehose:TagDeliveryStream",
      "firehose:UntagDeliveryStream",
      "firehose:UpdateDestination"
    ],
    "?": [
      "firehose:ListDeliveryStreams"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonkinesisfirehose.html"
  },
  "kinesisvideo": {
    "channel*": [
      "kinesisvideo:ConnectAsMaster",
      "kinesisvideo:ConnectAsViewer",
      "kinesisvideo:CreateSignalingChannel",
      "kinesisvideo:DeleteSignalingChannel",
      "kinesisvideo:DescribeMediaStorageConfiguration",
      "kinesisvideo:DescribeSignalingChannel",
      "kinesisvideo:GetIceServerConfig",
      "kinesisvideo:GetSignalingChannelEndpoint",
      "kinesisvideo:JoinStorageSession",
      "kinesisvideo:SendAlexaOfferToMaster",
      "kinesisvideo:UpdateMediaStorageConfiguration",
      "kinesisvideo:UpdateSignalingChannel"
    ],
    "stream*": [
      "kinesisvideo:CreateStream",
      "kinesisvideo:DeleteStream",
      "kinesisvideo:DescribeEdgeConfiguration",
      "kinesisvideo:DescribeImageGenerationConfiguration",
      "kinesisvideo:DescribeMappedResourceConfiguration",
      "kinesisvideo:DescribeNotificationConfiguration",
      "kinesisvideo:DescribeStream",
      "kinesisvideo:GetClip",
      "kinesisvideo:GetDASHStreamingSessionURL",
      "kinesisvideo:GetDataEndpoint",
      "kinesisvideo:GetHLSStreamingSessionURL",
      "kinesisvideo:GetImages",
      "kinesisvideo:GetMedia",
      "kinesisvideo:GetMediaForFragmentList",
      "kinesisvideo:ListFragments",
      "kinesisvideo:ListTagsForStream",
      "kinesisvideo:PutMedia",
      "kinesisvideo:StartEdgeConfigurationUpdate",
      "kinesisvideo:TagStream",
      "kinesisvideo:UntagStream",
      "kinesisvideo:UpdateDataRetention",
      "kinesisvideo:UpdateImageGenerationConfiguration",
      "kinesisvideo:UpdateNotificationConfiguration",
      "kinesisvideo:UpdateStream"
    ],
    "?": [
      "kinesisvideo:ListSignalingChannels",
      "kinesisvideo:ListStreams"
    ],
    "channel": [
      "kinesisvideo:ListTagsForResource",
      "kinesisvideo:TagResource",
      "kinesisvideo:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonkinesisvideostreams.html"
  },
  "lakeformation": {
    "?": [
      "lakeformation:AddLFTagsToResource",
      "lakeformation:BatchGrantPermissions",
      "lakeformation:BatchRevokePermissions",
      "lakeformation:CancelTransaction",
      "lakeformation:CommitTransaction",
      "lakeformation:CreateDataCellsFilter",
      "lakeformation:CreateLFTag",
      "lakeformation:DeleteDataCellsFilter",
      "lakeformation:DeleteLFTag",
      "lakeformation:DeleteObjectsOnCancel",
      "lakeformation:DeregisterResource",
      "lakeformation:DescribeResource",
      "lakeformation:DescribeTransaction",
      "lakeformation:ExtendTransaction",
      "lakeformation:GetDataAccess",
      "lakeformation:GetDataCellsFilter",
      "lakeformation:GetDataLakeSettings",
      "lakeformation:GetEffectivePermissionsForPath",
      "lakeformation:GetLFTag",
      "lakeformation:GetQueryState",
      "lakeformation:GetQueryStatistics",
      "lakeformation:GetResourceLFTags",
      "lakeformation:GetTableObjects",
      "lakeformation:GetWorkUnitResults",
      "lakeformation:GetWorkUnits",
      "lakeformation:GrantPermissions",
      "lakeformation:ListDataCellsFilter",
      "lakeformation:ListLFTags",
      "lakeformation:ListPermissions",
      "lakeformation:ListResources",
      "lakeformation:ListTableStorageOptimizers",
      "lakeformation:ListTransactions",
      "lakeformation:PutDataLakeSettings",
      "lakeformation:RegisterResource",
      "lakeformation:RemoveLFTagsFromResource",
      "lakeformation:RevokePermissions",
      "lakeformation:SearchDatabasesByLFTags",
      "lakeformation:SearchTablesByLFTags",
      "lakeformation:StartQueryPlanning",
      "lakeformation:StartTransaction",
      "lakeformation:UpdateDataCellsFilter",
      "lakeformation:UpdateLFTag",
      "lakeformation:UpdateResource",
      "lakeformation:UpdateTableObjects",
      "lakeformation:UpdateTableStorageOptimizer"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awslakeformation.html"
  },
  "lambda": {
    "layerVersion*": [
      "lambda:AddLayerVersionPermission",
      "lambda:DeleteLayerVersion",
      "lambda:GetLayerVersion",
      "lambda:GetLayerVersionPolicy",
      "lambda:RemoveLayerVersionPermission"
    ],
    "function*": [
      "lambda:AddPermission",
      "lambda:CreateAlias",
      "lambda:CreateFunction",
      "lambda:CreateFunctionUrlConfig",
      "lambda:DeleteAlias",
      "lambda:DeleteFunction",
      "lambda:DeleteFunctionCodeSigningConfig",
      "lambda:DeleteFunctionConcurrency",
      "lambda:DeleteFunctionEventInvokeConfig",
      "lambda:DeleteFunctionUrlConfig",
      "lambda:GetAlias",
      "lambda:GetFunction",
      "lambda:GetFunctionCodeSigningConfig",
      "lambda:GetFunctionConcurrency",
      "lambda:GetFunctionConfiguration",
      "lambda:GetFunctionEventInvokeConfig",
      "lambda:GetFunctionUrlConfig",
      "lambda:GetPolicy",
      "lambda:GetRuntimeManagementConfig",
      "lambda:InvokeAsync",
      "lambda:InvokeFunction",
      "lambda:ListAliases",
      "lambda:ListFunctionEventInvokeConfigs",
      "lambda:ListFunctionUrlConfigs",
      "lambda:ListProvisionedConcurrencyConfigs",
      "lambda:ListTags",
      "lambda:ListVersionsByFunction",
      "lambda:PublishVersion",
      "lambda:PutFunctionConcurrency",
      "lambda:PutFunctionEventInvokeConfig",
      "lambda:PutRuntimeManagementConfig",
      "lambda:RemovePermission",
      "lambda:TagResource",
      "lambda:UntagResource",
      "lambda:UpdateAlias",
      "lambda:UpdateFunctionCode",
      "lambda:UpdateFunctionConfiguration",
      "lambda:UpdateFunctionEventInvokeConfig",
      "lambda:UpdateFunctionUrlConfig"
    ],
    "?": [
      "lambda:CreateCodeSigningConfig",
      "lambda:CreateEventSourceMapping",
      "lambda:GetAccountSettings",
      "lambda:ListCodeSigningConfigs",
      "lambda:ListEventSourceMappings",
      "lambda:ListFunctions",
      "lambda:ListLayerVersions",
      "lambda:ListLayers"
    ],
    "code signing config*": [
      "lambda:DeleteCodeSigningConfig",
      "lambda:GetCodeSigningConfig",
      "lambda:ListFunctionsByCodeSigningConfig",
      "lambda:PutFunctionCodeSigningConfig",
      "lambda:UpdateCodeSigningConfig",
      "lambda:UpdateFunctionCodeSigningConfig"
    ],
    "eventSourceMapping*": [
      "lambda:DeleteEventSourceMapping",
      "lambda:GetEventSourceMapping",
      "lambda:UpdateEventSourceMapping"
    ],
    "function alias": [
      "lambda:DeleteProvisionedConcurrencyConfig",
      "lambda:GetProvisionedConcurrencyConfig",
      "lambda:PutProvisionedConcurrencyConfig"
    ],
    "layer*": [
      "lambda:PublishLayerVersion"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awslambda.html"
  },
  "launchwizard": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awslaunchwizard.html"
  },
  "lex": {
    "bot*": [
      "lex:BatchCreateCustomVocabularyItem",
      "lex:BatchDeleteCustomVocabularyItem",
      "lex:BatchUpdateCustomVocabularyItem",
      "lex:BuildBotLocale",
      "lex:CreateBot",
      "lex:CreateBotLocale",
      "lex:CreateBotVersion",
      "lex:CreateExport",
      "lex:CreateIntent",
      "lex:CreateSlot",
      "lex:CreateSlotType",
      "lex:DeleteBot",
      "lex:DeleteBotLocale",
      "lex:DeleteBotVersion",
      "lex:DeleteCustomVocabulary",
      "lex:DeleteExport",
      "lex:DeleteImport",
      "lex:DeleteIntent",
      "lex:DeleteSlot",
      "lex:DeleteSlotType",
      "lex:DeleteUtterances",
      "lex:DescribeBot",
      "lex:DescribeBotLocale",
      "lex:DescribeBotRecommendation",
      "lex:DescribeBotVersion",
      "lex:DescribeCustomVocabularyMetadata",
      "lex:DescribeExport",
      "lex:DescribeImport",
      "lex:DescribeIntent",
      "lex:DescribeSlot",
      "lex:DescribeSlotType",
      "lex:ListAggregatedUtterances",
      "lex:ListBotAliases",
      "lex:ListBotLocales",
      "lex:ListBotRecommendations",
      "lex:ListBotVersions",
      "lex:ListCustomVocabularyItems",
      "lex:ListIntents",
      "lex:ListRecommendedIntents",
      "lex:ListSlotTypes",
      "lex:ListSlots",
      "lex:SearchAssociatedTranscripts",
      "lex:StartBotRecommendation",
      "lex:StopBotRecommendation",
      "lex:UpdateBot",
      "lex:UpdateBotLocale",
      "lex:UpdateBotRecommendation",
      "lex:UpdateExport",
      "lex:UpdateIntent",
      "lex:UpdateSlot",
      "lex:UpdateSlotType"
    ],
    "bot alias*": [
      "lex:CreateBotAlias",
      "lex:DeleteBotAlias",
      "lex:DeleteSession",
      "lex:DescribeBotAlias",
      "lex:GetSession",
      "lex:PutSession",
      "lex:RecognizeText",
      "lex:RecognizeUtterance",
      "lex:StartConversation",
      "lex:UpdateBotAlias"
    ],
    "bot": [
      "lex:CreateResourcePolicy",
      "lex:DeleteResourcePolicy",
      "lex:DescribeResourcePolicy",
      "lex:ListTagsForResource",
      "lex:StartImport",
      "lex:TagResource",
      "lex:UntagResource",
      "lex:UpdateResourcePolicy"
    ],
    "?": [
      "lex:CreateUploadUrl",
      "lex:ListBots",
      "lex:ListBuiltInIntents",
      "lex:ListBuiltInSlotTypes",
      "lex:ListExports",
      "lex:ListImports"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonlexv2.html"
  },
  "license-manager": {
    "grant*": [
      "license-manager:AcceptGrant",
      "license-manager:CreateGrantVersion",
      "license-manager:DeleteGrant",
      "license-manager:GetGrant",
      "license-manager:RejectGrant"
    ],
    "?": [
      "license-manager:CheckInLicense",
      "license-manager:CheckoutLicense",
      "license-manager:CreateLicense",
      "license-manager:CreateLicenseConfiguration",
      "license-manager:CreateLicenseConversionTaskForResource",
      "license-manager:CreateLicenseManagerReportGenerator",
      "license-manager:DeleteToken",
      "license-manager:ExtendLicenseConsumption",
      "license-manager:GetAccessToken",
      "license-manager:GetLicenseConversionTask",
      "license-manager:GetServiceSettings",
      "license-manager:ListDistributedGrants",
      "license-manager:ListLicenseConfigurations",
      "license-manager:ListLicenseConversionTasks",
      "license-manager:ListLicenseSpecificationsForResource",
      "license-manager:ListLicenses",
      "license-manager:ListReceivedGrants",
      "license-manager:ListReceivedGrantsForOrganization",
      "license-manager:ListReceivedLicenses",
      "license-manager:ListReceivedLicensesForOrganization",
      "license-manager:ListResourceInventory",
      "license-manager:ListTokens",
      "license-manager:UpdateServiceSettings"
    ],
    "license*": [
      "license-manager:CheckoutBorrowLicense",
      "license-manager:CreateGrant",
      "license-manager:CreateLicenseVersion",
      "license-manager:CreateToken",
      "license-manager:DeleteLicense",
      "license-manager:GetLicense",
      "license-manager:GetLicenseUsage",
      "license-manager:ListLicenseVersions"
    ],
    "license-configuration*": [
      "license-manager:DeleteLicenseConfiguration",
      "license-manager:GetLicenseConfiguration",
      "license-manager:ListAssociationsForLicenseConfiguration",
      "license-manager:ListFailuresForLicenseConfigurationOperations",
      "license-manager:ListTagsForResource",
      "license-manager:ListUsageForLicenseConfiguration",
      "license-manager:TagResource",
      "license-manager:UntagResource",
      "license-manager:UpdateLicenseConfiguration",
      "license-manager:UpdateLicenseSpecificationsForResource"
    ],
    "report-generator*": [
      "license-manager:DeleteLicenseManagerReportGenerator",
      "license-manager:GetLicenseManagerReportGenerator",
      "license-manager:UpdateLicenseManagerReportGenerator"
    ],
    "license-configuration": [
      "license-manager:ListLicenseManagerReportGenerators"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awslicensemanager.html"
  },
  "license-manager-linux-subscriptions": {
    "?": [
      "license-manager-linux-subscriptions:GetServiceSettings",
      "license-manager-linux-subscriptions:ListLinuxSubscriptionInstances",
      "license-manager-linux-subscriptions:ListLinuxSubscriptions",
      "license-manager-linux-subscriptions:UpdateServiceSettings"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awslicensemanagerlinuxsubscriptionsmanager.html"
  },
  "license-manager-user-subscriptions": {
    "?": [
      "license-manager-user-subscriptions:AssociateUser",
      "license-manager-user-subscriptions:DeregisterIdentityProvider",
      "license-manager-user-subscriptions:DisassociateUser",
      "license-manager-user-subscriptions:ListIdentityProviders",
      "license-manager-user-subscriptions:ListInstances",
      "license-manager-user-subscriptions:ListProductSubscriptions",
      "license-manager-user-subscriptions:ListUserAssociations",
      "license-manager-user-subscriptions:RegisterIdentityProvider",
      "license-manager-user-subscriptions:StartProductSubscription",
      "license-manager-user-subscriptions:StopProductSubscription",
      "license-manager-user-subscriptions:UpdateIdentityProviderSettings"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awslicensemanagerusersubscriptions.html"
  },
  "lightsail": {
    "?": [
      "lightsail:AllocateStaticIp",
      "lightsail:CopySnapshot",
      "lightsail:CreateBucket",
      "lightsail:CreateCertificate",
      "lightsail:CreateCloudFormationStack",
      "lightsail:CreateContactMethod",
      "lightsail:CreateContainerService",
      "lightsail:CreateContainerServiceRegistryLogin",
      "lightsail:CreateDisk",
      "lightsail:CreateDistribution",
      "lightsail:CreateDomain",
      "lightsail:CreateInstances",
      "lightsail:CreateKeyPair",
      "lightsail:CreateLoadBalancer",
      "lightsail:CreateRelationalDatabase",
      "lightsail:CreateRelationalDatabaseSnapshot",
      "lightsail:DeleteAutoSnapshot",
      "lightsail:DeleteContactMethod",
      "lightsail:DisableAddOn",
      "lightsail:DownloadDefaultKeyPair",
      "lightsail:EnableAddOn",
      "lightsail:GetActiveNames",
      "lightsail:GetAlarms",
      "lightsail:GetAutoSnapshots",
      "lightsail:GetBlueprints",
      "lightsail:GetBucketAccessKeys",
      "lightsail:GetBucketBundles",
      "lightsail:GetBucketMetricData",
      "lightsail:GetBuckets",
      "lightsail:GetBundles",
      "lightsail:GetCertificates",
      "lightsail:GetCloudFormationStackRecords",
      "lightsail:GetContactMethods",
      "lightsail:GetContainerAPIMetadata",
      "lightsail:GetContainerImages",
      "lightsail:GetContainerLog",
      "lightsail:GetContainerServiceDeployments",
      "lightsail:GetContainerServiceMetricData",
      "lightsail:GetContainerServicePowers",
      "lightsail:GetContainerServices",
      "lightsail:GetDisk",
      "lightsail:GetDiskSnapshot",
      "lightsail:GetDiskSnapshots",
      "lightsail:GetDisks",
      "lightsail:GetDistributionBundles",
      "lightsail:GetDistributionLatestCacheReset",
      "lightsail:GetDistributionMetricData",
      "lightsail:GetDistributions",
      "lightsail:GetDomain",
      "lightsail:GetDomains",
      "lightsail:GetExportSnapshotRecords",
      "lightsail:GetInstance",
      "lightsail:GetInstanceMetricData",
      "lightsail:GetInstancePortStates",
      "lightsail:GetInstanceSnapshot",
      "lightsail:GetInstanceSnapshots",
      "lightsail:GetInstanceState",
      "lightsail:GetInstances",
      "lightsail:GetKeyPair",
      "lightsail:GetKeyPairs",
      "lightsail:GetLoadBalancer",
      "lightsail:GetLoadBalancerMetricData",
      "lightsail:GetLoadBalancerTlsCertificates",
      "lightsail:GetLoadBalancerTlsPolicies",
      "lightsail:GetLoadBalancers",
      "lightsail:GetOperation",
      "lightsail:GetOperations",
      "lightsail:GetOperationsForResource",
      "lightsail:GetRegions",
      "lightsail:GetRelationalDatabase",
      "lightsail:GetRelationalDatabaseBlueprints",
      "lightsail:GetRelationalDatabaseBundles",
      "lightsail:GetRelationalDatabaseEvents",
      "lightsail:GetRelationalDatabaseLogEvents",
      "lightsail:GetRelationalDatabaseLogStreams",
      "lightsail:GetRelationalDatabaseMetricData",
      "lightsail:GetRelationalDatabaseParameters",
      "lightsail:GetRelationalDatabaseSnapshot",
      "lightsail:GetRelationalDatabaseSnapshots",
      "lightsail:GetRelationalDatabases",
      "lightsail:GetStaticIp",
      "lightsail:GetStaticIps",
      "lightsail:ImportKeyPair",
      "lightsail:IsVpcPeered",
      "lightsail:PeerVpc",
      "lightsail:SendContactMethodVerification",
      "lightsail:UnpeerVpc"
    ],
    "Certificate*": [
      "lightsail:AttachCertificateToDistribution",
      "lightsail:DeleteCertificate"
    ],
    "Disk*": [
      "lightsail:AttachDisk",
      "lightsail:DeleteDisk",
      "lightsail:DetachDisk"
    ],
    "LoadBalancer*": [
      "lightsail:AttachInstancesToLoadBalancer",
      "lightsail:AttachLoadBalancerTlsCertificate",
      "lightsail:CreateLoadBalancerTlsCertificate",
      "lightsail:DeleteLoadBalancer",
      "lightsail:DeleteLoadBalancerTlsCertificate",
      "lightsail:DetachInstancesFromLoadBalancer",
      "lightsail:UpdateLoadBalancerAttribute"
    ],
    "Instance*": [
      "lightsail:AttachStaticIp",
      "lightsail:CloseInstancePublicPorts",
      "lightsail:CreateGUISessionAccessDetails",
      "lightsail:CreateInstanceSnapshot",
      "lightsail:DeleteInstance",
      "lightsail:DeleteKnownHostKeys",
      "lightsail:GetInstanceAccessDetails",
      "lightsail:OpenInstancePublicPorts",
      "lightsail:PutInstancePublicPorts",
      "lightsail:RebootInstance",
      "lightsail:StartGUISession",
      "lightsail:StartInstance",
      "lightsail:StopGUISession",
      "lightsail:StopInstance",
      "lightsail:UpdateInstanceMetadataOptions"
    ],
    "Bucket*": [
      "lightsail:CreateBucketAccessKey",
      "lightsail:DeleteBucket",
      "lightsail:DeleteBucketAccessKey",
      "lightsail:SetResourceAccessForBucket",
      "lightsail:UpdateBucket",
      "lightsail:UpdateBucketBundle"
    ],
    "ContainerService*": [
      "lightsail:CreateContainerServiceDeployment",
      "lightsail:DeleteContainerImage",
      "lightsail:DeleteContainerService",
      "lightsail:RegisterContainerImage",
      "lightsail:UpdateContainerService"
    ],
    "DiskSnapshot*": [
      "lightsail:CreateDiskFromSnapshot",
      "lightsail:DeleteDiskSnapshot"
    ],
    "Disk": [
      "lightsail:CreateDiskSnapshot",
      "lightsail:GetCostEstimate"
    ],
    "Domain*": [
      "lightsail:CreateDomainEntry",
      "lightsail:DeleteDomain",
      "lightsail:DeleteDomainEntry",
      "lightsail:UpdateDomainEntry"
    ],
    "InstanceSnapshot*": [
      "lightsail:CreateInstancesFromSnapshot",
      "lightsail:DeleteInstanceSnapshot"
    ],
    "RelationalDatabaseSnapshot*": [
      "lightsail:CreateRelationalDatabaseFromSnapshot",
      "lightsail:DeleteRelationalDatabaseSnapshot"
    ],
    "Alarm*": [
      "lightsail:DeleteAlarm",
      "lightsail:PutAlarm",
      "lightsail:TestAlarm"
    ],
    "Distribution*": [
      "lightsail:DeleteDistribution",
      "lightsail:DetachCertificateFromDistribution",
      "lightsail:ResetDistributionCache",
      "lightsail:UpdateDistribution",
      "lightsail:UpdateDistributionBundle"
    ],
    "KeyPair*": [
      "lightsail:DeleteKeyPair"
    ],
    "RelationalDatabase*": [
      "lightsail:DeleteRelationalDatabase",
      "lightsail:GetRelationalDatabaseMasterUserPassword",
      "lightsail:RebootRelationalDatabase",
      "lightsail:StartRelationalDatabase",
      "lightsail:StopRelationalDatabase",
      "lightsail:UpdateRelationalDatabase",
      "lightsail:UpdateRelationalDatabaseParameters"
    ],
    "StaticIp*": [
      "lightsail:DetachStaticIp",
      "lightsail:ReleaseStaticIp"
    ],
    "DiskSnapshot": [
      "lightsail:ExportSnapshot"
    ],
    "Distribution": [
      "lightsail:SetIpAddressType"
    ],
    "Bucket": [
      "lightsail:TagResource",
      "lightsail:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonlightsail.html"
  },
  "geo": {
    "tracker*": [
      "geo:AssociateTrackerConsumer",
      "geo:BatchDeleteDevicePositionHistory",
      "geo:BatchGetDevicePosition",
      "geo:BatchUpdateDevicePosition",
      "geo:DeleteTracker",
      "geo:DescribeTracker",
      "geo:DisassociateTrackerConsumer",
      "geo:GetDevicePosition",
      "geo:GetDevicePositionHistory",
      "geo:ListDevicePositions",
      "geo:ListTrackerConsumers",
      "geo:UpdateTracker"
    ],
    "geofence-collection*": [
      "geo:BatchDeleteGeofence",
      "geo:BatchEvaluateGeofences",
      "geo:BatchPutGeofence",
      "geo:DeleteGeofenceCollection",
      "geo:DescribeGeofenceCollection",
      "geo:GetGeofence",
      "geo:ListGeofences",
      "geo:PutGeofence",
      "geo:UpdateGeofenceCollection"
    ],
    "route-calculator*": [
      "geo:CalculateRoute",
      "geo:CalculateRouteMatrix",
      "geo:DeleteRouteCalculator",
      "geo:DescribeRouteCalculator",
      "geo:UpdateRouteCalculator"
    ],
    "?": [
      "geo:CreateGeofenceCollection",
      "geo:CreateKey",
      "geo:CreateMap",
      "geo:CreatePlaceIndex",
      "geo:CreateRouteCalculator",
      "geo:CreateTracker",
      "geo:ListGeofenceCollections",
      "geo:ListKeys",
      "geo:ListMaps",
      "geo:ListPlaceIndexes",
      "geo:ListRouteCalculators",
      "geo:ListTrackers"
    ],
    "api-key*": [
      "geo:DeleteKey",
      "geo:DescribeKey",
      "geo:UpdateKey"
    ],
    "map*": [
      "geo:DeleteMap",
      "geo:DescribeMap",
      "geo:GetMapGlyphs",
      "geo:GetMapSprites",
      "geo:GetMapStyleDescriptor",
      "geo:GetMapTile",
      "geo:UpdateMap"
    ],
    "place-index*": [
      "geo:DeletePlaceIndex",
      "geo:DescribePlaceIndex",
      "geo:GetPlace",
      "geo:SearchPlaceIndexForPosition",
      "geo:SearchPlaceIndexForSuggestions",
      "geo:SearchPlaceIndexForText",
      "geo:UpdatePlaceIndex"
    ],
    "api-key": [
      "geo:ListTagsForResource",
      "geo:TagResource",
      "geo:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonlocation.html"
  },
  "lookoutequipment": {
    "dataset*": [
      "lookoutequipment:CreateDataset",
      "lookoutequipment:CreateModel",
      "lookoutequipment:DeleteDataset",
      "lookoutequipment:DescribeDataset",
      "lookoutequipment:ListDataIngestionJobs",
      "lookoutequipment:ListSensorStatistics",
      "lookoutequipment:StartDataIngestionJob"
    ],
    "inference-scheduler*": [
      "lookoutequipment:CreateInferenceScheduler",
      "lookoutequipment:DeleteInferenceScheduler",
      "lookoutequipment:DescribeInferenceScheduler",
      "lookoutequipment:ListInferenceEvents",
      "lookoutequipment:ListInferenceExecutions",
      "lookoutequipment:StartInferenceScheduler",
      "lookoutequipment:StopInferenceScheduler",
      "lookoutequipment:UpdateInferenceScheduler"
    ],
    "label-group*": [
      "lookoutequipment:CreateLabel",
      "lookoutequipment:CreateLabelGroup",
      "lookoutequipment:DeleteLabel",
      "lookoutequipment:DeleteLabelGroup",
      "lookoutequipment:DescribeLabelGroup",
      "lookoutequipment:Describelabel",
      "lookoutequipment:ListLabelGroups",
      "lookoutequipment:ListLabels",
      "lookoutequipment:UpdateLabelGroup"
    ],
    "model*": [
      "lookoutequipment:DeleteModel",
      "lookoutequipment:DescribeModel"
    ],
    "?": [
      "lookoutequipment:DescribeDataIngestionJob",
      "lookoutequipment:ListDatasets",
      "lookoutequipment:ListInferenceSchedulers",
      "lookoutequipment:ListModels"
    ],
    "dataset": [
      "lookoutequipment:ListTagsForResource",
      "lookoutequipment:TagResource",
      "lookoutequipment:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonlookoutforequipment.html"
  },
  "lookoutmetrics": {
    "AnomalyDetector*": [
      "lookoutmetrics:ActivateAnomalyDetector",
      "lookoutmetrics:BackTestAnomalyDetector",
      "lookoutmetrics:CreateAnomalyDetector",
      "lookoutmetrics:CreateMetricSet",
      "lookoutmetrics:DeactivateAnomalyDetector",
      "lookoutmetrics:DeleteAnomalyDetector",
      "lookoutmetrics:DescribeAnomalyDetectionExecutions",
      "lookoutmetrics:DescribeAnomalyDetector",
      "lookoutmetrics:DetectMetricSetConfig",
      "lookoutmetrics:GetAnomalyGroup",
      "lookoutmetrics:GetDataQualityMetrics",
      "lookoutmetrics:GetFeedback",
      "lookoutmetrics:ListAnomalyGroupRelatedMetrics",
      "lookoutmetrics:ListAnomalyGroupSummaries",
      "lookoutmetrics:ListAnomalyGroupTimeSeries",
      "lookoutmetrics:PutFeedback",
      "lookoutmetrics:UpdateAnomalyDetector"
    ],
    "Alert*": [
      "lookoutmetrics:CreateAlert",
      "lookoutmetrics:DeleteAlert",
      "lookoutmetrics:DescribeAlert",
      "lookoutmetrics:UpdateAlert"
    ],
    "MetricSet*": [
      "lookoutmetrics:DescribeMetricSet",
      "lookoutmetrics:UpdateMetricSet"
    ],
    "?": [
      "lookoutmetrics:GetSampleData",
      "lookoutmetrics:ListAnomalyDetectors"
    ],
    "AnomalyDetector": [
      "lookoutmetrics:ListAlerts",
      "lookoutmetrics:ListMetricSets"
    ],
    "Alert": [
      "lookoutmetrics:ListTagsForResource",
      "lookoutmetrics:TagResource",
      "lookoutmetrics:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonlookoutformetrics.html"
  },
  "lookoutvision": {
    "?": [
      "lookoutvision:CreateDataset",
      "lookoutvision:DeleteDataset",
      "lookoutvision:DescribeDataset",
      "lookoutvision:DescribeModelPackagingJob",
      "lookoutvision:ListDatasetEntries",
      "lookoutvision:ListModelPackagingJobs",
      "lookoutvision:ListModels",
      "lookoutvision:ListProjects",
      "lookoutvision:UpdateDatasetEntries"
    ],
    "model*": [
      "lookoutvision:CreateModel",
      "lookoutvision:DeleteModel",
      "lookoutvision:DescribeModel",
      "lookoutvision:DetectAnomalies",
      "lookoutvision:StartModel",
      "lookoutvision:StartModelPackagingJob",
      "lookoutvision:StopModel"
    ],
    "project*": [
      "lookoutvision:CreateProject",
      "lookoutvision:DeleteProject",
      "lookoutvision:DescribeProject"
    ],
    "model": [
      "lookoutvision:ListTagsForResource",
      "lookoutvision:TagResource",
      "lookoutvision:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonlookoutforvision.html"
  },
  "machinelearning": {
    "batchprediction": [
      "machinelearning:AddTags",
      "machinelearning:DeleteTags",
      "machinelearning:DescribeTags"
    ],
    "batchprediction*": [
      "machinelearning:CreateBatchPrediction",
      "machinelearning:DeleteBatchPrediction",
      "machinelearning:GetBatchPrediction",
      "machinelearning:UpdateBatchPrediction"
    ],
    "datasource*": [
      "machinelearning:CreateDataSourceFromRDS",
      "machinelearning:CreateDataSourceFromRedshift",
      "machinelearning:CreateDataSourceFromS3",
      "machinelearning:CreateEvaluation",
      "machinelearning:CreateMLModel",
      "machinelearning:DeleteDataSource",
      "machinelearning:GetDataSource",
      "machinelearning:GetEvaluation",
      "machinelearning:UpdateDataSource"
    ],
    "mlmodel*": [
      "machinelearning:CreateRealtimeEndpoint",
      "machinelearning:DeleteMLModel",
      "machinelearning:DeleteRealtimeEndpoint",
      "machinelearning:GetMLModel",
      "machinelearning:Predict",
      "machinelearning:UpdateMLModel"
    ],
    "evaluation*": [
      "machinelearning:DeleteEvaluation",
      "machinelearning:UpdateEvaluation"
    ],
    "?": [
      "machinelearning:DescribeBatchPredictions",
      "machinelearning:DescribeDataSources",
      "machinelearning:DescribeEvaluations",
      "machinelearning:DescribeMLModels"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonmachinelearning.html"
  },
  "macie2": {
    "?": [
      "macie2:AcceptInvitation",
      "macie2:CreateAllowList",
      "macie2:CreateInvitations",
      "macie2:CreateSampleFindings",
      "macie2:DeclineInvitations",
      "macie2:DeleteInvitations",
      "macie2:DescribeBuckets",
      "macie2:DescribeOrganizationConfiguration",
      "macie2:DisableMacie",
      "macie2:DisableOrganizationAdminAccount",
      "macie2:DisassociateFromAdministratorAccount",
      "macie2:DisassociateFromMasterAccount",
      "macie2:EnableMacie",
      "macie2:EnableOrganizationAdminAccount",
      "macie2:GetAdministratorAccount",
      "macie2:GetAutomatedDiscoveryConfiguration",
      "macie2:GetBucketStatistics",
      "macie2:GetClassificationExportConfiguration",
      "macie2:GetClassificationScope",
      "macie2:GetFindingStatistics",
      "macie2:GetFindings",
      "macie2:GetFindingsPublicationConfiguration",
      "macie2:GetInvitationsCount",
      "macie2:GetMacieSession",
      "macie2:GetMasterAccount",
      "macie2:GetResourceProfile",
      "macie2:GetRevealConfiguration",
      "macie2:GetSensitiveDataOccurrences",
      "macie2:GetSensitiveDataOccurrencesAvailability",
      "macie2:GetSensitivityInspectionTemplate",
      "macie2:GetUsageStatistics",
      "macie2:GetUsageTotals",
      "macie2:ListAllowLists",
      "macie2:ListClassificationJobs",
      "macie2:ListClassificationScopes",
      "macie2:ListCustomDataIdentifiers",
      "macie2:ListFindings",
      "macie2:ListFindingsFilters",
      "macie2:ListInvitations",
      "macie2:ListManagedDataIdentifiers",
      "macie2:ListMembers",
      "macie2:ListOrganizationAdminAccounts",
      "macie2:ListResourceProfileArtifacts",
      "macie2:ListResourceProfileDetections",
      "macie2:ListSensitivityInspectionTemplates",
      "macie2:PutClassificationExportConfiguration",
      "macie2:PutFindingsPublicationConfiguration",
      "macie2:SearchResources",
      "macie2:TestCustomDataIdentifier",
      "macie2:UpdateAutomatedDiscoveryConfiguration",
      "macie2:UpdateClassificationScope",
      "macie2:UpdateMacieSession",
      "macie2:UpdateMemberSession",
      "macie2:UpdateOrganizationConfiguration",
      "macie2:UpdateResourceProfile",
      "macie2:UpdateResourceProfileDetections",
      "macie2:UpdateRevealConfiguration",
      "macie2:UpdateSensitivityInspectionTemplate"
    ],
    "CustomDataIdentifier*": [
      "macie2:BatchGetCustomDataIdentifiers",
      "macie2:CreateCustomDataIdentifier",
      "macie2:DeleteCustomDataIdentifier",
      "macie2:GetCustomDataIdentifier"
    ],
    "ClassificationJob*": [
      "macie2:CreateClassificationJob",
      "macie2:DescribeClassificationJob",
      "macie2:UpdateClassificationJob"
    ],
    "FindingsFilter*": [
      "macie2:CreateFindingsFilter",
      "macie2:DeleteFindingsFilter",
      "macie2:GetFindingsFilter",
      "macie2:UpdateFindingsFilter"
    ],
    "Member*": [
      "macie2:CreateMember",
      "macie2:DeleteMember",
      "macie2:DisassociateMember",
      "macie2:GetMember"
    ],
    "AllowList*": [
      "macie2:DeleteAllowList",
      "macie2:GetAllowList",
      "macie2:UpdateAllowList"
    ],
    "AllowList": [
      "macie2:ListTagsForResource",
      "macie2:TagResource",
      "macie2:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonmacie.html"
  },
  "m2": {
    "Application*": [
      "m2:CancelBatchJobExecution",
      "m2:CreateDataSetImportTask",
      "m2:CreateDeployment",
      "m2:DeleteApplication",
      "m2:DeleteApplicationFromEnvironment",
      "m2:GetApplication",
      "m2:GetApplicationVersion",
      "m2:GetBatchJobExecution",
      "m2:GetDataSetDetails",
      "m2:GetDataSetImportTask",
      "m2:GetDeployment",
      "m2:ListApplicationVersions",
      "m2:ListBatchJobDefinitions",
      "m2:ListBatchJobExecutions",
      "m2:ListDataSetImportHistory",
      "m2:ListDataSets",
      "m2:ListDeployments",
      "m2:StartApplication",
      "m2:StartBatchJob",
      "m2:StopApplication",
      "m2:UpdateApplication"
    ],
    "?": [
      "m2:CreateApplication",
      "m2:CreateEnvironment",
      "m2:ListApplications",
      "m2:ListEngineVersions",
      "m2:ListEnvironments",
      "m2:ListTagsForResource"
    ],
    "Environment*": [
      "m2:DeleteEnvironment",
      "m2:GetEnvironment",
      "m2:UpdateEnvironment"
    ],
    "Application": [
      "m2:TagResource",
      "m2:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsmainframemodernizationservice.html"
  },
  "managedblockchain": {
    "?": [
      "managedblockchain:CreateAccessor",
      "managedblockchain:CreateNetwork",
      "managedblockchain:ListAccessors",
      "managedblockchain:ListInvitations",
      "managedblockchain:ListNetworks"
    ],
    "network*": [
      "managedblockchain:CreateMember",
      "managedblockchain:CreateProposal",
      "managedblockchain:GetNetwork",
      "managedblockchain:ListMembers",
      "managedblockchain:ListProposals"
    ],
    "member": [
      "managedblockchain:CreateNode",
      "managedblockchain:ListNodes"
    ],
    "accessor*": [
      "managedblockchain:DeleteAccessor",
      "managedblockchain:GetAccessor"
    ],
    "member*": [
      "managedblockchain:DeleteMember",
      "managedblockchain:GetMember",
      "managedblockchain:UpdateMember"
    ],
    "node*": [
      "managedblockchain:DeleteNode",
      "managedblockchain:GetNode",
      "managedblockchain:UpdateNode"
    ],
    "proposal*": [
      "managedblockchain:GetProposal",
      "managedblockchain:ListProposalVotes",
      "managedblockchain:VoteOnProposal"
    ],
    "accessor": [
      "managedblockchain:ListTagsForResource",
      "managedblockchain:TagResource",
      "managedblockchain:UntagResource"
    ],
    "invitation*": [
      "managedblockchain:RejectInvitation"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonmanagedblockchain.html"
  },
  "grafana": {
    "workspace*": [
      "grafana:AssociateLicense",
      "grafana:CreateWorkspaceApiKey",
      "grafana:DeleteWorkspace",
      "grafana:DeleteWorkspaceApiKey",
      "grafana:DescribeWorkspace",
      "grafana:DescribeWorkspaceAuthentication",
      "grafana:DescribeWorkspaceConfiguration",
      "grafana:DisassociateLicense",
      "grafana:ListPermissions",
      "grafana:TagResource",
      "grafana:UntagResource",
      "grafana:UpdatePermissions",
      "grafana:UpdateWorkspace",
      "grafana:UpdateWorkspaceAuthentication",
      "grafana:UpdateWorkspaceConfiguration"
    ],
    "?": [
      "grafana:CreateWorkspace",
      "grafana:ListWorkspaces"
    ],
    "workspace": [
      "grafana:ListTagsForResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonmanagedgrafana.html"
  },
  "aps": {
    "workspace*": [
      "aps:CreateAlertManagerAlerts",
      "aps:CreateAlertManagerDefinition",
      "aps:CreateLoggingConfiguration",
      "aps:DeleteAlertManagerDefinition",
      "aps:DeleteAlertManagerSilence",
      "aps:DeleteLoggingConfiguration",
      "aps:DeleteWorkspace",
      "aps:DescribeAlertManagerDefinition",
      "aps:DescribeLoggingConfiguration",
      "aps:DescribeWorkspace",
      "aps:GetAlertManagerSilence",
      "aps:GetAlertManagerStatus",
      "aps:GetLabels",
      "aps:GetMetricMetadata",
      "aps:GetSeries",
      "aps:ListAlertManagerAlertGroups",
      "aps:ListAlertManagerAlerts",
      "aps:ListAlertManagerReceivers",
      "aps:ListAlertManagerSilences",
      "aps:ListAlerts",
      "aps:ListRuleGroupsNamespaces",
      "aps:ListRules",
      "aps:PutAlertManagerDefinition",
      "aps:PutAlertManagerSilences",
      "aps:QueryMetrics",
      "aps:RemoteWrite",
      "aps:UpdateLoggingConfiguration",
      "aps:UpdateWorkspaceAlias"
    ],
    "rulegroupsnamespace*": [
      "aps:CreateRuleGroupsNamespace",
      "aps:DeleteRuleGroupsNamespace",
      "aps:DescribeRuleGroupsNamespace",
      "aps:PutRuleGroupsNamespace"
    ],
    "?": [
      "aps:CreateWorkspace",
      "aps:ListWorkspaces"
    ],
    "rulegroupsnamespace": [
      "aps:ListTagsForResource",
      "aps:TagResource",
      "aps:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonmanagedserviceforprometheus.html"
  },
  "kafka": {
    "?": [
      "kafka:BatchAssociateScramSecret",
      "kafka:BatchDisassociateScramSecret",
      "kafka:CreateCluster",
      "kafka:CreateClusterV2",
      "kafka:CreateConfiguration",
      "kafka:DeleteCluster",
      "kafka:DeleteConfiguration",
      "kafka:DescribeCluster",
      "kafka:DescribeClusterOperation",
      "kafka:DescribeClusterV2",
      "kafka:GetBootstrapBrokers",
      "kafka:GetCompatibleKafkaVersions",
      "kafka:ListClusterOperations",
      "kafka:ListClusters",
      "kafka:ListClustersV2",
      "kafka:ListConfigurationRevisions",
      "kafka:ListConfigurations",
      "kafka:ListKafkaVersions",
      "kafka:ListNodes",
      "kafka:ListScramSecrets",
      "kafka:RebootBroker",
      "kafka:UpdateBrokerCount",
      "kafka:UpdateBrokerStorage",
      "kafka:UpdateBrokerType",
      "kafka:UpdateClusterConfiguration",
      "kafka:UpdateClusterKafkaVersion",
      "kafka:UpdateConfiguration",
      "kafka:UpdateConnectivity",
      "kafka:UpdateMonitoring",
      "kafka:UpdateSecurity",
      "kafka:UpdateStorage"
    ],
    "configuration*": [
      "kafka:DescribeConfiguration",
      "kafka:DescribeConfigurationRevision"
    ],
    "cluster*": [
      "kafka:ListTagsForResource",
      "kafka:TagResource",
      "kafka:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonmanagedstreamingforapachekafka.html"
  },
  "kafkaconnect": {
    "?": [
      "kafkaconnect:CreateConnector",
      "kafkaconnect:CreateCustomPlugin",
      "kafkaconnect:CreateWorkerConfiguration",
      "kafkaconnect:DeleteConnector",
      "kafkaconnect:DeleteCustomPlugin",
      "kafkaconnect:ListConnectors",
      "kafkaconnect:ListCustomPlugins",
      "kafkaconnect:ListWorkerConfigurations",
      "kafkaconnect:UpdateConnector"
    ],
    "connector*": [
      "kafkaconnect:DescribeConnector"
    ],
    "custom plugin*": [
      "kafkaconnect:DescribeCustomPlugin"
    ],
    "worker configuration*": [
      "kafkaconnect:DescribeWorkerConfiguration"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonmanagedstreamingforkafkaconnect.html"
  },
  "airflow": {
    "environment*": [
      "airflow:CreateCliToken",
      "airflow:CreateEnvironment",
      "airflow:DeleteEnvironment",
      "airflow:GetEnvironment",
      "airflow:PublishMetrics",
      "airflow:UpdateEnvironment"
    ],
    "rbac-role*": [
      "airflow:CreateWebLoginToken"
    ],
    "?": [
      "airflow:ListEnvironments"
    ],
    "environment": [
      "airflow:ListTagsForResource",
      "airflow:TagResource",
      "airflow:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonmanagedworkflowsforapacheairflow.html"
  },
  "aws-marketplace": {
    "SellerDashboard*": [
      "aws-marketplace:GetSellerDashboard"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsmarketplacesellerreporting.html"
  },
  "marketplacecommerceanalytics": {
    "?": [
      "marketplacecommerceanalytics:GenerateDataSet",
      "marketplacecommerceanalytics:StartSupportDataExport"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsmarketplacecommerceanalyticsservice.html"
  },
  "aws-marketplace-management": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsmarketplacemanagementportal.html"
  },
  "vendor-insights": {
    "SecurityProfile*": [
      "vendor-insights:ActivateSecurityProfile",
      "vendor-insights:AssociateDataSource",
      "vendor-insights:DeactivateSecurityProfile",
      "vendor-insights:DisassociateDataSource",
      "vendor-insights:GetEntitledSecurityProfileSnapshot",
      "vendor-insights:GetSecurityProfile",
      "vendor-insights:GetSecurityProfileSnapshot",
      "vendor-insights:ListEntitledSecurityProfileSnapshots",
      "vendor-insights:ListSecurityProfileSnapshots",
      "vendor-insights:UpdateSecurityProfile",
      "vendor-insights:UpdateSecurityProfileSnapshotCreationConfiguration",
      "vendor-insights:UpdateSecurityProfileSnapshotReleaseConfiguration"
    ],
    "?": [
      "vendor-insights:CreateDataSource",
      "vendor-insights:CreateSecurityProfile",
      "vendor-insights:GetProfileAccessTerms",
      "vendor-insights:ListDataSources",
      "vendor-insights:ListEntitledSecurityProfiles",
      "vendor-insights:ListSecurityProfiles"
    ],
    "DataSource*": [
      "vendor-insights:DeleteDataSource",
      "vendor-insights:GetDataSource"
    ],
    "DataSource": [
      "vendor-insights:ListTagsForResource",
      "vendor-insights:TagResource",
      "vendor-insights:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsmarketplacevendorinsights.html"
  },
  "mechanicalturk": {
    "?": [
      "mechanicalturk:AcceptQualificationRequest",
      "mechanicalturk:ApproveAssignment",
      "mechanicalturk:AssociateQualificationWithWorker",
      "mechanicalturk:CreateAdditionalAssignmentsForHIT",
      "mechanicalturk:CreateHIT",
      "mechanicalturk:CreateHITType",
      "mechanicalturk:CreateHITWithHITType",
      "mechanicalturk:CreateQualificationType",
      "mechanicalturk:CreateWorkerBlock",
      "mechanicalturk:DeleteHIT",
      "mechanicalturk:DeleteQualificationType",
      "mechanicalturk:DeleteWorkerBlock",
      "mechanicalturk:DisassociateQualificationFromWorker",
      "mechanicalturk:GetAccountBalance",
      "mechanicalturk:GetAssignment",
      "mechanicalturk:GetFileUploadURL",
      "mechanicalturk:GetHIT",
      "mechanicalturk:GetQualificationScore",
      "mechanicalturk:GetQualificationType",
      "mechanicalturk:ListAssignmentsForHIT",
      "mechanicalturk:ListBonusPayments",
      "mechanicalturk:ListHITs",
      "mechanicalturk:ListHITsForQualificationType",
      "mechanicalturk:ListQualificationRequests",
      "mechanicalturk:ListQualificationTypes",
      "mechanicalturk:ListReviewPolicyResultsForHIT",
      "mechanicalturk:ListReviewableHITs",
      "mechanicalturk:ListWorkerBlocks",
      "mechanicalturk:ListWorkersWithQualificationType",
      "mechanicalturk:NotifyWorkers",
      "mechanicalturk:RejectAssignment",
      "mechanicalturk:RejectQualificationRequest",
      "mechanicalturk:SendBonus",
      "mechanicalturk:SendTestEventNotification",
      "mechanicalturk:UpdateExpirationForHIT",
      "mechanicalturk:UpdateHITReviewStatus",
      "mechanicalturk:UpdateHITTypeOfHIT",
      "mechanicalturk:UpdateNotificationSettings",
      "mechanicalturk:UpdateQualificationType"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonmechanicalturk.html"
  },
  "memorydb": {
    "cluster*": [
      "memorydb:BatchUpdateCluster",
      "memorydb:CreateSnapshot",
      "memorydb:DeleteCluster",
      "memorydb:DescribeClusters",
      "memorydb:FailoverShard",
      "memorydb:ListAllowedNodeTypeUpdates",
      "memorydb:UpdateCluster"
    ],
    "snapshot*": [
      "memorydb:CopySnapshot",
      "memorydb:DeleteSnapshot",
      "memorydb:DescribeSnapshots"
    ],
    "user*": [
      "memorydb:CreateAcl",
      "memorydb:DeleteUser",
      "memorydb:DescribeUsers",
      "memorydb:UpdateUser"
    ],
    "acl*": [
      "memorydb:CreateCluster",
      "memorydb:DeleteAcl",
      "memorydb:DescribeAcls",
      "memorydb:UpdateAcl"
    ],
    "?": [
      "memorydb:CreateParameterGroup",
      "memorydb:CreateSubnetGroup",
      "memorydb:CreateUser",
      "memorydb:DescribeEngineVersions",
      "memorydb:DescribeEvents",
      "memorydb:DescribeReservedNodesOfferings",
      "memorydb:DescribeServiceUpdates"
    ],
    "parametergroup*": [
      "memorydb:DeleteParameterGroup",
      "memorydb:DescribeParameterGroups",
      "memorydb:DescribeParameters",
      "memorydb:ResetParameterGroup",
      "memorydb:UpdateParameterGroup"
    ],
    "subnetgroup*": [
      "memorydb:DeleteSubnetGroup",
      "memorydb:DescribeSubnetGroups",
      "memorydb:UpdateSubnetGroup"
    ],
    "reservednode*": [
      "memorydb:DescribeReservedNodes",
      "memorydb:PurchaseReservedNodesOffering"
    ],
    "acl": [
      "memorydb:ListTags",
      "memorydb:TagResource",
      "memorydb:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonmemorydb.html"
  },
  "ec2messages": {
    "?": [
      "ec2messages:AcknowledgeMessage",
      "ec2messages:DeleteMessage",
      "ec2messages:FailMessage",
      "ec2messages:GetEndpoint",
      "ec2messages:GetMessages",
      "ec2messages:SendReply"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonmessagedeliveryservice.html"
  },
  "serviceextract": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsmicroserviceextractorfor.net.html"
  },
  "mgh": {
    "migrationTask*": [
      "mgh:AssociateCreatedArtifact",
      "mgh:AssociateDiscoveredResource",
      "mgh:DescribeMigrationTask",
      "mgh:DisassociateCreatedArtifact",
      "mgh:DisassociateDiscoveredResource",
      "mgh:ImportMigrationTask",
      "mgh:ListCreatedArtifacts",
      "mgh:ListDiscoveredResources",
      "mgh:NotifyMigrationTaskState",
      "mgh:PutResourceAttributes"
    ],
    "?": [
      "mgh:CreateHomeRegionControl",
      "mgh:DescribeApplicationState",
      "mgh:DescribeHomeRegionControls",
      "mgh:GetHomeRegion",
      "mgh:ListApplicationStates",
      "mgh:ListMigrationTasks",
      "mgh:ListProgressUpdateStreams",
      "mgh:NotifyApplicationState"
    ],
    "progressUpdateStream*": [
      "mgh:CreateProgressUpdateStream",
      "mgh:DeleteProgressUpdateStream"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsmigrationhub.html"
  },
  "migrationhub-orchestrator": {
    "?": [
      "migrationhub-orchestrator:CreateWorkflow",
      "migrationhub-orchestrator:GetMessage",
      "migrationhub-orchestrator:GetTemplate",
      "migrationhub-orchestrator:GetTemplateStep",
      "migrationhub-orchestrator:GetTemplateStepGroup",
      "migrationhub-orchestrator:ListPlugins",
      "migrationhub-orchestrator:ListTemplateStepGroups",
      "migrationhub-orchestrator:ListTemplateSteps",
      "migrationhub-orchestrator:ListTemplates",
      "migrationhub-orchestrator:ListWorkflows",
      "migrationhub-orchestrator:RegisterPlugin",
      "migrationhub-orchestrator:SendMessage"
    ],
    "workflow*": [
      "migrationhub-orchestrator:CreateWorkflowStep",
      "migrationhub-orchestrator:CreateWorkflowStepGroup",
      "migrationhub-orchestrator:DeleteWorkflow",
      "migrationhub-orchestrator:DeleteWorkflowStep",
      "migrationhub-orchestrator:DeleteWorkflowStepGroup",
      "migrationhub-orchestrator:GetWorkflow",
      "migrationhub-orchestrator:GetWorkflowStep",
      "migrationhub-orchestrator:GetWorkflowStepGroup",
      "migrationhub-orchestrator:ListTagsForResource",
      "migrationhub-orchestrator:ListWorkflowStepGroups",
      "migrationhub-orchestrator:ListWorkflowSteps",
      "migrationhub-orchestrator:RetryWorkflowStep",
      "migrationhub-orchestrator:StartWorkflow",
      "migrationhub-orchestrator:StopWorkflow",
      "migrationhub-orchestrator:TagResource",
      "migrationhub-orchestrator:UntagResource",
      "migrationhub-orchestrator:UpdateWorkflow",
      "migrationhub-orchestrator:UpdateWorkflowStep",
      "migrationhub-orchestrator:UpdateWorkflowStepGroup"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsmigrationhuborchestrator.html"
  },
  "refactor-spaces": {
    "?": [
      "refactor-spaces:CreateApplication",
      "refactor-spaces:CreateEnvironment",
      "refactor-spaces:CreateRoute",
      "refactor-spaces:CreateService",
      "refactor-spaces:DeleteResourcePolicy",
      "refactor-spaces:GetResourcePolicy",
      "refactor-spaces:ListEnvironments",
      "refactor-spaces:ListTagsForResource",
      "refactor-spaces:PutResourcePolicy"
    ],
    "application*": [
      "refactor-spaces:DeleteApplication",
      "refactor-spaces:GetApplication"
    ],
    "environment*": [
      "refactor-spaces:DeleteEnvironment",
      "refactor-spaces:GetEnvironment",
      "refactor-spaces:ListApplications",
      "refactor-spaces:ListEnvironmentVpcs",
      "refactor-spaces:ListRoutes",
      "refactor-spaces:ListServices"
    ],
    "route*": [
      "refactor-spaces:DeleteRoute",
      "refactor-spaces:GetRoute",
      "refactor-spaces:UpdateRoute"
    ],
    "service*": [
      "refactor-spaces:DeleteService",
      "refactor-spaces:GetService"
    ],
    "application": [
      "refactor-spaces:TagResource",
      "refactor-spaces:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsmigrationhubrefactorspaces.html"
  },
  "migrationhub-strategy": {
    "?": [
      "migrationhub-strategy:GetAntiPattern",
      "migrationhub-strategy:GetApplicationComponentDetails",
      "migrationhub-strategy:GetApplicationComponentStrategies",
      "migrationhub-strategy:GetAssessment",
      "migrationhub-strategy:GetImportFileTask",
      "migrationhub-strategy:GetLatestAssessmentId",
      "migrationhub-strategy:GetMessage",
      "migrationhub-strategy:GetPortfolioPreferences",
      "migrationhub-strategy:GetPortfolioSummary",
      "migrationhub-strategy:GetRecommendationReportDetails",
      "migrationhub-strategy:GetServerDetails",
      "migrationhub-strategy:GetServerStrategies",
      "migrationhub-strategy:ListAntiPatterns",
      "migrationhub-strategy:ListApplicationComponents",
      "migrationhub-strategy:ListCollectors",
      "migrationhub-strategy:ListImportFileTask",
      "migrationhub-strategy:ListJarArtifacts",
      "migrationhub-strategy:ListServers",
      "migrationhub-strategy:PutPortfolioPreferences",
      "migrationhub-strategy:RegisterCollector",
      "migrationhub-strategy:SendMessage",
      "migrationhub-strategy:StartAssessment",
      "migrationhub-strategy:StartImportFileTask",
      "migrationhub-strategy:StartRecommendationReportGeneration",
      "migrationhub-strategy:StopAssessment",
      "migrationhub-strategy:UpdateApplicationComponentConfig",
      "migrationhub-strategy:UpdateCollectorConfiguration",
      "migrationhub-strategy:UpdateServerConfig"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsmigrationhubstrategyrecommendations.html"
  },
  "mobileanalytics": {
    "?": [
      "mobileanalytics:GetFinancialReports",
      "mobileanalytics:GetReports",
      "mobileanalytics:PutEvents"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonmobileanalytics.html"
  },
  "mobilehub": {
    "?": [
      "mobilehub:CreateProject",
      "mobilehub:CreateServiceRole",
      "mobilehub:DeleteProjectSnapshot",
      "mobilehub:DeployToStage",
      "mobilehub:DescribeBundle",
      "mobilehub:ExportBundle",
      "mobilehub:GetProjectSnapshot",
      "mobilehub:ImportProject",
      "mobilehub:InstallBundle",
      "mobilehub:ListAvailableConnectors",
      "mobilehub:ListAvailableFeatures",
      "mobilehub:ListAvailableRegions",
      "mobilehub:ListBundles",
      "mobilehub:ListProjectSnapshots",
      "mobilehub:ListProjects",
      "mobilehub:ValidateProject",
      "mobilehub:VerifyServiceRole"
    ],
    "project*": [
      "mobilehub:DeleteProject",
      "mobilehub:ExportProject",
      "mobilehub:GenerateProjectParameters",
      "mobilehub:GetProject",
      "mobilehub:SynchronizeProject",
      "mobilehub:UpdateProject"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsmobilehub.html"
  },
  "monitron": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonmonitron.html"
  },
  "mq": {
    "?": [
      "mq:CreateBroker",
      "mq:CreateConfiguration",
      "mq:DescribeBrokerEngineTypes",
      "mq:DescribeBrokerInstanceOptions",
      "mq:ListBrokers",
      "mq:ListConfigurations"
    ],
    "brokers": [
      "mq:CreateTags",
      "mq:DeleteTags",
      "mq:ListTags"
    ],
    "brokers*": [
      "mq:CreateUser",
      "mq:DeleteBroker",
      "mq:DeleteUser",
      "mq:DescribeBroker",
      "mq:DescribeUser",
      "mq:ListUsers",
      "mq:RebootBroker",
      "mq:UpdateBroker",
      "mq:UpdateUser"
    ],
    "configurations*": [
      "mq:DescribeConfiguration",
      "mq:DescribeConfigurationRevision",
      "mq:ListConfigurationRevisions",
      "mq:UpdateConfiguration"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonmq.html"
  },
  "neptune-db": {
    "database*": [
      "neptune-db:CancelLoaderJob",
      "neptune-db:CancelMLDataProcessingJob",
      "neptune-db:CancelMLModelTrainingJob",
      "neptune-db:CancelMLModelTransformJob",
      "neptune-db:CancelQuery",
      "neptune-db:CreateMLEndpoint",
      "neptune-db:DeleteDataViaQuery",
      "neptune-db:DeleteMLEndpoint",
      "neptune-db:DeleteStatistics",
      "neptune-db:GetEngineStatus",
      "neptune-db:GetGraphSummary",
      "neptune-db:GetLoaderJobStatus",
      "neptune-db:GetMLDataProcessingJobStatus",
      "neptune-db:GetMLEndpointStatus",
      "neptune-db:GetMLModelTrainingJobStatus",
      "neptune-db:GetMLModelTransformJobStatus",
      "neptune-db:GetQueryStatus",
      "neptune-db:GetStatisticsStatus",
      "neptune-db:GetStreamRecords",
      "neptune-db:ListLoaderJobs",
      "neptune-db:ListMLDataProcessingJobs",
      "neptune-db:ListMLEndpoints",
      "neptune-db:ListMLModelTrainingJobs",
      "neptune-db:ListMLModelTransformJobs",
      "neptune-db:ManageStatistics",
      "neptune-db:ReadDataViaQuery",
      "neptune-db:ResetDatabase",
      "neptune-db:StartLoaderJob",
      "neptune-db:StartMLDataProcessingJob",
      "neptune-db:StartMLModelTrainingJob",
      "neptune-db:StartMLModelTransformJob",
      "neptune-db:WriteDataViaQuery",
      "neptune-db:connect"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonneptune.html"
  },
  "network-firewall": {
    "Firewall*": [
      "network-firewall:AssociateFirewallPolicy",
      "network-firewall:AssociateSubnets",
      "network-firewall:CreateFirewall",
      "network-firewall:DeleteFirewall",
      "network-firewall:DescribeFirewall",
      "network-firewall:DescribeLoggingConfiguration",
      "network-firewall:DisassociateSubnets",
      "network-firewall:ListFirewalls",
      "network-firewall:ListTagsForResource",
      "network-firewall:UpdateFirewallDeleteProtection",
      "network-firewall:UpdateFirewallDescription",
      "network-firewall:UpdateFirewallEncryptionConfiguration",
      "network-firewall:UpdateFirewallPolicyChangeProtection",
      "network-firewall:UpdateLoggingConfiguration",
      "network-firewall:UpdateSubnetChangeProtection"
    ],
    "FirewallPolicy*": [
      "network-firewall:CreateFirewallPolicy",
      "network-firewall:DeleteFirewallPolicy",
      "network-firewall:DescribeFirewallPolicy",
      "network-firewall:ListFirewallPolicies",
      "network-firewall:UpdateFirewallPolicy"
    ],
    "StatefulRuleGroup": [
      "network-firewall:CreateRuleGroup",
      "network-firewall:DescribeRuleGroup",
      "network-firewall:DescribeRuleGroupMetadata",
      "network-firewall:UpdateRuleGroup"
    ],
    "FirewallPolicy": [
      "network-firewall:DeleteResourcePolicy",
      "network-firewall:DescribeResourcePolicy",
      "network-firewall:PutResourcePolicy"
    ],
    "StatefulRuleGroup*": [
      "network-firewall:DeleteRuleGroup"
    ],
    "?": [
      "network-firewall:ListRuleGroups"
    ],
    "Firewall": [
      "network-firewall:TagResource",
      "network-firewall:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsnetworkfirewall.html"
  },
  "networkmanager": {
    "attachment*": [
      "networkmanager:AcceptAttachment",
      "networkmanager:CreateConnectAttachment",
      "networkmanager:CreateConnectPeer",
      "networkmanager:DeleteAttachment",
      "networkmanager:GetConnectAttachment",
      "networkmanager:GetSiteToSiteVpnAttachment",
      "networkmanager:GetTransitGatewayRouteTableAttachment",
      "networkmanager:GetVpcAttachment",
      "networkmanager:ListAttachments",
      "networkmanager:RejectAttachment",
      "networkmanager:UpdateVpcAttachment"
    ],
    "device*": [
      "networkmanager:AssociateConnectPeer",
      "networkmanager:AssociateCustomerGateway",
      "networkmanager:AssociateLink",
      "networkmanager:AssociateTransitGatewayConnectPeer",
      "networkmanager:DeleteDevice",
      "networkmanager:DisassociateLink",
      "networkmanager:UpdateDevice"
    ],
    "global-network*": [
      "networkmanager:CreateConnection",
      "networkmanager:CreateCoreNetwork",
      "networkmanager:CreateDevice",
      "networkmanager:CreateLink",
      "networkmanager:CreateSite",
      "networkmanager:DeleteGlobalNetwork",
      "networkmanager:DeleteLink",
      "networkmanager:DeleteSite",
      "networkmanager:DeregisterTransitGateway",
      "networkmanager:DisassociateConnectPeer",
      "networkmanager:DisassociateCustomerGateway",
      "networkmanager:DisassociateTransitGatewayConnectPeer",
      "networkmanager:GetConnectPeerAssociations",
      "networkmanager:GetConnections",
      "networkmanager:GetCustomerGatewayAssociations",
      "networkmanager:GetDevices",
      "networkmanager:GetLinkAssociations",
      "networkmanager:GetLinks",
      "networkmanager:GetNetworkResourceCounts",
      "networkmanager:GetNetworkResourceRelationships",
      "networkmanager:GetNetworkResources",
      "networkmanager:GetNetworkRoutes",
      "networkmanager:GetNetworkTelemetry",
      "networkmanager:GetRouteAnalysis",
      "networkmanager:GetSites",
      "networkmanager:GetTransitGatewayConnectPeerAssociations",
      "networkmanager:GetTransitGatewayRegistrations",
      "networkmanager:RegisterTransitGateway",
      "networkmanager:StartRouteAnalysis",
      "networkmanager:UpdateGlobalNetwork",
      "networkmanager:UpdateLink",
      "networkmanager:UpdateNetworkResourceMetadata",
      "networkmanager:UpdateSite"
    ],
    "?": [
      "networkmanager:CreateGlobalNetwork",
      "networkmanager:ListCoreNetworks",
      "networkmanager:ListOrganizationServiceAccessStatus",
      "networkmanager:ListPeerings",
      "networkmanager:StartOrganizationServiceAccessUpdate"
    ],
    "core-network*": [
      "networkmanager:CreateSiteToSiteVpnAttachment",
      "networkmanager:CreateTransitGatewayPeering",
      "networkmanager:CreateVpcAttachment",
      "networkmanager:DeleteCoreNetwork",
      "networkmanager:DeleteCoreNetworkPolicyVersion",
      "networkmanager:DeleteResourcePolicy",
      "networkmanager:ExecuteCoreNetworkChangeSet",
      "networkmanager:GetCoreNetwork",
      "networkmanager:GetCoreNetworkChangeEvents",
      "networkmanager:GetCoreNetworkChangeSet",
      "networkmanager:GetCoreNetworkPolicy",
      "networkmanager:GetResourcePolicy",
      "networkmanager:ListCoreNetworkPolicyVersions",
      "networkmanager:PutCoreNetworkPolicy",
      "networkmanager:PutResourcePolicy",
      "networkmanager:RestoreCoreNetworkPolicyVersion",
      "networkmanager:UpdateCoreNetwork"
    ],
    "peering*": [
      "networkmanager:CreateTransitGatewayRouteTableAttachment",
      "networkmanager:DeletePeering",
      "networkmanager:GetTransitGatewayPeering"
    ],
    "connect-peer*": [
      "networkmanager:DeleteConnectPeer",
      "networkmanager:GetConnectPeer",
      "networkmanager:ListConnectPeers"
    ],
    "connection*": [
      "networkmanager:DeleteConnection",
      "networkmanager:UpdateConnection"
    ],
    "global-network": [
      "networkmanager:DescribeGlobalNetworks"
    ],
    "attachment": [
      "networkmanager:ListTagsForResource",
      "networkmanager:TagResource",
      "networkmanager:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsnetworkmanager.html"
  },
  "nimble": {
    "eula*": [
      "nimble:AcceptEulas",
      "nimble:GetEula",
      "nimble:ListEulas"
    ],
    "studio*": [
      "nimble:CreateLaunchProfile",
      "nimble:CreateStreamingImage",
      "nimble:CreateStudio",
      "nimble:CreateStudioComponent",
      "nimble:DeleteStudio",
      "nimble:DeleteStudioMember",
      "nimble:GetStudio",
      "nimble:GetStudioMember",
      "nimble:ListLaunchProfiles",
      "nimble:ListStreamingImages",
      "nimble:ListStreamingSessionBackups",
      "nimble:ListStreamingSessions",
      "nimble:ListStudioComponents",
      "nimble:ListStudioMembers",
      "nimble:PutStudioMembers",
      "nimble:StartStudioSSOConfigurationRepair",
      "nimble:UpdateStudio"
    ],
    "launch-profile*": [
      "nimble:CreateStreamingSession",
      "nimble:DeleteLaunchProfile",
      "nimble:DeleteLaunchProfileMember",
      "nimble:GetLaunchProfile",
      "nimble:GetLaunchProfileDetails",
      "nimble:GetLaunchProfileInitialization",
      "nimble:GetLaunchProfileMember",
      "nimble:ListLaunchProfileMembers",
      "nimble:PutLaunchProfileMembers",
      "nimble:UpdateLaunchProfile",
      "nimble:UpdateLaunchProfileMember"
    ],
    "streaming-session*": [
      "nimble:CreateStreamingSessionStream",
      "nimble:DeleteStreamingSession",
      "nimble:GetStreamingSession",
      "nimble:GetStreamingSessionStream",
      "nimble:StartStreamingSession",
      "nimble:StopStreamingSession"
    ],
    "streaming-image*": [
      "nimble:DeleteStreamingImage",
      "nimble:GetStreamingImage",
      "nimble:UpdateStreamingImage"
    ],
    "studio-component*": [
      "nimble:DeleteStudioComponent",
      "nimble:GetStudioComponent",
      "nimble:UpdateStudioComponent"
    ],
    "streaming-session-backup*": [
      "nimble:GetStreamingSessionBackup"
    ],
    "eula-acceptance*": [
      "nimble:ListEulaAcceptances"
    ],
    "?": [
      "nimble:ListStudios"
    ],
    "launch-profile": [
      "nimble:ListTagsForResource",
      "nimble:TagResource",
      "nimble:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonnimblestudio.html"
  },
  "omics": {
    "sequenceStore*": [
      "omics:BatchDeleteReadSet",
      "omics:DeleteSequenceStore",
      "omics:GetReadSetActivationJob",
      "omics:GetReadSetExportJob",
      "omics:GetReadSetImportJob",
      "omics:GetSequenceStore",
      "omics:ListReadSetActivationJobs",
      "omics:ListReadSetExportJobs",
      "omics:ListReadSetImportJobs",
      "omics:ListReadSets",
      "omics:StartReadSetActivationJob",
      "omics:StartReadSetExportJob",
      "omics:StartReadSetImportJob"
    ],
    "AnnotationImportJob*": [
      "omics:CancelAnnotationImportJob",
      "omics:GetAnnotationImportJob"
    ],
    "run*": [
      "omics:CancelRun",
      "omics:DeleteRun",
      "omics:GetRun",
      "omics:ListRunTasks"
    ],
    "VariantImportJob*": [
      "omics:CancelVariantImportJob",
      "omics:GetVariantImportJob"
    ],
    "?": [
      "omics:CreateAnnotationStore",
      "omics:CreateReferenceStore",
      "omics:CreateRunGroup",
      "omics:CreateSequenceStore",
      "omics:CreateVariantStore",
      "omics:CreateWorkflow",
      "omics:ListAnnotationImportJobs",
      "omics:ListAnnotationStores",
      "omics:ListReferenceStores",
      "omics:ListRunGroups",
      "omics:ListRuns",
      "omics:ListSequenceStores",
      "omics:ListTagsForResource",
      "omics:ListVariantImportJobs",
      "omics:ListVariantStores",
      "omics:ListWorkflows",
      "omics:StartAnnotationImportJob",
      "omics:StartRun",
      "omics:StartVariantImportJob"
    ],
    "AnnotationStore*": [
      "omics:DeleteAnnotationStore",
      "omics:GetAnnotationStore",
      "omics:UpdateAnnotationStore"
    ],
    "reference*": [
      "omics:DeleteReference",
      "omics:GetReference",
      "omics:GetReferenceMetadata"
    ],
    "referenceStore*": [
      "omics:DeleteReferenceStore",
      "omics:GetReferenceImportJob",
      "omics:GetReferenceStore",
      "omics:ListReferenceImportJobs",
      "omics:ListReferences",
      "omics:StartReferenceImportJob"
    ],
    "runGroup*": [
      "omics:DeleteRunGroup",
      "omics:GetRunGroup",
      "omics:UpdateRunGroup"
    ],
    "VariantStore*": [
      "omics:DeleteVariantStore",
      "omics:GetVariantStore",
      "omics:UpdateVariantStore"
    ],
    "workflow*": [
      "omics:DeleteWorkflow",
      "omics:GetWorkflow",
      "omics:UpdateWorkflow"
    ],
    "readSet*": [
      "omics:GetReadSet",
      "omics:GetReadSetMetadata"
    ],
    "TaskResource*": [
      "omics:GetRunTask"
    ],
    "readSet": [
      "omics:TagResource",
      "omics:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonomics.html"
  },
  "aoss": {
    "?": [
      "aoss:BatchGetCollection",
      "aoss:BatchGetVpcEndpoint",
      "aoss:CreateAccessPolicy",
      "aoss:CreateCollection",
      "aoss:CreateSecurityConfig",
      "aoss:CreateSecurityPolicy",
      "aoss:CreateVpcEndpoint",
      "aoss:DeleteAccessPolicy",
      "aoss:DeleteSecurityConfig",
      "aoss:DeleteSecurityPolicy",
      "aoss:DeleteVpcEndpoint",
      "aoss:GetAccessPolicy",
      "aoss:GetAccountSettings",
      "aoss:GetPoliciesStats",
      "aoss:GetSecurityConfig",
      "aoss:GetSecurityPolicy",
      "aoss:ListAccessPolicies",
      "aoss:ListCollections",
      "aoss:ListSecurityConfigs",
      "aoss:ListSecurityPolicies",
      "aoss:ListTagsForResource",
      "aoss:ListVpcEndpoints",
      "aoss:TagResource",
      "aoss:UntagResource",
      "aoss:UpdateAccessPolicy",
      "aoss:UpdateAccountSettings",
      "aoss:UpdateSecurityConfig",
      "aoss:UpdateSecurityPolicy",
      "aoss:UpdateVpcEndpoint"
    ],
    "Collection*": [
      "aoss:DeleteCollection",
      "aoss:UpdateCollection"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonopensearchserverless.html"
  },
  "es": {
    "?": [
      "es:AcceptInboundConnection",
      "es:AcceptInboundCrossClusterSearchConnection",
      "es:AuthorizeVpcEndpointAccess",
      "es:CreateElasticsearchServiceRole",
      "es:CreatePackage",
      "es:CreateServiceRole",
      "es:CreateVpcEndpoint",
      "es:DeleteElasticsearchServiceRole",
      "es:DeleteInboundConnection",
      "es:DeleteInboundCrossClusterSearchConnection",
      "es:DeleteOutboundConnection",
      "es:DeleteOutboundCrossClusterSearchConnection",
      "es:DeletePackage",
      "es:DeleteVpcEndpoint",
      "es:DescribeElasticsearchInstanceTypeLimits",
      "es:DescribeInboundConnections",
      "es:DescribeInboundCrossClusterSearchConnections",
      "es:DescribeInstanceTypeLimits",
      "es:DescribeOutboundConnections",
      "es:DescribeOutboundCrossClusterSearchConnections",
      "es:DescribePackages",
      "es:DescribeReservedElasticsearchInstanceOfferings",
      "es:DescribeReservedElasticsearchInstances",
      "es:DescribeReservedInstanceOfferings",
      "es:DescribeReservedInstances",
      "es:DescribeVpcEndpoints",
      "es:GetPackageVersionHistory",
      "es:ListDomainNames",
      "es:ListDomainsForPackage",
      "es:ListElasticsearchInstanceTypeDetails",
      "es:ListElasticsearchInstanceTypes",
      "es:ListElasticsearchVersions",
      "es:ListInstanceTypeDetails",
      "es:ListVersions",
      "es:ListVpcEndpointAccess",
      "es:ListVpcEndpoints",
      "es:ListVpcEndpointsForDomain",
      "es:PurchaseReservedElasticsearchInstanceOffering",
      "es:PurchaseReservedInstanceOffering",
      "es:RejectInboundConnection",
      "es:RejectInboundCrossClusterSearchConnection",
      "es:RevokeVpcEndpointAccess",
      "es:UpdatePackage",
      "es:UpdateVpcEndpoint"
    ],
    "domain*": [
      "es:AddTags",
      "es:AssociatePackage",
      "es:CancelElasticsearchServiceSoftwareUpdate",
      "es:CancelServiceSoftwareUpdate",
      "es:CreateOutboundConnection",
      "es:CreateOutboundCrossClusterSearchConnection",
      "es:DeleteDomain",
      "es:DeleteElasticsearchDomain",
      "es:DescribeDomain",
      "es:DescribeDomainAutoTunes",
      "es:DescribeDomainChangeProgress",
      "es:DescribeDomainConfig",
      "es:DescribeDomains",
      "es:DescribeDryRunProgress",
      "es:DescribeElasticsearchDomain",
      "es:DescribeElasticsearchDomainConfig",
      "es:DescribeElasticsearchDomains",
      "es:DissociatePackage",
      "es:GetCompatibleElasticsearchVersions",
      "es:GetCompatibleVersions",
      "es:GetUpgradeHistory",
      "es:GetUpgradeStatus",
      "es:ListPackagesForDomain",
      "es:ListTags",
      "es:RemoveTags",
      "es:StartElasticsearchServiceSoftwareUpdate",
      "es:StartServiceSoftwareUpdate",
      "es:UpdateDomainConfig",
      "es:UpdateElasticsearchDomainConfig",
      "es:UpgradeDomain",
      "es:UpgradeElasticsearchDomain"
    ],
    "domain": [
      "es:CreateDomain",
      "es:CreateElasticsearchDomain",
      "es:ESCrossClusterGet",
      "es:ESHttpDelete",
      "es:ESHttpGet",
      "es:ESHttpHead",
      "es:ESHttpPatch",
      "es:ESHttpPost",
      "es:ESHttpPut"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonopensearchservice.html"
  },
  "opsworks": {
    "stack": [
      "opsworks:AssignInstance",
      "opsworks:AssignVolume",
      "opsworks:AssociateElasticIp",
      "opsworks:AttachElasticLoadBalancer",
      "opsworks:CloneStack",
      "opsworks:CreateApp",
      "opsworks:CreateDeployment",
      "opsworks:CreateInstance",
      "opsworks:CreateLayer",
      "opsworks:DeleteApp",
      "opsworks:DeleteInstance",
      "opsworks:DeleteLayer",
      "opsworks:DeleteStack",
      "opsworks:DeregisterEcsCluster",
      "opsworks:DeregisterElasticIp",
      "opsworks:DeregisterInstance",
      "opsworks:DeregisterRdsDbInstance",
      "opsworks:DeregisterVolume",
      "opsworks:DescribeAgentVersions",
      "opsworks:DescribeApps",
      "opsworks:DescribeCommands",
      "opsworks:DescribeDeployments",
      "opsworks:DescribeEcsClusters",
      "opsworks:DescribeElasticIps",
      "opsworks:DescribeElasticLoadBalancers",
      "opsworks:DescribeInstances",
      "opsworks:DescribeLayers",
      "opsworks:DescribeLoadBasedAutoScaling",
      "opsworks:DescribePermissions",
      "opsworks:DescribeRaidArrays",
      "opsworks:DescribeRdsDbInstances",
      "opsworks:DescribeServiceErrors",
      "opsworks:DescribeStackProvisioningParameters",
      "opsworks:DescribeStackSummary",
      "opsworks:DescribeStacks",
      "opsworks:DescribeTimeBasedAutoScaling",
      "opsworks:DescribeVolumes",
      "opsworks:DetachElasticLoadBalancer",
      "opsworks:DisassociateElasticIp",
      "opsworks:GetHostnameSuggestion",
      "opsworks:GrantAccess",
      "opsworks:ListTags",
      "opsworks:RebootInstance",
      "opsworks:RegisterEcsCluster",
      "opsworks:RegisterElasticIp",
      "opsworks:RegisterInstance",
      "opsworks:RegisterRdsDbInstance",
      "opsworks:RegisterVolume",
      "opsworks:SetLoadBasedAutoScaling",
      "opsworks:SetPermission",
      "opsworks:SetTimeBasedAutoScaling",
      "opsworks:StartInstance",
      "opsworks:StartStack",
      "opsworks:StopInstance",
      "opsworks:StopStack",
      "opsworks:TagResource",
      "opsworks:UnassignInstance",
      "opsworks:UnassignVolume",
      "opsworks:UntagResource",
      "opsworks:UpdateApp",
      "opsworks:UpdateElasticIp",
      "opsworks:UpdateInstance",
      "opsworks:UpdateLayer",
      "opsworks:UpdateRdsDbInstance",
      "opsworks:UpdateStack",
      "opsworks:UpdateVolume"
    ],
    "?": [
      "opsworks:CreateStack",
      "opsworks:CreateUserProfile",
      "opsworks:DeleteUserProfile",
      "opsworks:DescribeMyUserProfile",
      "opsworks:DescribeOperatingSystems",
      "opsworks:DescribeUserProfiles",
      "opsworks:UpdateMyUserProfile",
      "opsworks:UpdateUserProfile"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsopsworks.html"
  },
  "opsworks-cm": {
    "?": [
      "opsworks-cm:AssociateNode",
      "opsworks-cm:CreateBackup",
      "opsworks-cm:CreateServer",
      "opsworks-cm:DeleteBackup",
      "opsworks-cm:DeleteServer",
      "opsworks-cm:DescribeAccountAttributes",
      "opsworks-cm:DescribeBackups",
      "opsworks-cm:DescribeEvents",
      "opsworks-cm:DescribeNodeAssociationStatus",
      "opsworks-cm:DescribeServers",
      "opsworks-cm:DisassociateNode",
      "opsworks-cm:ExportServerEngineAttribute",
      "opsworks-cm:ListTagsForResource",
      "opsworks-cm:RestoreServer",
      "opsworks-cm:StartMaintenance",
      "opsworks-cm:TagResource",
      "opsworks-cm:UntagResource",
      "opsworks-cm:UpdateServer",
      "opsworks-cm:UpdateServerEngineAttributes"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsopsworksconfigurationmanagement.html"
  },
  "organizations": {
    "handshake*": [
      "organizations:AcceptHandshake",
      "organizations:CancelHandshake",
      "organizations:DeclineHandshake",
      "organizations:DescribeHandshake"
    ],
    "policy*": [
      "organizations:AttachPolicy",
      "organizations:DeletePolicy",
      "organizations:DescribePolicy",
      "organizations:DetachPolicy",
      "organizations:ListTargetsForPolicy",
      "organizations:UpdatePolicy"
    ],
    "account*": [
      "organizations:CloseAccount",
      "organizations:DeregisterDelegatedAdministrator",
      "organizations:DescribeAccount",
      "organizations:DescribeEffectivePolicy",
      "organizations:ListDelegatedServicesForAccount",
      "organizations:MoveAccount",
      "organizations:RegisterDelegatedAdministrator",
      "organizations:RemoveAccountFromOrganization"
    ],
    "?": [
      "organizations:CreateAccount",
      "organizations:CreateGovCloudAccount",
      "organizations:CreateOrganization",
      "organizations:CreatePolicy",
      "organizations:DeleteOrganization",
      "organizations:DeleteResourcePolicy",
      "organizations:DescribeCreateAccountStatus",
      "organizations:DescribeOrganization",
      "organizations:DescribeResourcePolicy",
      "organizations:DisableAWSServiceAccess",
      "organizations:EnableAWSServiceAccess",
      "organizations:EnableAllFeatures",
      "organizations:LeaveOrganization",
      "organizations:ListAWSServiceAccessForOrganization",
      "organizations:ListAccounts",
      "organizations:ListCreateAccountStatus",
      "organizations:ListDelegatedAdministrators",
      "organizations:ListHandshakesForAccount",
      "organizations:ListHandshakesForOrganization",
      "organizations:ListPolicies",
      "organizations:ListRoots"
    ],
    "organizationalunit": [
      "organizations:CreateOrganizationalUnit",
      "organizations:ListAccountsForParent",
      "organizations:ListChildren",
      "organizations:ListOrganizationalUnitsForParent"
    ],
    "organizationalunit*": [
      "organizations:DeleteOrganizationalUnit",
      "organizations:DescribeOrganizationalUnit",
      "organizations:UpdateOrganizationalUnit"
    ],
    "root*": [
      "organizations:DisablePolicyType",
      "organizations:EnablePolicyType"
    ],
    "account": [
      "organizations:InviteAccountToOrganization",
      "organizations:ListParents",
      "organizations:ListPoliciesForTarget",
      "organizations:ListTagsForResource",
      "organizations:TagResource",
      "organizations:UntagResource"
    ],
    "resourcepolicy*": [
      "organizations:PutResourcePolicy"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsorganizations.html"
  },
  "outposts": {
    "?": [
      "outposts:CancelOrder",
      "outposts:CreatePrivateConnectivityConfig",
      "outposts:CreateSite",
      "outposts:GetCatalogItem",
      "outposts:GetConnection",
      "outposts:GetOrder",
      "outposts:GetPrivateConnectivityConfig",
      "outposts:ListAssets",
      "outposts:ListCatalogItems",
      "outposts:ListOrders",
      "outposts:ListOutposts",
      "outposts:ListSites",
      "outposts:ListTagsForResource",
      "outposts:StartConnection",
      "outposts:TagResource",
      "outposts:UntagResource"
    ],
    "outpost*": [
      "outposts:CreateOrder",
      "outposts:DeleteOutpost",
      "outposts:GetOutpost",
      "outposts:GetOutpostInstanceTypes",
      "outposts:UpdateOutpost"
    ],
    "site*": [
      "outposts:CreateOutpost",
      "outposts:DeleteSite",
      "outposts:GetSite",
      "outposts:GetSiteAddress",
      "outposts:UpdateSite",
      "outposts:UpdateSiteAddress",
      "outposts:UpdateSiteRackPhysicalProperties"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsoutposts.html"
  },
  "panorama": {
    "?": [
      "panorama:CreateApplicationInstance",
      "panorama:CreateJobForDevices",
      "panorama:CreateNodeFromTemplateJob",
      "panorama:CreatePackage",
      "panorama:CreatePackageImportJob",
      "panorama:DescribeDeviceJob",
      "panorama:DescribeNode",
      "panorama:DescribeNodeFromTemplateJob",
      "panorama:DescribePackageImportJob",
      "panorama:ListDevices",
      "panorama:ListNodeFromTemplateJobs",
      "panorama:ListNodes",
      "panorama:ListPackageImportJobs",
      "panorama:ListPackages",
      "panorama:ProvisionDevice"
    ],
    "device*": [
      "panorama:DeleteDevice",
      "panorama:DescribeDevice",
      "panorama:UpdateDeviceMetadata"
    ],
    "package*": [
      "panorama:DeletePackage",
      "panorama:DeregisterPackageVersion",
      "panorama:DescribePackage",
      "panorama:DescribePackageVersion",
      "panorama:RegisterPackageVersion"
    ],
    "applicationInstance*": [
      "panorama:DescribeApplicationInstance",
      "panorama:DescribeApplicationInstanceDetails",
      "panorama:ListApplicationInstanceDependencies",
      "panorama:ListApplicationInstanceNodeInstances",
      "panorama:RemoveApplicationInstance",
      "panorama:SignalApplicationInstanceNodeInstances"
    ],
    "device": [
      "panorama:ListApplicationInstances",
      "panorama:ListDevicesJobs"
    ],
    "applicationInstance": [
      "panorama:ListTagsForResource",
      "panorama:TagResource",
      "panorama:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awspanorama.html"
  },
  "payments": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awspayments.html"
  },
  "pi": {
    "metric-resource*": [
      "pi:DescribeDimensionKeys",
      "pi:GetDimensionKeyDetails",
      "pi:GetResourceMetadata",
      "pi:GetResourceMetrics",
      "pi:ListAvailableResourceDimensions",
      "pi:ListAvailableResourceMetrics"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsperformanceinsights.html"
  },
  "personalize": {
    "batchInferenceJob*": [
      "personalize:CreateBatchInferenceJob",
      "personalize:DescribeBatchInferenceJob"
    ],
    "batchSegmentJob*": [
      "personalize:CreateBatchSegmentJob",
      "personalize:DescribeBatchSegmentJob"
    ],
    "campaign*": [
      "personalize:CreateCampaign",
      "personalize:DeleteCampaign",
      "personalize:DescribeCampaign",
      "personalize:GetPersonalizedRanking",
      "personalize:GetRecommendations",
      "personalize:UpdateCampaign"
    ],
    "dataset*": [
      "personalize:CreateDataset",
      "personalize:DeleteDataset",
      "personalize:DescribeDataset",
      "personalize:PutItems",
      "personalize:PutUsers"
    ],
    "datasetExportJob*": [
      "personalize:CreateDatasetExportJob",
      "personalize:DescribeDatasetExportJob"
    ],
    "datasetGroup*": [
      "personalize:CreateDatasetGroup",
      "personalize:DeleteDatasetGroup",
      "personalize:DescribeDatasetGroup"
    ],
    "datasetImportJob*": [
      "personalize:CreateDatasetImportJob",
      "personalize:DescribeDatasetImportJob"
    ],
    "eventTracker*": [
      "personalize:CreateEventTracker",
      "personalize:DeleteEventTracker",
      "personalize:DescribeEventTracker"
    ],
    "filter*": [
      "personalize:CreateFilter",
      "personalize:DeleteFilter",
      "personalize:DescribeFilter"
    ],
    "metricAttribution*": [
      "personalize:CreateMetricAttribution",
      "personalize:DeleteMetricAttribution",
      "personalize:DescribeMetricAttribution",
      "personalize:UpdateMetricAttribution"
    ],
    "recommender*": [
      "personalize:CreateRecommender",
      "personalize:DeleteRecommender",
      "personalize:DescribeRecommender",
      "personalize:StartRecommender",
      "personalize:StopRecommender",
      "personalize:UpdateRecommender"
    ],
    "schema*": [
      "personalize:CreateSchema",
      "personalize:DeleteSchema",
      "personalize:DescribeSchema"
    ],
    "solution*": [
      "personalize:CreateSolution",
      "personalize:CreateSolutionVersion",
      "personalize:DeleteSolution",
      "personalize:DescribeSolution",
      "personalize:DescribeSolutionVersion",
      "personalize:GetSolutionMetrics",
      "personalize:StopSolutionVersionCreation"
    ],
    "algorithm*": [
      "personalize:DescribeAlgorithm"
    ],
    "featureTransformation*": [
      "personalize:DescribeFeatureTransformation"
    ],
    "recipe*": [
      "personalize:DescribeRecipe"
    ],
    "?": [
      "personalize:ListBatchInferenceJobs",
      "personalize:ListBatchSegmentJobs",
      "personalize:ListCampaigns",
      "personalize:ListDatasetExportJobs",
      "personalize:ListDatasetGroups",
      "personalize:ListDatasetImportJobs",
      "personalize:ListDatasets",
      "personalize:ListEventTrackers",
      "personalize:ListFilters",
      "personalize:ListMetricAttributionMetrics",
      "personalize:ListMetricAttributions",
      "personalize:ListRecipes",
      "personalize:ListRecommenders",
      "personalize:ListSchemas",
      "personalize:ListSolutionVersions",
      "personalize:ListSolutions",
      "personalize:ListTagsForResource",
      "personalize:PutEvents",
      "personalize:TagResource",
      "personalize:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonpersonalize.html"
  },
  "mobiletargeting": {
    "?": [
      "mobiletargeting:CreateApp",
      "mobiletargeting:CreateEmailTemplate",
      "mobiletargeting:CreateInAppTemplate",
      "mobiletargeting:CreatePushTemplate",
      "mobiletargeting:CreateRecommenderConfiguration",
      "mobiletargeting:CreateSmsTemplate",
      "mobiletargeting:CreateVoiceTemplate",
      "mobiletargeting:GetRecommenderConfigurations"
    ],
    "apps*": [
      "mobiletargeting:CreateCampaign",
      "mobiletargeting:CreateExportJob",
      "mobiletargeting:CreateImportJob",
      "mobiletargeting:CreateJourney",
      "mobiletargeting:CreateSegment",
      "mobiletargeting:DeleteAdmChannel",
      "mobiletargeting:DeleteApnsChannel",
      "mobiletargeting:DeleteApnsSandboxChannel",
      "mobiletargeting:DeleteApnsVoipChannel",
      "mobiletargeting:DeleteApnsVoipSandboxChannel",
      "mobiletargeting:DeleteApp",
      "mobiletargeting:DeleteBaiduChannel",
      "mobiletargeting:DeleteCampaign",
      "mobiletargeting:DeleteEmailChannel",
      "mobiletargeting:DeleteEndpoint",
      "mobiletargeting:DeleteEventStream",
      "mobiletargeting:DeleteGcmChannel",
      "mobiletargeting:DeleteJourney",
      "mobiletargeting:DeleteSegment",
      "mobiletargeting:DeleteSmsChannel",
      "mobiletargeting:DeleteUserEndpoints",
      "mobiletargeting:DeleteVoiceChannel",
      "mobiletargeting:GetAdmChannel",
      "mobiletargeting:GetApnsChannel",
      "mobiletargeting:GetApnsSandboxChannel",
      "mobiletargeting:GetApnsVoipChannel",
      "mobiletargeting:GetApnsVoipSandboxChannel",
      "mobiletargeting:GetApp",
      "mobiletargeting:GetApplicationDateRangeKpi",
      "mobiletargeting:GetApplicationSettings",
      "mobiletargeting:GetApps",
      "mobiletargeting:GetBaiduChannel",
      "mobiletargeting:GetCampaign",
      "mobiletargeting:GetCampaignActivities",
      "mobiletargeting:GetCampaignDateRangeKpi",
      "mobiletargeting:GetCampaignVersion",
      "mobiletargeting:GetCampaignVersions",
      "mobiletargeting:GetCampaigns",
      "mobiletargeting:GetChannels",
      "mobiletargeting:GetEmailChannel",
      "mobiletargeting:GetEndpoint",
      "mobiletargeting:GetEventStream",
      "mobiletargeting:GetExportJob",
      "mobiletargeting:GetExportJobs",
      "mobiletargeting:GetGcmChannel",
      "mobiletargeting:GetImportJob",
      "mobiletargeting:GetImportJobs",
      "mobiletargeting:GetInAppMessages",
      "mobiletargeting:GetJourney",
      "mobiletargeting:GetJourneyDateRangeKpi",
      "mobiletargeting:GetJourneyExecutionActivityMetrics",
      "mobiletargeting:GetJourneyExecutionMetrics",
      "mobiletargeting:GetSegment",
      "mobiletargeting:GetSegmentExportJobs",
      "mobiletargeting:GetSegmentImportJobs",
      "mobiletargeting:GetSegmentVersion",
      "mobiletargeting:GetSegmentVersions",
      "mobiletargeting:GetSegments",
      "mobiletargeting:GetSmsChannel",
      "mobiletargeting:GetUserEndpoints",
      "mobiletargeting:GetVoiceChannel",
      "mobiletargeting:ListJourneys",
      "mobiletargeting:PutEventStream",
      "mobiletargeting:PutEvents",
      "mobiletargeting:RemoveAttributes",
      "mobiletargeting:SendMessages",
      "mobiletargeting:SendOTPMessage",
      "mobiletargeting:SendUsersMessages",
      "mobiletargeting:UpdateAdmChannel",
      "mobiletargeting:UpdateApnsChannel",
      "mobiletargeting:UpdateApnsSandboxChannel",
      "mobiletargeting:UpdateApnsVoipChannel",
      "mobiletargeting:UpdateApnsVoipSandboxChannel",
      "mobiletargeting:UpdateApplicationSettings",
      "mobiletargeting:UpdateBaiduChannel",
      "mobiletargeting:UpdateCampaign",
      "mobiletargeting:UpdateEmailChannel",
      "mobiletargeting:UpdateEndpoint",
      "mobiletargeting:UpdateEndpointsBatch",
      "mobiletargeting:UpdateGcmChannel",
      "mobiletargeting:UpdateJourney",
      "mobiletargeting:UpdateJourneyState",
      "mobiletargeting:UpdateSegment",
      "mobiletargeting:UpdateSmsChannel",
      "mobiletargeting:UpdateVoiceChannel",
      "mobiletargeting:VerifyOTPMessage"
    ],
    "templates*": [
      "mobiletargeting:DeleteEmailTemplate",
      "mobiletargeting:DeleteInAppTemplate",
      "mobiletargeting:DeletePushTemplate",
      "mobiletargeting:DeleteSmsTemplate",
      "mobiletargeting:DeleteVoiceTemplate",
      "mobiletargeting:GetEmailTemplate",
      "mobiletargeting:GetInAppTemplate",
      "mobiletargeting:GetPushTemplate",
      "mobiletargeting:GetSmsTemplate",
      "mobiletargeting:GetVoiceTemplate",
      "mobiletargeting:ListTemplateVersions",
      "mobiletargeting:ListTemplates",
      "mobiletargeting:UpdateEmailTemplate",
      "mobiletargeting:UpdateInAppTemplate",
      "mobiletargeting:UpdatePushTemplate",
      "mobiletargeting:UpdateSmsTemplate",
      "mobiletargeting:UpdateTemplateActiveVersion",
      "mobiletargeting:UpdateVoiceTemplate"
    ],
    "recommenders*": [
      "mobiletargeting:DeleteRecommenderConfiguration",
      "mobiletargeting:GetRecommenderConfiguration",
      "mobiletargeting:UpdateRecommenderConfiguration"
    ],
    "journeys*": [
      "mobiletargeting:GetJourneyRunExecutionActivityMetrics",
      "mobiletargeting:GetJourneyRunExecutionMetrics",
      "mobiletargeting:GetJourneyRuns"
    ],
    "apps": [
      "mobiletargeting:ListTagsForResource",
      "mobiletargeting:TagResource",
      "mobiletargeting:UntagResource"
    ],
    "phone-number-validate*": [
      "mobiletargeting:PhoneNumberValidate"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonpinpoint.html"
  },
  "ses": {
    "configuration-set": [
      "ses:BatchGetMetricData",
      "ses:ListTagsForResource",
      "ses:TagResource",
      "ses:UntagResource"
    ],
    "configuration-set*": [
      "ses:CreateConfigurationSet",
      "ses:CreateConfigurationSetEventDestination",
      "ses:DeleteConfigurationSet",
      "ses:DeleteConfigurationSetEventDestination",
      "ses:GetConfigurationSet",
      "ses:GetConfigurationSetEventDestinations",
      "ses:PutConfigurationSetDeliveryOptions",
      "ses:PutConfigurationSetReputationOptions",
      "ses:PutConfigurationSetSendingOptions",
      "ses:PutConfigurationSetSuppressionOptions",
      "ses:PutConfigurationSetTrackingOptions",
      "ses:PutConfigurationSetVdmOptions",
      "ses:UpdateConfigurationSetEventDestination"
    ],
    "contact-list*": [
      "ses:CreateContact",
      "ses:CreateContactList",
      "ses:DeleteContact",
      "ses:DeleteContactList",
      "ses:GetContact",
      "ses:GetContactList",
      "ses:ListContacts",
      "ses:UpdateContact",
      "ses:UpdateContactList"
    ],
    "custom-verification-email-template*": [
      "ses:CreateCustomVerificationEmailTemplate",
      "ses:DeleteCustomVerificationEmailTemplate",
      "ses:GetCustomVerificationEmailTemplate",
      "ses:SendCustomVerificationEmail",
      "ses:UpdateCustomVerificationEmailTemplate"
    ],
    "dedicated-ip-pool*": [
      "ses:CreateDedicatedIpPool",
      "ses:DeleteDedicatedIpPool",
      "ses:GetDedicatedIpPool",
      "ses:GetDedicatedIps",
      "ses:PutDedicatedIpInPool"
    ],
    "identity*": [
      "ses:CreateDeliverabilityTestReport",
      "ses:CreateEmailIdentity",
      "ses:CreateEmailIdentityPolicy",
      "ses:DeleteEmailIdentity",
      "ses:DeleteEmailIdentityPolicy",
      "ses:GetDomainStatisticsReport",
      "ses:GetEmailIdentity",
      "ses:GetEmailIdentityPolicies",
      "ses:PutEmailIdentityConfigurationSetAttributes",
      "ses:PutEmailIdentityDkimAttributes",
      "ses:PutEmailIdentityDkimSigningAttributes",
      "ses:PutEmailIdentityFeedbackAttributes",
      "ses:PutEmailIdentityMailFromAttributes",
      "ses:SendBulkEmail",
      "ses:SendEmail",
      "ses:UpdateEmailIdentityPolicy"
    ],
    "template*": [
      "ses:CreateEmailTemplate",
      "ses:DeleteEmailTemplate",
      "ses:GetEmailTemplate",
      "ses:TestRenderEmailTemplate",
      "ses:UpdateEmailTemplate"
    ],
    "?": [
      "ses:CreateImportJob",
      "ses:DeleteSuppressedDestination",
      "ses:GetAccount",
      "ses:GetBlacklistReports",
      "ses:GetDedicatedIp",
      "ses:GetDeliverabilityDashboardOptions",
      "ses:GetDomainDeliverabilityCampaign",
      "ses:GetSuppressedDestination",
      "ses:ListConfigurationSets",
      "ses:ListContactLists",
      "ses:ListCustomVerificationEmailTemplates",
      "ses:ListDedicatedIpPools",
      "ses:ListDeliverabilityTestReports",
      "ses:ListDomainDeliverabilityCampaigns",
      "ses:ListEmailIdentities",
      "ses:ListEmailTemplates",
      "ses:ListImportJobs",
      "ses:ListSuppressedDestinations",
      "ses:PutAccountDedicatedIpWarmupAttributes",
      "ses:PutAccountDetails",
      "ses:PutAccountSendingAttributes",
      "ses:PutAccountSuppressionAttributes",
      "ses:PutAccountVdmAttributes",
      "ses:PutDedicatedIpWarmupAttributes",
      "ses:PutDeliverabilityDashboardOption",
      "ses:PutSuppressedDestination"
    ],
    "deliverability-test-report*": [
      "ses:GetDeliverabilityTestReport"
    ],
    "import-job*": [
      "ses:GetImportJob"
    ],
    "identity": [
      "ses:ListRecommendations"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsimpleemailservicev2.html"
  },
  "sms-voice": {
    "Pool*": [
      "sms-voice:AssociateOriginationIdentity",
      "sms-voice:DeletePool",
      "sms-voice:DisassociateOriginationIdentity",
      "sms-voice:ListPoolOriginationIdentities",
      "sms-voice:UpdatePool"
    ],
    "?": [
      "sms-voice:CreateConfigurationSet",
      "sms-voice:CreateOptOutList",
      "sms-voice:DeleteTextMessageSpendLimitOverride",
      "sms-voice:DeleteVoiceMessageSpendLimitOverride",
      "sms-voice:DescribeAccountAttributes",
      "sms-voice:DescribeAccountLimits",
      "sms-voice:DescribeSpendLimits",
      "sms-voice:SetTextMessageSpendLimitOverride",
      "sms-voice:SetVoiceMessageSpendLimitOverride"
    ],
    "ConfigurationSet*": [
      "sms-voice:CreateEventDestination",
      "sms-voice:DeleteConfigurationSet",
      "sms-voice:DeleteDefaultMessageType",
      "sms-voice:DeleteDefaultSenderId",
      "sms-voice:DeleteEventDestination",
      "sms-voice:SetDefaultMessageType",
      "sms-voice:SetDefaultSenderId",
      "sms-voice:UpdateEventDestination"
    ],
    "PhoneNumber": [
      "sms-voice:CreatePool",
      "sms-voice:DeleteKeyword",
      "sms-voice:DescribeKeywords",
      "sms-voice:DescribePhoneNumbers",
      "sms-voice:PutKeyword",
      "sms-voice:SendTextMessage",
      "sms-voice:SendVoiceMessage"
    ],
    "OptOutList*": [
      "sms-voice:DeleteOptOutList",
      "sms-voice:DeleteOptedOutNumber",
      "sms-voice:DescribeOptedOutNumbers",
      "sms-voice:PutOptedOutNumber"
    ],
    "ConfigurationSet": [
      "sms-voice:DescribeConfigurationSets",
      "sms-voice:ListTagsForResource",
      "sms-voice:TagResource",
      "sms-voice:UntagResource"
    ],
    "OptOutList": [
      "sms-voice:DescribeOptOutLists"
    ],
    "Pool": [
      "sms-voice:DescribePools",
      "sms-voice:RequestPhoneNumber"
    ],
    "SenderId": [
      "sms-voice:DescribeSenderIds"
    ],
    "PhoneNumber*": [
      "sms-voice:ReleasePhoneNumber",
      "sms-voice:UpdatePhoneNumber"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonpinpointsmsvoicev2.html"
  },
  "polly": {
    "lexicon*": [
      "polly:DeleteLexicon",
      "polly:GetLexicon",
      "polly:PutLexicon"
    ],
    "?": [
      "polly:DescribeVoices",
      "polly:GetSpeechSynthesisTask",
      "polly:ListLexicons",
      "polly:ListSpeechSynthesisTasks"
    ],
    "lexicon": [
      "polly:StartSpeechSynthesisTask",
      "polly:SynthesizeSpeech"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonpolly.html"
  },
  "pricing": {
    "?": [
      "pricing:DescribeServices",
      "pricing:GetAttributeValues",
      "pricing:GetPriceListFileUrl",
      "pricing:GetProducts",
      "pricing:ListPriceLists"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awspricelist.html"
  },
  "acm-pca": {
    "?": [
      "acm-pca:CreateCertificateAuthority",
      "acm-pca:ListCertificateAuthorities"
    ],
    "certificate-authority*": [
      "acm-pca:CreateCertificateAuthorityAuditReport",
      "acm-pca:CreatePermission",
      "acm-pca:DeleteCertificateAuthority",
      "acm-pca:DeletePermission",
      "acm-pca:DeletePolicy",
      "acm-pca:DescribeCertificateAuthority",
      "acm-pca:DescribeCertificateAuthorityAuditReport",
      "acm-pca:GetCertificate",
      "acm-pca:GetCertificateAuthorityCertificate",
      "acm-pca:GetCertificateAuthorityCsr",
      "acm-pca:GetPolicy",
      "acm-pca:ImportCertificateAuthorityCertificate",
      "acm-pca:IssueCertificate",
      "acm-pca:ListPermissions",
      "acm-pca:ListTags",
      "acm-pca:PutPolicy",
      "acm-pca:RestoreCertificateAuthority",
      "acm-pca:RevokeCertificate",
      "acm-pca:TagCertificateAuthority",
      "acm-pca:UntagCertificateAuthority",
      "acm-pca:UpdateCertificateAuthority"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsprivatecertificateauthority.html"
  },
  "proton": {
    "environment-account-connection*": [
      "proton:AcceptEnvironmentAccountConnection",
      "proton:DeleteEnvironmentAccountConnection",
      "proton:GetEnvironmentAccountConnection",
      "proton:ListEnvironmentAccountConnections",
      "proton:RejectEnvironmentAccountConnection",
      "proton:UpdateEnvironmentAccountConnection"
    ],
    "component*": [
      "proton:CancelComponentDeployment",
      "proton:CreateComponent",
      "proton:DeleteComponent",
      "proton:GetComponent",
      "proton:ListComponentOutputs",
      "proton:ListComponentProvisionedResources",
      "proton:UpdateComponent"
    ],
    "environment*": [
      "proton:CancelEnvironmentDeployment",
      "proton:CreateEnvironment",
      "proton:DeleteEnvironment",
      "proton:GetEnvironment",
      "proton:ListEnvironmentOutputs",
      "proton:ListEnvironmentProvisionedResources",
      "proton:UpdateEnvironment"
    ],
    "service-instance*": [
      "proton:CancelServiceInstanceDeployment",
      "proton:GetServiceInstance",
      "proton:UpdateServiceInstance"
    ],
    "service*": [
      "proton:CancelServicePipelineDeployment",
      "proton:CreateService",
      "proton:DeleteService",
      "proton:GetService",
      "proton:ListServiceInstanceOutputs",
      "proton:ListServiceInstanceProvisionedResources",
      "proton:ListServicePipelineOutputs",
      "proton:ListServicePipelineProvisionedResources",
      "proton:UpdateService",
      "proton:UpdateServicePipeline"
    ],
    "?": [
      "proton:CreateEnvironmentAccountConnection",
      "proton:CreateTemplateSyncConfig",
      "proton:DeleteAccountRoles",
      "proton:DeleteTemplateSyncConfig",
      "proton:GetAccountRoles",
      "proton:GetAccountSettings",
      "proton:GetRepositorySyncStatus",
      "proton:GetResourceTemplateVersionStatusCounts",
      "proton:GetResourcesSummary",
      "proton:GetTemplateSyncConfig",
      "proton:GetTemplateSyncStatus",
      "proton:ListEnvironmentTemplates",
      "proton:ListEnvironments",
      "proton:ListRepositories",
      "proton:ListRepositorySyncDefinitions",
      "proton:ListServiceInstances",
      "proton:ListServiceTemplates",
      "proton:ListServices",
      "proton:UpdateAccountRoles",
      "proton:UpdateAccountSettings",
      "proton:UpdateTemplateSyncConfig"
    ],
    "environment-template*": [
      "proton:CreateEnvironmentTemplate",
      "proton:CreateEnvironmentTemplateMajorVersion",
      "proton:CreateEnvironmentTemplateMinorVersion",
      "proton:CreateEnvironmentTemplateVersion",
      "proton:DeleteEnvironmentTemplate",
      "proton:DeleteEnvironmentTemplateMajorVersion",
      "proton:DeleteEnvironmentTemplateMinorVersion",
      "proton:DeleteEnvironmentTemplateVersion",
      "proton:GetEnvironmentTemplate",
      "proton:GetEnvironmentTemplateMajorVersion",
      "proton:GetEnvironmentTemplateMinorVersion",
      "proton:GetEnvironmentTemplateVersion",
      "proton:ListEnvironmentTemplateMajorVersions",
      "proton:ListEnvironmentTemplateMinorVersions",
      "proton:ListEnvironmentTemplateVersions",
      "proton:UpdateEnvironmentTemplate",
      "proton:UpdateEnvironmentTemplateMajorVersion",
      "proton:UpdateEnvironmentTemplateMinorVersion",
      "proton:UpdateEnvironmentTemplateVersion"
    ],
    "repository*": [
      "proton:CreateRepository",
      "proton:DeleteRepository",
      "proton:GetRepository"
    ],
    "service-template*": [
      "proton:CreateServiceTemplate",
      "proton:CreateServiceTemplateMajorVersion",
      "proton:CreateServiceTemplateMinorVersion",
      "proton:CreateServiceTemplateVersion",
      "proton:DeleteServiceTemplate",
      "proton:DeleteServiceTemplateMajorVersion",
      "proton:DeleteServiceTemplateMinorVersion",
      "proton:DeleteServiceTemplateVersion",
      "proton:GetServiceTemplate",
      "proton:GetServiceTemplateMajorVersion",
      "proton:GetServiceTemplateMinorVersion",
      "proton:GetServiceTemplateVersion",
      "proton:ListServiceTemplateMajorVersions",
      "proton:ListServiceTemplateMinorVersions",
      "proton:ListServiceTemplateVersions",
      "proton:UpdateServiceTemplate",
      "proton:UpdateServiceTemplateMajorVersion",
      "proton:UpdateServiceTemplateMinorVersion",
      "proton:UpdateServiceTemplateVersion"
    ],
    "environment": [
      "proton:ListComponents",
      "proton:NotifyResourceDeploymentStatusChange"
    ],
    "component": [
      "proton:ListTagsForResource",
      "proton:TagResource",
      "proton:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsproton.html"
  },
  "purchase-orders": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awspurchaseordersconsole.html"
  },
  "qldb": {
    "stream*": [
      "qldb:CancelJournalKinesisStream",
      "qldb:DescribeJournalKinesisStream",
      "qldb:ListJournalKinesisStreamsForLedger",
      "qldb:StreamJournalToKinesis"
    ],
    "ledger*": [
      "qldb:CreateLedger",
      "qldb:DeleteLedger",
      "qldb:DescribeJournalS3Export",
      "qldb:DescribeLedger",
      "qldb:ExecuteStatement",
      "qldb:ExportJournalToS3",
      "qldb:GetBlock",
      "qldb:GetDigest",
      "qldb:GetRevision",
      "qldb:InsertSampleData",
      "qldb:ListJournalS3ExportsForLedger",
      "qldb:SendCommand",
      "qldb:ShowCatalog",
      "qldb:UpdateLedger",
      "qldb:UpdateLedgerPermissionsMode"
    ],
    "?": [
      "qldb:ListJournalS3Exports",
      "qldb:ListLedgers"
    ],
    "catalog": [
      "qldb:ListTagsForResource",
      "qldb:PartiQLSelect",
      "qldb:TagResource",
      "qldb:UntagResource"
    ],
    "table*": [
      "qldb:PartiQLCreateIndex",
      "qldb:PartiQLCreateTable",
      "qldb:PartiQLDelete",
      "qldb:PartiQLDropIndex",
      "qldb:PartiQLDropTable",
      "qldb:PartiQLHistoryFunction",
      "qldb:PartiQLInsert",
      "qldb:PartiQLRedact",
      "qldb:PartiQLUndropTable",
      "qldb:PartiQLUpdate"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonqldb.html"
  },
  "quicksight": {
    "ingestion*": [
      "quicksight:CancelIngestion",
      "quicksight:CreateIngestion",
      "quicksight:DescribeIngestion"
    ],
    "?": [
      "quicksight:CreateAccountCustomization",
      "quicksight:CreateAccountSubscription",
      "quicksight:CreateDataSource",
      "quicksight:DescribeAccountSettings",
      "quicksight:DescribeIpRestriction",
      "quicksight:GetSessionEmbedUrl",
      "quicksight:ListDataSets",
      "quicksight:ListDataSources",
      "quicksight:ListIngestions",
      "quicksight:ListNamespaces",
      "quicksight:UpdateAccountSettings",
      "quicksight:UpdateIpRestriction",
      "quicksight:UpdatePublicSharingSettings"
    ],
    "analysis*": [
      "quicksight:CreateAnalysis",
      "quicksight:DeleteAnalysis",
      "quicksight:DescribeAnalysis",
      "quicksight:DescribeAnalysisPermissions",
      "quicksight:ListAnalyses",
      "quicksight:RestoreAnalysis",
      "quicksight:SearchAnalyses",
      "quicksight:UpdateAnalysis",
      "quicksight:UpdateAnalysisPermissions"
    ],
    "dashboard*": [
      "quicksight:CreateDashboard",
      "quicksight:DeleteDashboard",
      "quicksight:DescribeDashboard",
      "quicksight:DescribeDashboardPermissions",
      "quicksight:GetDashboardEmbedUrl",
      "quicksight:ListDashboardVersions",
      "quicksight:ListDashboards",
      "quicksight:SearchDashboards",
      "quicksight:UpdateDashboard",
      "quicksight:UpdateDashboardPermissions",
      "quicksight:UpdateDashboardPublishedVersion"
    ],
    "datasource*": [
      "quicksight:CreateDataSet",
      "quicksight:DeleteDataSource",
      "quicksight:DescribeDataSource",
      "quicksight:DescribeDataSourcePermissions",
      "quicksight:SearchDataSources",
      "quicksight:UpdateDataSource",
      "quicksight:UpdateDataSourcePermissions"
    ],
    "folder*": [
      "quicksight:CreateFolder",
      "quicksight:CreateFolderMembership",
      "quicksight:DeleteFolder",
      "quicksight:DeleteFolderMembership",
      "quicksight:DescribeFolder",
      "quicksight:DescribeFolderPermissions",
      "quicksight:DescribeFolderResolvedPermissions",
      "quicksight:ListFolderMembers",
      "quicksight:ListFolders",
      "quicksight:SearchFolders",
      "quicksight:UpdateFolder",
      "quicksight:UpdateFolderPermissions"
    ],
    "group*": [
      "quicksight:CreateGroup",
      "quicksight:CreateGroupMembership",
      "quicksight:DeleteGroup",
      "quicksight:DeleteGroupMembership",
      "quicksight:DescribeGroup",
      "quicksight:DescribeGroupMembership",
      "quicksight:ListGroupMemberships",
      "quicksight:ListGroups",
      "quicksight:SearchGroups",
      "quicksight:UpdateGroup"
    ],
    "assignment*": [
      "quicksight:CreateIAMPolicyAssignment",
      "quicksight:DeleteIAMPolicyAssignment",
      "quicksight:DescribeIAMPolicyAssignment",
      "quicksight:ListIAMPolicyAssignments",
      "quicksight:ListIAMPolicyAssignmentsForUser",
      "quicksight:UpdateIAMPolicyAssignment"
    ],
    "namespace*": [
      "quicksight:CreateNamespace",
      "quicksight:DeleteNamespace",
      "quicksight:DescribeNamespace",
      "quicksight:GenerateEmbedUrlForAnonymousUser"
    ],
    "template*": [
      "quicksight:CreateTemplate",
      "quicksight:CreateTemplateAlias",
      "quicksight:DeleteTemplate",
      "quicksight:DeleteTemplateAlias",
      "quicksight:DescribeTemplate",
      "quicksight:DescribeTemplateAlias",
      "quicksight:DescribeTemplatePermissions",
      "quicksight:ListTemplateAliases",
      "quicksight:ListTemplateVersions",
      "quicksight:ListTemplates",
      "quicksight:UpdateTemplate",
      "quicksight:UpdateTemplateAlias",
      "quicksight:UpdateTemplatePermissions"
    ],
    "theme*": [
      "quicksight:CreateTheme",
      "quicksight:CreateThemeAlias",
      "quicksight:DeleteTheme",
      "quicksight:DeleteThemeAlias",
      "quicksight:DescribeTheme",
      "quicksight:DescribeThemeAlias",
      "quicksight:DescribeThemePermissions",
      "quicksight:ListThemeAliases",
      "quicksight:ListThemeVersions",
      "quicksight:ListThemes",
      "quicksight:UpdateTheme",
      "quicksight:UpdateThemeAlias",
      "quicksight:UpdateThemePermissions"
    ],
    "customization*": [
      "quicksight:DeleteAccountCustomization",
      "quicksight:DescribeAccountCustomization",
      "quicksight:UpdateAccountCustomization"
    ],
    "account*": [
      "quicksight:DeleteAccountSubscription",
      "quicksight:DescribeAccountSubscription"
    ],
    "dataset*": [
      "quicksight:DeleteDataSet",
      "quicksight:DescribeDataSet",
      "quicksight:DescribeDataSetPermissions",
      "quicksight:SearchDataSets",
      "quicksight:UpdateDataSet",
      "quicksight:UpdateDataSetPermissions"
    ],
    "user*": [
      "quicksight:DeleteUser",
      "quicksight:DeleteUserByPrincipalId",
      "quicksight:DescribeUser",
      "quicksight:GenerateEmbedUrlForRegisteredUser",
      "quicksight:ListUserGroups",
      "quicksight:ListUsers",
      "quicksight:RegisterUser",
      "quicksight:UpdateUser"
    ],
    "customization": [
      "quicksight:ListTagsForResource"
    ],
    "analysis": [
      "quicksight:TagResource",
      "quicksight:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonquicksight.html"
  },
  "rds": {
    "cluster*": [
      "rds:AddRoleToDBCluster",
      "rds:BacktrackDBCluster",
      "rds:CreateDBCluster",
      "rds:CreateDBClusterEndpoint",
      "rds:CreateDBClusterSnapshot",
      "rds:CreateGlobalCluster",
      "rds:DeleteDBCluster",
      "rds:DeregisterDBProxyTargets",
      "rds:DescribeDBClusterBacktracks",
      "rds:DescribeDBClusters",
      "rds:DescribeDBProxyTargets",
      "rds:FailoverDBCluster",
      "rds:FailoverGlobalCluster",
      "rds:ModifyCurrentDBClusterCapacity",
      "rds:ModifyDBCluster",
      "rds:PromoteReadReplicaDBCluster",
      "rds:RebootDBCluster",
      "rds:RemoveFromGlobalCluster",
      "rds:RemoveRoleFromDBCluster",
      "rds:RestoreDBClusterFromS3",
      "rds:RestoreDBClusterFromSnapshot",
      "rds:RestoreDBClusterToPointInTime",
      "rds:StartDBCluster",
      "rds:StopDBCluster"
    ],
    "db*": [
      "rds:AddRoleToDBInstance",
      "rds:CreateDBInstance",
      "rds:CreateDBInstanceReadReplica",
      "rds:CreateDBSnapshot",
      "rds:DeleteDBInstance",
      "rds:DescribeDBInstances",
      "rds:DescribeDBLogFiles",
      "rds:DescribeValidDBInstanceModifications",
      "rds:DownloadCompleteDBLogFile",
      "rds:DownloadDBLogFilePortion",
      "rds:ModifyActivityStream",
      "rds:ModifyDBInstance",
      "rds:PromoteReadReplica",
      "rds:RebootDBInstance",
      "rds:RemoveRoleFromDBInstance",
      "rds:RestoreDBInstanceFromDBSnapshot",
      "rds:RestoreDBInstanceFromS3",
      "rds:RestoreDBInstanceToPointInTime",
      "rds:StartDBInstance",
      "rds:StartDBInstanceAutomatedBackupsReplication",
      "rds:StopDBInstance",
      "rds:StopDBInstanceAutomatedBackupsReplication",
      "rds:SwitchoverReadReplica"
    ],
    "es*": [
      "rds:AddSourceIdentifierToSubscription",
      "rds:CreateEventSubscription",
      "rds:DeleteEventSubscription",
      "rds:DescribeEventSubscriptions",
      "rds:ModifyEventSubscription",
      "rds:RemoveSourceIdentifierFromSubscription"
    ],
    "cev": [
      "rds:AddTagsToResource",
      "rds:ListTagsForResource",
      "rds:RemoveTagsFromResource"
    ],
    "cluster": [
      "rds:ApplyPendingMaintenanceAction",
      "rds:DescribePendingMaintenanceActions",
      "rds:StartActivityStream",
      "rds:StopActivityStream"
    ],
    "secgrp*": [
      "rds:AuthorizeDBSecurityGroupIngress",
      "rds:CreateDBSecurityGroup",
      "rds:DeleteDBSecurityGroup",
      "rds:DescribeDBSecurityGroups",
      "rds:RevokeDBSecurityGroupIngress"
    ],
    "?": [
      "rds:CancelExportTask",
      "rds:CreateDBProxy",
      "rds:DeleteDBInstanceAutomatedBackup",
      "rds:DescribeAccountAttributes",
      "rds:DescribeCertificates",
      "rds:DescribeDBEngineVersions",
      "rds:DescribeEngineDefaultClusterParameters",
      "rds:DescribeEngineDefaultParameters",
      "rds:DescribeEventCategories",
      "rds:DescribeEvents",
      "rds:DescribeExportTasks",
      "rds:DescribeOrderableDBInstanceOptions",
      "rds:DescribeReservedDBInstancesOfferings",
      "rds:DescribeSourceRegions",
      "rds:ModifyCertificates",
      "rds:StartExportTask"
    ],
    "cluster-pg*": [
      "rds:CopyDBClusterParameterGroup",
      "rds:CreateDBClusterParameterGroup",
      "rds:DeleteDBClusterParameterGroup",
      "rds:DescribeDBClusterParameterGroups",
      "rds:DescribeDBClusterParameters",
      "rds:ModifyDBClusterParameterGroup",
      "rds:ResetDBClusterParameterGroup"
    ],
    "cluster-snapshot*": [
      "rds:CopyDBClusterSnapshot",
      "rds:DeleteDBClusterSnapshot",
      "rds:DescribeDBClusterSnapshotAttributes",
      "rds:DescribeDBClusterSnapshots",
      "rds:ModifyDBClusterSnapshotAttribute"
    ],
    "pg*": [
      "rds:CopyDBParameterGroup",
      "rds:CreateDBParameterGroup",
      "rds:DeleteDBParameterGroup",
      "rds:DescribeDBParameterGroups",
      "rds:DescribeDBParameters",
      "rds:ModifyDBParameterGroup",
      "rds:ResetDBParameterGroup"
    ],
    "snapshot*": [
      "rds:CopyDBSnapshot",
      "rds:DeleteDBSnapshot",
      "rds:DescribeDBSnapshotAttributes",
      "rds:DescribeDBSnapshots",
      "rds:ModifyDBSnapshot",
      "rds:ModifyDBSnapshotAttribute"
    ],
    "og*": [
      "rds:CopyOptionGroup",
      "rds:CreateOptionGroup",
      "rds:DeleteOptionGroup",
      "rds:DescribeOptionGroupOptions",
      "rds:DescribeOptionGroups",
      "rds:ModifyOptionGroup"
    ],
    "deployment*": [
      "rds:CreateBlueGreenDeployment",
      "rds:DeleteBlueGreenDeployment",
      "rds:SwitchoverBlueGreenDeployment"
    ],
    "cev*": [
      "rds:CreateCustomDBEngineVersion",
      "rds:DeleteCustomDBEngineVersion",
      "rds:ModifyCustomDBEngineVersion"
    ],
    "proxy*": [
      "rds:CreateDBProxyEndpoint",
      "rds:DeleteDBProxy",
      "rds:DescribeDBProxies",
      "rds:DescribeDBProxyEndpoints",
      "rds:DescribeDBProxyTargetGroups",
      "rds:ModifyDBProxy"
    ],
    "subgrp*": [
      "rds:CreateDBSubnetGroup",
      "rds:DeleteDBSubnetGroup",
      "rds:DescribeDBSubnetGroups",
      "rds:ModifyDBSubnetGroup"
    ],
    "cluster-endpoint*": [
      "rds:DeleteDBClusterEndpoint",
      "rds:DescribeDBClusterEndpoints",
      "rds:ModifyDBClusterEndpoint"
    ],
    "proxy-endpoint*": [
      "rds:DeleteDBProxyEndpoint",
      "rds:ModifyDBProxyEndpoint"
    ],
    "global-cluster*": [
      "rds:DeleteGlobalCluster",
      "rds:DescribeGlobalClusters",
      "rds:ModifyGlobalCluster"
    ],
    "deployment": [
      "rds:DescribeBlueGreenDeployments"
    ],
    "db": [
      "rds:DescribeDBInstanceAutomatedBackups"
    ],
    "ri*": [
      "rds:DescribeReservedDBInstances",
      "rds:PurchaseReservedDBInstancesOffering"
    ],
    "target-group*": [
      "rds:ModifyDBProxyTargetGroup",
      "rds:RegisterDBProxyTargets"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonrds.html"
  },
  "rds-data": {
    "cluster*": [
      "rds-data:BatchExecuteStatement",
      "rds-data:BeginTransaction",
      "rds-data:CommitTransaction",
      "rds-data:ExecuteSql",
      "rds-data:ExecuteStatement",
      "rds-data:RollbackTransaction"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonrdsdataapi.html"
  },
  "rds-db": {
    "db-user*": [
      "rds-db:connect"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonrdsiamauthentication.html"
  },
  "rbin": {
    "rule*": [
      "rbin:CreateRule",
      "rbin:DeleteRule",
      "rbin:GetRule",
      "rbin:ListTagsForResource",
      "rbin:LockRule",
      "rbin:TagResource",
      "rbin:UnlockRule",
      "rbin:UntagResource",
      "rbin:UpdateRule"
    ],
    "?": [
      "rbin:ListRules"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsrecyclebin.html"
  },
  "redshift": {
    "?": [
      "redshift:AcceptReservedNodeExchange",
      "redshift:AddPartner",
      "redshift:AuthorizeEndpointAccess",
      "redshift:CreateAuthenticationProfile",
      "redshift:CreateEndpointAccess",
      "redshift:CreateScheduledAction",
      "redshift:DeleteAuthenticationProfile",
      "redshift:DeleteEndpointAccess",
      "redshift:DeletePartner",
      "redshift:DeleteScheduledAction",
      "redshift:DescribeAccountAttributes",
      "redshift:DescribeAuthenticationProfiles",
      "redshift:DescribeClusterDbRevisions",
      "redshift:DescribeClusterParameterGroups",
      "redshift:DescribeClusterSecurityGroups",
      "redshift:DescribeClusterSnapshots",
      "redshift:DescribeClusterSubnetGroups",
      "redshift:DescribeClusterTracks",
      "redshift:DescribeClusterVersions",
      "redshift:DescribeClusters",
      "redshift:DescribeDataShares",
      "redshift:DescribeDataSharesForConsumer",
      "redshift:DescribeDataSharesForProducer",
      "redshift:DescribeDefaultClusterParameters",
      "redshift:DescribeEndpointAccess",
      "redshift:DescribeEndpointAuthorization",
      "redshift:DescribeEventCategories",
      "redshift:DescribeEventSubscriptions",
      "redshift:DescribeEvents",
      "redshift:DescribeHsmClientCertificates",
      "redshift:DescribeHsmConfigurations",
      "redshift:DescribeNodeConfigurationOptions",
      "redshift:DescribeOrderableClusterOptions",
      "redshift:DescribePartners",
      "redshift:DescribeReservedNodeExchangeStatus",
      "redshift:DescribeReservedNodeOfferings",
      "redshift:DescribeReservedNodes",
      "redshift:DescribeScheduledActions",
      "redshift:DescribeSnapshotCopyGrants",
      "redshift:DescribeStorage",
      "redshift:DescribeTableRestoreStatus",
      "redshift:GetReservedNodeExchangeConfigurationOptions",
      "redshift:GetReservedNodeExchangeOfferings",
      "redshift:ModifyAuthenticationProfile",
      "redshift:ModifyClusterMaintenance",
      "redshift:ModifyEndpointAccess",
      "redshift:ModifyScheduledAction",
      "redshift:PurchaseReservedNodeOffering",
      "redshift:RevokeEndpointAccess",
      "redshift:UpdatePartnerStatus"
    ],
    "datashare*": [
      "redshift:AssociateDataShareConsumer",
      "redshift:AuthorizeDataShare",
      "redshift:DeauthorizeDataShare",
      "redshift:DisassociateDataShareConsumer",
      "redshift:RejectDataShare"
    ],
    "securitygroup*": [
      "redshift:AuthorizeClusterSecurityGroupIngress",
      "redshift:CreateClusterSecurityGroup",
      "redshift:DeleteClusterSecurityGroup",
      "redshift:RevokeClusterSecurityGroupIngress"
    ],
    "snapshot*": [
      "redshift:AuthorizeSnapshotAccess",
      "redshift:BatchDeleteClusterSnapshots",
      "redshift:BatchModifyClusterSnapshots",
      "redshift:CopyClusterSnapshot",
      "redshift:CreateClusterSnapshot",
      "redshift:DeleteClusterSnapshot",
      "redshift:ModifyClusterSnapshot",
      "redshift:RevokeSnapshotAccess"
    ],
    "cluster*": [
      "redshift:CancelResize",
      "redshift:CreateCluster",
      "redshift:DeleteCluster",
      "redshift:DescribeLoggingStatus",
      "redshift:DescribeResize",
      "redshift:DisableLogging",
      "redshift:DisableSnapshotCopy",
      "redshift:EnableLogging",
      "redshift:EnableSnapshotCopy",
      "redshift:ModifyAquaConfiguration",
      "redshift:ModifyCluster",
      "redshift:ModifyClusterDbRevision",
      "redshift:ModifyClusterIamRoles",
      "redshift:ModifyClusterSnapshotSchedule",
      "redshift:ModifySnapshotCopyRetentionPeriod",
      "redshift:PauseCluster",
      "redshift:RebootCluster",
      "redshift:ResizeCluster",
      "redshift:RestoreFromClusterSnapshot",
      "redshift:RestoreTableFromClusterSnapshot",
      "redshift:ResumeCluster",
      "redshift:RotateEncryptionKey"
    ],
    "parametergroup*": [
      "redshift:CreateClusterParameterGroup",
      "redshift:DeleteClusterParameterGroup",
      "redshift:DescribeClusterParameters",
      "redshift:ModifyClusterParameterGroup",
      "redshift:ResetClusterParameterGroup"
    ],
    "subnetgroup*": [
      "redshift:CreateClusterSubnetGroup",
      "redshift:DeleteClusterSubnetGroup",
      "redshift:ModifyClusterSubnetGroup"
    ],
    "dbuser*": [
      "redshift:CreateClusterUser",
      "redshift:GetClusterCredentials"
    ],
    "eventsubscription*": [
      "redshift:CreateEventSubscription",
      "redshift:DeleteEventSubscription",
      "redshift:ModifyEventSubscription"
    ],
    "hsmclientcertificate*": [
      "redshift:CreateHsmClientCertificate",
      "redshift:DeleteHsmClientCertificate"
    ],
    "hsmconfiguration*": [
      "redshift:CreateHsmConfiguration",
      "redshift:DeleteHsmConfiguration"
    ],
    "snapshotcopygrant*": [
      "redshift:CreateSnapshotCopyGrant",
      "redshift:DeleteSnapshotCopyGrant"
    ],
    "snapshotschedule*": [
      "redshift:CreateSnapshotSchedule",
      "redshift:DeleteSnapshotSchedule",
      "redshift:DescribeSnapshotSchedules",
      "redshift:ModifySnapshotSchedule"
    ],
    "cluster": [
      "redshift:CreateTags",
      "redshift:DeleteTags",
      "redshift:DescribeTags"
    ],
    "usagelimit*": [
      "redshift:CreateUsageLimit",
      "redshift:DeleteUsageLimit",
      "redshift:DescribeUsageLimits",
      "redshift:ModifyUsageLimit"
    ],
    "dbname": [
      "redshift:GetClusterCredentialsWithIAM"
    ],
    "dbgroup*": [
      "redshift:JoinGroup"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonredshift.html"
  },
  "redshift-data": {
    "cluster*": [
      "redshift-data:BatchExecuteStatement",
      "redshift-data:DescribeTable",
      "redshift-data:ExecuteStatement",
      "redshift-data:ListDatabases",
      "redshift-data:ListSchemas",
      "redshift-data:ListTables"
    ],
    "?": [
      "redshift-data:CancelStatement",
      "redshift-data:DescribeStatement",
      "redshift-data:GetStatementResult",
      "redshift-data:ListStatements"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonredshiftdataapi.html"
  },
  "redshift-serverless": {
    "recoveryPoint*": [
      "redshift-serverless:ConvertRecoveryPointToSnapshot",
      "redshift-serverless:GetRecoveryPoint",
      "redshift-serverless:RestoreFromRecoveryPoint"
    ],
    "endpointAccess*": [
      "redshift-serverless:CreateEndpointAccess",
      "redshift-serverless:DeleteEndpointAccess",
      "redshift-serverless:GetEndpointAccess",
      "redshift-serverless:ListEndpointAccess",
      "redshift-serverless:UpdateEndpointAccess"
    ],
    "namespace*": [
      "redshift-serverless:CreateNamespace",
      "redshift-serverless:DeleteNamespace",
      "redshift-serverless:GetNamespace",
      "redshift-serverless:RestoreTableFromSnapshot",
      "redshift-serverless:UpdateNamespace"
    ],
    "snapshot*": [
      "redshift-serverless:CreateSnapshot",
      "redshift-serverless:DeleteSnapshot",
      "redshift-serverless:GetSnapshot",
      "redshift-serverless:ListSnapshots",
      "redshift-serverless:RestoreFromSnapshot",
      "redshift-serverless:UpdateSnapshot"
    ],
    "?": [
      "redshift-serverless:CreateUsageLimit",
      "redshift-serverless:DeleteResourcePolicy",
      "redshift-serverless:DeleteUsageLimit",
      "redshift-serverless:GetResourcePolicy",
      "redshift-serverless:GetTableRestoreStatus",
      "redshift-serverless:GetUsageLimit",
      "redshift-serverless:ListNamespaces",
      "redshift-serverless:ListTableRestoreStatus",
      "redshift-serverless:ListUsageLimits",
      "redshift-serverless:ListWorkgroups",
      "redshift-serverless:PutResourcePolicy",
      "redshift-serverless:UpdateUsageLimit"
    ],
    "workgroup*": [
      "redshift-serverless:CreateWorkgroup",
      "redshift-serverless:DeleteWorkgroup",
      "redshift-serverless:GetCredentials",
      "redshift-serverless:GetWorkgroup",
      "redshift-serverless:UpdateWorkgroup"
    ],
    "namespace": [
      "redshift-serverless:ListRecoveryPoints",
      "redshift-serverless:ListTagsForResource",
      "redshift-serverless:TagResource",
      "redshift-serverless:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonredshiftserverless.html"
  },
  "rekognition": {
    "?": [
      "rekognition:CompareFaces",
      "rekognition:CreateCollection",
      "rekognition:DescribeProjects",
      "rekognition:DetectFaces",
      "rekognition:DetectLabels",
      "rekognition:DetectModerationLabels",
      "rekognition:DetectProtectiveEquipment",
      "rekognition:DetectText",
      "rekognition:GetCelebrityInfo",
      "rekognition:GetCelebrityRecognition",
      "rekognition:GetContentModeration",
      "rekognition:GetFaceDetection",
      "rekognition:GetFaceSearch",
      "rekognition:GetLabelDetection",
      "rekognition:GetPersonTracking",
      "rekognition:GetSegmentDetection",
      "rekognition:GetTextDetection",
      "rekognition:RecognizeCelebrities",
      "rekognition:StartCelebrityRecognition",
      "rekognition:StartContentModeration",
      "rekognition:StartFaceDetection",
      "rekognition:StartLabelDetection",
      "rekognition:StartPersonTracking",
      "rekognition:StartSegmentDetection",
      "rekognition:StartTextDetection"
    ],
    "project*": [
      "rekognition:CopyProjectVersion",
      "rekognition:CreateDataset",
      "rekognition:CreateProject",
      "rekognition:CreateProjectVersion",
      "rekognition:DeleteProject",
      "rekognition:DeleteProjectPolicy",
      "rekognition:DescribeProjectVersions",
      "rekognition:ListProjectPolicies",
      "rekognition:PutProjectPolicy"
    ],
    "collection*": [
      "rekognition:CreateStreamProcessor",
      "rekognition:DeleteCollection",
      "rekognition:DeleteFaces",
      "rekognition:DescribeCollection",
      "rekognition:IndexFaces",
      "rekognition:ListCollections",
      "rekognition:ListFaces",
      "rekognition:SearchFaces",
      "rekognition:SearchFacesByImage",
      "rekognition:StartFaceSearch"
    ],
    "dataset*": [
      "rekognition:DeleteDataset",
      "rekognition:DescribeDataset",
      "rekognition:DistributeDatasetEntries",
      "rekognition:ListDatasetEntries",
      "rekognition:ListDatasetLabels",
      "rekognition:UpdateDatasetEntries"
    ],
    "projectversion*": [
      "rekognition:DeleteProjectVersion",
      "rekognition:DetectCustomLabels",
      "rekognition:ListTagsForResource",
      "rekognition:StartProjectVersion",
      "rekognition:StopProjectVersion"
    ],
    "streamprocessor*": [
      "rekognition:DeleteStreamProcessor",
      "rekognition:DescribeStreamProcessor",
      "rekognition:ListStreamProcessors",
      "rekognition:StartStreamProcessor",
      "rekognition:StopStreamProcessor",
      "rekognition:UpdateStreamProcessor"
    ],
    "collection": [
      "rekognition:TagResource",
      "rekognition:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonrekognition.html"
  },
  "resiliencehub": {
    "application*": [
      "resiliencehub:AddDraftAppVersionResourceMappings",
      "resiliencehub:CreateAppVersionAppComponent",
      "resiliencehub:CreateAppVersionResource",
      "resiliencehub:CreateRecommendationTemplate",
      "resiliencehub:DeleteApp",
      "resiliencehub:DeleteAppAssessment",
      "resiliencehub:DeleteAppInputSource",
      "resiliencehub:DeleteAppVersionAppComponent",
      "resiliencehub:DeleteAppVersionResource",
      "resiliencehub:DeleteRecommendationTemplate",
      "resiliencehub:DescribeApp",
      "resiliencehub:DescribeAppAssessment",
      "resiliencehub:DescribeAppVersion",
      "resiliencehub:DescribeAppVersionAppComponent",
      "resiliencehub:DescribeAppVersionResource",
      "resiliencehub:DescribeAppVersionResourcesResolutionStatus",
      "resiliencehub:DescribeAppVersionTemplate",
      "resiliencehub:DescribeDraftAppVersionResourcesImportStatus",
      "resiliencehub:ImportResourcesToDraftAppVersion",
      "resiliencehub:ListAlarmRecommendations",
      "resiliencehub:ListAppComponentCompliances",
      "resiliencehub:ListAppComponentRecommendations",
      "resiliencehub:ListAppInputSources",
      "resiliencehub:ListAppVersionAppComponents",
      "resiliencehub:ListAppVersionResourceMappings",
      "resiliencehub:ListAppVersionResources",
      "resiliencehub:ListAppVersions",
      "resiliencehub:ListRecommendationTemplates",
      "resiliencehub:ListSopRecommendations",
      "resiliencehub:ListTestRecommendations",
      "resiliencehub:ListUnsupportedAppVersionResources",
      "resiliencehub:PublishAppVersion",
      "resiliencehub:PutDraftAppVersionTemplate",
      "resiliencehub:RemoveDraftAppVersionResourceMappings",
      "resiliencehub:ResolveAppVersionResources",
      "resiliencehub:StartAppAssessment",
      "resiliencehub:UpdateApp",
      "resiliencehub:UpdateAppVersion",
      "resiliencehub:UpdateAppVersionAppComponent",
      "resiliencehub:UpdateAppVersionResource"
    ],
    "?": [
      "resiliencehub:CreateApp",
      "resiliencehub:CreateResiliencyPolicy",
      "resiliencehub:ListAppAssessments",
      "resiliencehub:ListApps",
      "resiliencehub:ListResiliencyPolicies",
      "resiliencehub:ListSuggestedResiliencyPolicies",
      "resiliencehub:ListTagsForResource"
    ],
    "resiliency-policy*": [
      "resiliencehub:DeleteResiliencyPolicy",
      "resiliencehub:DescribeResiliencyPolicy",
      "resiliencehub:UpdateResiliencyPolicy"
    ],
    "app-assessment": [
      "resiliencehub:TagResource",
      "resiliencehub:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsresiliencehubservice.html"
  },
  "ram": {
    "resource-share-invitation*": [
      "ram:AcceptResourceShareInvitation",
      "ram:ListPendingInvitationResources",
      "ram:RejectResourceShareInvitation"
    ],
    "resource-share*": [
      "ram:AssociateResourceShare",
      "ram:DeleteResourceShare",
      "ram:DisassociateResourceShare",
      "ram:ListResourceSharePermissions",
      "ram:PromoteResourceShareCreatedFromPolicy",
      "ram:TagResource",
      "ram:UntagResource",
      "ram:UpdateResourceShare"
    ],
    "permission*": [
      "ram:AssociateResourceSharePermission",
      "ram:DisassociateResourceSharePermission",
      "ram:GetPermission"
    ],
    "?": [
      "ram:CreateResourceShare",
      "ram:EnableSharingWithAwsOrganization",
      "ram:GetResourcePolicies",
      "ram:GetResourceShareAssociations",
      "ram:GetResourceShareInvitations",
      "ram:GetResourceShares",
      "ram:ListPermissionVersions",
      "ram:ListPermissions",
      "ram:ListPrincipals",
      "ram:ListResourceTypes",
      "ram:ListResources"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsresourceaccessmanager.html"
  },
  "resource-explorer-2": {
    "view*": [
      "resource-explorer-2:AssociateDefaultView",
      "resource-explorer-2:DeleteView",
      "resource-explorer-2:GetView",
      "resource-explorer-2:Search",
      "resource-explorer-2:UpdateView"
    ],
    "?": [
      "resource-explorer-2:BatchGetView",
      "resource-explorer-2:CreateIndex",
      "resource-explorer-2:CreateView",
      "resource-explorer-2:DisassociateDefaultView",
      "resource-explorer-2:GetDefaultView",
      "resource-explorer-2:GetIndex",
      "resource-explorer-2:ListIndexes",
      "resource-explorer-2:ListSupportedResourceTypes",
      "resource-explorer-2:ListViews"
    ],
    "index*": [
      "resource-explorer-2:DeleteIndex",
      "resource-explorer-2:UpdateIndexType"
    ],
    "index": [
      "resource-explorer-2:ListTagsForResource",
      "resource-explorer-2:TagResource",
      "resource-explorer-2:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsresourceexplorer.html"
  },
  "tag": {
    "?": [
      "tag:DescribeReportCreation",
      "tag:GetComplianceSummary",
      "tag:GetResources",
      "tag:GetTagKeys",
      "tag:GetTagValues",
      "tag:StartReportCreation",
      "tag:TagResources",
      "tag:UntagResources"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonresourcegrouptaggingapi.html"
  },
  "resource-groups": {
    "?": [
      "resource-groups:CreateGroup",
      "resource-groups:GetAccountSettings",
      "resource-groups:ListGroups",
      "resource-groups:SearchResources",
      "resource-groups:UpdateAccountSettings"
    ],
    "group*": [
      "resource-groups:DeleteGroup",
      "resource-groups:GetGroup",
      "resource-groups:GetGroupConfiguration",
      "resource-groups:GetGroupQuery",
      "resource-groups:GetTags",
      "resource-groups:GroupResources",
      "resource-groups:ListGroupResources",
      "resource-groups:PutGroupConfiguration",
      "resource-groups:Tag",
      "resource-groups:UngroupResources",
      "resource-groups:Untag",
      "resource-groups:UpdateGroup",
      "resource-groups:UpdateGroupQuery"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsresourcegroups.html"
  },
  "rhelkb": {
    "?": [
      "rhelkb:GetRhelURL"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonrhelknowledgebaseportal.html"
  },
  "robomaker": {
    "?": [
      "robomaker:BatchDeleteWorlds",
      "robomaker:BatchDescribeSimulationJob",
      "robomaker:CreateDeploymentJob",
      "robomaker:CreateFleet",
      "robomaker:CreateRobot",
      "robomaker:CreateRobotApplication",
      "robomaker:CreateSimulationApplication",
      "robomaker:CreateSimulationJob",
      "robomaker:CreateWorldTemplate",
      "robomaker:ListDeploymentJobs",
      "robomaker:ListFleets",
      "robomaker:ListRobotApplications",
      "robomaker:ListRobots",
      "robomaker:ListSimulationApplications",
      "robomaker:ListSimulationJobBatches",
      "robomaker:ListSimulationJobs",
      "robomaker:ListWorldExportJobs",
      "robomaker:ListWorldGenerationJobs",
      "robomaker:ListWorldTemplates",
      "robomaker:ListWorlds",
      "robomaker:StartSimulationJobBatch"
    ],
    "deploymentJob*": [
      "robomaker:CancelDeploymentJob",
      "robomaker:DescribeDeploymentJob"
    ],
    "simulationJob*": [
      "robomaker:CancelSimulationJob",
      "robomaker:DescribeSimulationJob",
      "robomaker:RestartSimulationJob"
    ],
    "simulationJobBatch*": [
      "robomaker:CancelSimulationJobBatch",
      "robomaker:DescribeSimulationJobBatch"
    ],
    "worldExportJob*": [
      "robomaker:CancelWorldExportJob",
      "robomaker:DescribeWorldExportJob"
    ],
    "worldGenerationJob*": [
      "robomaker:CancelWorldGenerationJob",
      "robomaker:DescribeWorldGenerationJob"
    ],
    "robotApplication*": [
      "robomaker:CreateRobotApplicationVersion",
      "robomaker:DeleteRobotApplication",
      "robomaker:DescribeRobotApplication",
      "robomaker:UpdateRobotApplication"
    ],
    "simulationApplication*": [
      "robomaker:CreateSimulationApplicationVersion",
      "robomaker:DeleteSimulationApplication",
      "robomaker:DescribeSimulationApplication",
      "robomaker:UpdateSimulationApplication"
    ],
    "world*": [
      "robomaker:CreateWorldExportJob",
      "robomaker:DescribeWorld"
    ],
    "worldTemplate*": [
      "robomaker:CreateWorldGenerationJob",
      "robomaker:DeleteWorldTemplate",
      "robomaker:DescribeWorldTemplate",
      "robomaker:GetWorldTemplateBody",
      "robomaker:UpdateWorldTemplate"
    ],
    "deploymentFleet*": [
      "robomaker:DeleteFleet",
      "robomaker:DeregisterRobot",
      "robomaker:DescribeFleet",
      "robomaker:RegisterRobot",
      "robomaker:SyncDeploymentJob"
    ],
    "robot*": [
      "robomaker:DeleteRobot",
      "robomaker:DescribeRobot"
    ],
    "deploymentFleet": [
      "robomaker:ListTagsForResource",
      "robomaker:TagResource",
      "robomaker:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsrobomaker.html"
  },
  "route53": {
    "hostedzone*": [
      "route53:ActivateKeySigningKey",
      "route53:ChangeResourceRecordSets",
      "route53:CreateKeySigningKey",
      "route53:CreateQueryLoggingConfig",
      "route53:CreateTrafficPolicyInstance",
      "route53:CreateVPCAssociationAuthorization",
      "route53:DeactivateKeySigningKey",
      "route53:DeleteHostedZone",
      "route53:DeleteKeySigningKey",
      "route53:DeleteVPCAssociationAuthorization",
      "route53:DisableHostedZoneDNSSEC",
      "route53:EnableHostedZoneDNSSEC",
      "route53:GetDNSSEC",
      "route53:GetHostedZone",
      "route53:GetHostedZoneLimit",
      "route53:ListResourceRecordSets",
      "route53:ListTrafficPolicyInstancesByHostedZone",
      "route53:ListVPCAssociationAuthorizations",
      "route53:UpdateHostedZoneComment"
    ],
    "hostedzone": [
      "route53:AssociateVPCWithHostedZone",
      "route53:DisassociateVPCFromHostedZone",
      "route53:ListQueryLoggingConfigs"
    ],
    "cidrcollection*": [
      "route53:ChangeCidrCollection",
      "route53:DeleteCidrCollection",
      "route53:ListCidrBlocks",
      "route53:ListCidrLocations"
    ],
    "healthcheck*": [
      "route53:ChangeTagsForResource",
      "route53:DeleteHealthCheck",
      "route53:GetHealthCheck",
      "route53:GetHealthCheckLastFailureReason",
      "route53:GetHealthCheckStatus",
      "route53:UpdateHealthCheck"
    ],
    "?": [
      "route53:CreateCidrCollection",
      "route53:CreateHealthCheck",
      "route53:CreateHostedZone",
      "route53:CreateReusableDelegationSet",
      "route53:CreateTrafficPolicy",
      "route53:GetAccountLimit",
      "route53:GetCheckerIpRanges",
      "route53:GetGeoLocation",
      "route53:GetHealthCheckCount",
      "route53:GetHostedZoneCount",
      "route53:GetTrafficPolicyInstanceCount",
      "route53:ListCidrCollections",
      "route53:ListGeoLocations",
      "route53:ListHealthChecks",
      "route53:ListHostedZones",
      "route53:ListHostedZonesByName",
      "route53:ListHostedZonesByVPC",
      "route53:ListReusableDelegationSets",
      "route53:ListTrafficPolicies",
      "route53:ListTrafficPolicyInstances",
      "route53:TestDNSAnswer"
    ],
    "trafficpolicy*": [
      "route53:CreateTrafficPolicyVersion",
      "route53:DeleteTrafficPolicy",
      "route53:GetTrafficPolicy",
      "route53:ListTrafficPolicyInstancesByPolicy",
      "route53:ListTrafficPolicyVersions",
      "route53:UpdateTrafficPolicyComment"
    ],
    "queryloggingconfig*": [
      "route53:DeleteQueryLoggingConfig",
      "route53:GetQueryLoggingConfig"
    ],
    "delegationset*": [
      "route53:DeleteReusableDelegationSet",
      "route53:GetReusableDelegationSet",
      "route53:GetReusableDelegationSetLimit"
    ],
    "trafficpolicyinstance*": [
      "route53:DeleteTrafficPolicyInstance",
      "route53:GetTrafficPolicyInstance",
      "route53:UpdateTrafficPolicyInstance"
    ],
    "change*": [
      "route53:GetChange"
    ],
    "healthcheck": [
      "route53:ListTagsForResource",
      "route53:ListTagsForResources"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonroute53.html"
  },
  "arc-zonal-shift": {
    "ALB*": [
      "arc-zonal-shift:CancelZonalShift",
      "arc-zonal-shift:GetManagedResource",
      "arc-zonal-shift:StartZonalShift",
      "arc-zonal-shift:UpdateZonalShift"
    ],
    "?": [
      "arc-zonal-shift:ListManagedResources",
      "arc-zonal-shift:ListZonalShifts"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonroute53applicationrecoverycontroller-zonalshift.html"
  },
  "route53domains": {
    "?": [
      "route53domains:AcceptDomainTransferFromAnotherAwsAccount",
      "route53domains:AssociateDelegationSignerToDomain",
      "route53domains:CancelDomainTransferToAnotherAwsAccount",
      "route53domains:CheckDomainAvailability",
      "route53domains:CheckDomainTransferability",
      "route53domains:DeleteDomain",
      "route53domains:DeleteTagsForDomain",
      "route53domains:DisableDomainAutoRenew",
      "route53domains:DisableDomainTransferLock",
      "route53domains:DisassociateDelegationSignerFromDomain",
      "route53domains:EnableDomainAutoRenew",
      "route53domains:EnableDomainTransferLock",
      "route53domains:GetContactReachabilityStatus",
      "route53domains:GetDomainDetail",
      "route53domains:GetDomainSuggestions",
      "route53domains:GetOperationDetail",
      "route53domains:ListDomains",
      "route53domains:ListOperations",
      "route53domains:ListPrices",
      "route53domains:ListTagsForDomain",
      "route53domains:PushDomain",
      "route53domains:RegisterDomain",
      "route53domains:RejectDomainTransferFromAnotherAwsAccount",
      "route53domains:RenewDomain",
      "route53domains:ResendContactReachabilityEmail",
      "route53domains:ResendOperationAuthorization",
      "route53domains:RetrieveDomainAuthCode",
      "route53domains:TransferDomain",
      "route53domains:TransferDomainToAnotherAwsAccount",
      "route53domains:UpdateDomainContact",
      "route53domains:UpdateDomainContactPrivacy",
      "route53domains:UpdateDomainNameservers",
      "route53domains:UpdateTagsForDomain",
      "route53domains:ViewBilling"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonroute53domains.html"
  },
  "route53-recovery-cluster": {
    "routingcontrol*": [
      "route53-recovery-cluster:GetRoutingControlState",
      "route53-recovery-cluster:UpdateRoutingControlState",
      "route53-recovery-cluster:UpdateRoutingControlStates"
    ],
    "?": [
      "route53-recovery-cluster:ListRoutingControls"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonroute53recoverycluster.html"
  },
  "route53-recovery-control-config": {
    "cluster*": [
      "route53-recovery-control-config:CreateCluster",
      "route53-recovery-control-config:DeleteCluster",
      "route53-recovery-control-config:DescribeCluster"
    ],
    "controlpanel*": [
      "route53-recovery-control-config:CreateControlPanel",
      "route53-recovery-control-config:DeleteControlPanel",
      "route53-recovery-control-config:DescribeControlPanel",
      "route53-recovery-control-config:ListSafetyRules",
      "route53-recovery-control-config:UpdateControlPanel"
    ],
    "routingcontrol*": [
      "route53-recovery-control-config:CreateRoutingControl",
      "route53-recovery-control-config:DeleteRoutingControl",
      "route53-recovery-control-config:DescribeRoutingControl",
      "route53-recovery-control-config:DescribeRoutingControlByName",
      "route53-recovery-control-config:UpdateRoutingControl"
    ],
    "safetyrule*": [
      "route53-recovery-control-config:CreateSafetyRule",
      "route53-recovery-control-config:DeleteSafetyRule",
      "route53-recovery-control-config:DescribeSafetyRule",
      "route53-recovery-control-config:UpdateSafetyRule"
    ],
    "?": [
      "route53-recovery-control-config:ListAssociatedRoute53HealthChecks",
      "route53-recovery-control-config:ListClusters",
      "route53-recovery-control-config:ListControlPanels",
      "route53-recovery-control-config:ListRoutingControls",
      "route53-recovery-control-config:ListTagsForResource"
    ],
    "cluster": [
      "route53-recovery-control-config:TagResource",
      "route53-recovery-control-config:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonroute53recoverycontrols.html"
  },
  "route53-recovery-readiness": {
    "cell*": [
      "route53-recovery-readiness:CreateCell",
      "route53-recovery-readiness:DeleteCell",
      "route53-recovery-readiness:GetCell",
      "route53-recovery-readiness:GetCellReadinessSummary",
      "route53-recovery-readiness:UpdateCell"
    ],
    "?": [
      "route53-recovery-readiness:CreateCrossAccountAuthorization",
      "route53-recovery-readiness:DeleteCrossAccountAuthorization",
      "route53-recovery-readiness:ListCells",
      "route53-recovery-readiness:ListCrossAccountAuthorizations",
      "route53-recovery-readiness:ListReadinessChecks",
      "route53-recovery-readiness:ListRecoveryGroups",
      "route53-recovery-readiness:ListResourceSets",
      "route53-recovery-readiness:ListRules",
      "route53-recovery-readiness:ListTagsForResources"
    ],
    "readinesscheck*": [
      "route53-recovery-readiness:CreateReadinessCheck",
      "route53-recovery-readiness:DeleteReadinessCheck",
      "route53-recovery-readiness:GetReadinessCheck",
      "route53-recovery-readiness:GetReadinessCheckResourceStatus",
      "route53-recovery-readiness:GetReadinessCheckStatus",
      "route53-recovery-readiness:UpdateReadinessCheck"
    ],
    "recoverygroup*": [
      "route53-recovery-readiness:CreateRecoveryGroup",
      "route53-recovery-readiness:DeleteRecoveryGroup",
      "route53-recovery-readiness:GetArchitectureRecommendations",
      "route53-recovery-readiness:GetRecoveryGroup",
      "route53-recovery-readiness:GetRecoveryGroupReadinessSummary",
      "route53-recovery-readiness:UpdateRecoveryGroup"
    ],
    "resourceset*": [
      "route53-recovery-readiness:CreateResourceSet",
      "route53-recovery-readiness:DeleteResourceSet",
      "route53-recovery-readiness:GetResourceSet",
      "route53-recovery-readiness:UpdateResourceSet"
    ],
    "cell": [
      "route53-recovery-readiness:TagResource",
      "route53-recovery-readiness:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonroute53recoveryreadiness.html"
  },
  "route53resolver": {
    "firewall-rule-group-association*": [
      "route53resolver:AssociateFirewallRuleGroup",
      "route53resolver:DisassociateFirewallRuleGroup",
      "route53resolver:GetFirewallRuleGroupAssociation",
      "route53resolver:UpdateFirewallRuleGroupAssociation"
    ],
    "resolver-endpoint*": [
      "route53resolver:AssociateResolverEndpointIpAddress",
      "route53resolver:CreateResolverEndpoint",
      "route53resolver:DeleteResolverEndpoint",
      "route53resolver:DisassociateResolverEndpointIpAddress",
      "route53resolver:GetResolverEndpoint",
      "route53resolver:ListResolverEndpointIpAddresses",
      "route53resolver:UpdateResolverEndpoint"
    ],
    "resolver-query-log-config*": [
      "route53resolver:AssociateResolverQueryLogConfig",
      "route53resolver:DeleteResolverQueryLogConfig",
      "route53resolver:DisassociateResolverQueryLogConfig",
      "route53resolver:GetResolverQueryLogConfig",
      "route53resolver:GetResolverQueryLogConfigPolicy",
      "route53resolver:PutResolverQueryLogConfigPolicy"
    ],
    "resolver-rule*": [
      "route53resolver:AssociateResolverRule",
      "route53resolver:CreateResolverRule",
      "route53resolver:DeleteResolverRule",
      "route53resolver:DisassociateResolverRule",
      "route53resolver:GetResolverRule",
      "route53resolver:GetResolverRuleAssociation",
      "route53resolver:GetResolverRulePolicy",
      "route53resolver:PutResolverRulePolicy",
      "route53resolver:UpdateResolverRule"
    ],
    "firewall-domain-list*": [
      "route53resolver:CreateFirewallDomainList",
      "route53resolver:DeleteFirewallDomainList",
      "route53resolver:GetFirewallDomainList",
      "route53resolver:ImportFirewallDomains",
      "route53resolver:ListFirewallDomains",
      "route53resolver:UpdateFirewallDomains"
    ],
    "firewall-rule-group*": [
      "route53resolver:CreateFirewallRule",
      "route53resolver:CreateFirewallRuleGroup",
      "route53resolver:DeleteFirewallRule",
      "route53resolver:DeleteFirewallRuleGroup",
      "route53resolver:GetFirewallRuleGroup",
      "route53resolver:GetFirewallRuleGroupPolicy",
      "route53resolver:ListFirewallRules",
      "route53resolver:PutFirewallRuleGroupPolicy",
      "route53resolver:UpdateFirewallRule"
    ],
    "?": [
      "route53resolver:CreateResolverQueryLogConfig",
      "route53resolver:GetResolverQueryLogConfigAssociation",
      "route53resolver:ListFirewallDomainLists",
      "route53resolver:ListFirewallRuleGroupAssociations",
      "route53resolver:ListFirewallRuleGroups",
      "route53resolver:ListResolverEndpoints",
      "route53resolver:ListResolverQueryLogConfigAssociations",
      "route53resolver:ListResolverQueryLogConfigs",
      "route53resolver:ListResolverRuleAssociations",
      "route53resolver:ListResolverRules"
    ],
    "firewall-config*": [
      "route53resolver:GetFirewallConfig",
      "route53resolver:ListFirewallConfigs",
      "route53resolver:UpdateFirewallConfig"
    ],
    "resolver-config*": [
      "route53resolver:GetResolverConfig",
      "route53resolver:ListResolverConfigs",
      "route53resolver:UpdateResolverConfig"
    ],
    "resolver-dnssec-config*": [
      "route53resolver:GetResolverDnssecConfig",
      "route53resolver:ListResolverDnssecConfigs",
      "route53resolver:UpdateResolverDnssecConfig"
    ],
    "firewall-domain-list": [
      "route53resolver:ListTagsForResource"
    ],
    "firewall-config": [
      "route53resolver:TagResource",
      "route53resolver:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonroute53resolver.html"
  },
  "s3": {
    "object*": [
      "s3:AbortMultipartUpload",
      "s3:BypassGovernanceRetention",
      "s3:DeleteObject",
      "s3:DeleteObjectTagging",
      "s3:DeleteObjectVersion",
      "s3:DeleteObjectVersionTagging",
      "s3:GetObject",
      "s3:GetObjectAcl",
      "s3:GetObjectAttributes",
      "s3:GetObjectLegalHold",
      "s3:GetObjectRetention",
      "s3:GetObjectTagging",
      "s3:GetObjectTorrent",
      "s3:GetObjectVersion",
      "s3:GetObjectVersionAcl",
      "s3:GetObjectVersionAttributes",
      "s3:GetObjectVersionForReplication",
      "s3:GetObjectVersionTagging",
      "s3:GetObjectVersionTorrent",
      "s3:InitiateReplication",
      "s3:ListMultipartUploadParts",
      "s3:ObjectOwnerOverrideToBucketOwner",
      "s3:PutObject",
      "s3:PutObjectAcl",
      "s3:PutObjectLegalHold",
      "s3:PutObjectRetention",
      "s3:PutObjectTagging",
      "s3:PutObjectVersionAcl",
      "s3:PutObjectVersionTagging",
      "s3:ReplicateDelete",
      "s3:ReplicateObject",
      "s3:ReplicateTags",
      "s3:RestoreObject"
    ],
    "accesspoint*": [
      "s3:CreateAccessPoint",
      "s3:DeleteAccessPoint",
      "s3:DeleteAccessPointPolicy",
      "s3:GetAccessPointPolicy",
      "s3:GetAccessPointPolicyStatus",
      "s3:PutAccessPointPolicy"
    ],
    "objectlambdaaccesspoint*": [
      "s3:CreateAccessPointForObjectLambda",
      "s3:DeleteAccessPointForObjectLambda",
      "s3:DeleteAccessPointPolicyForObjectLambda",
      "s3:GetAccessPointConfigurationForObjectLambda",
      "s3:GetAccessPointForObjectLambda",
      "s3:GetAccessPointPolicyForObjectLambda",
      "s3:GetAccessPointPolicyStatusForObjectLambda",
      "s3:PutAccessPointConfigurationForObjectLambda",
      "s3:PutAccessPointPolicyForObjectLambda"
    ],
    "bucket*": [
      "s3:CreateBucket",
      "s3:DeleteBucket",
      "s3:DeleteBucketPolicy",
      "s3:DeleteBucketWebsite",
      "s3:GetAccelerateConfiguration",
      "s3:GetAnalyticsConfiguration",
      "s3:GetBucketAcl",
      "s3:GetBucketCORS",
      "s3:GetBucketLocation",
      "s3:GetBucketLogging",
      "s3:GetBucketNotification",
      "s3:GetBucketObjectLockConfiguration",
      "s3:GetBucketOwnershipControls",
      "s3:GetBucketPolicy",
      "s3:GetBucketPolicyStatus",
      "s3:GetBucketPublicAccessBlock",
      "s3:GetBucketRequestPayment",
      "s3:GetBucketTagging",
      "s3:GetBucketVersioning",
      "s3:GetBucketWebsite",
      "s3:GetEncryptionConfiguration",
      "s3:GetIntelligentTieringConfiguration",
      "s3:GetInventoryConfiguration",
      "s3:GetLifecycleConfiguration",
      "s3:GetMetricsConfiguration",
      "s3:GetReplicationConfiguration",
      "s3:ListBucket",
      "s3:ListBucketMultipartUploads",
      "s3:ListBucketVersions",
      "s3:PutAccelerateConfiguration",
      "s3:PutAnalyticsConfiguration",
      "s3:PutBucketAcl",
      "s3:PutBucketCORS",
      "s3:PutBucketLogging",
      "s3:PutBucketNotification",
      "s3:PutBucketObjectLockConfiguration",
      "s3:PutBucketOwnershipControls",
      "s3:PutBucketPolicy",
      "s3:PutBucketPublicAccessBlock",
      "s3:PutBucketRequestPayment",
      "s3:PutBucketTagging",
      "s3:PutBucketVersioning",
      "s3:PutBucketWebsite",
      "s3:PutEncryptionConfiguration",
      "s3:PutIntelligentTieringConfiguration",
      "s3:PutInventoryConfiguration",
      "s3:PutLifecycleConfiguration",
      "s3:PutMetricsConfiguration",
      "s3:PutReplicationConfiguration"
    ],
    "?": [
      "s3:CreateJob",
      "s3:GetAccessPoint",
      "s3:GetAccountPublicAccessBlock",
      "s3:ListAccessPoints",
      "s3:ListAccessPointsForObjectLambda",
      "s3:ListAllMyBuckets",
      "s3:ListJobs",
      "s3:ListMultiRegionAccessPoints",
      "s3:ListStorageLensConfigurations",
      "s3:PutAccessPointPublicAccessBlock",
      "s3:PutAccountPublicAccessBlock",
      "s3:PutStorageLensConfiguration"
    ],
    "multiregionaccesspoint*": [
      "s3:CreateMultiRegionAccessPoint",
      "s3:DeleteMultiRegionAccessPoint",
      "s3:GetMultiRegionAccessPoint",
      "s3:GetMultiRegionAccessPointPolicy",
      "s3:GetMultiRegionAccessPointPolicyStatus",
      "s3:GetMultiRegionAccessPointRoutes",
      "s3:PutMultiRegionAccessPointPolicy",
      "s3:SubmitMultiRegionAccessPointRoutes"
    ],
    "job*": [
      "s3:DeleteJobTagging",
      "s3:DescribeJob",
      "s3:GetJobTagging",
      "s3:PutJobTagging",
      "s3:UpdateJobPriority",
      "s3:UpdateJobStatus"
    ],
    "storagelensconfiguration*": [
      "s3:DeleteStorageLensConfiguration",
      "s3:DeleteStorageLensConfigurationTagging",
      "s3:GetStorageLensConfiguration",
      "s3:GetStorageLensConfigurationTagging",
      "s3:GetStorageLensDashboard",
      "s3:PutStorageLensConfigurationTagging"
    ],
    "multiregionaccesspointrequestarn*": [
      "s3:DescribeMultiRegionAccessPointOperation"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazons3.html"
  },
  "glacier": {
    "vault*": [
      "glacier:AbortMultipartUpload",
      "glacier:AbortVaultLock",
      "glacier:AddTagsToVault",
      "glacier:CompleteMultipartUpload",
      "glacier:CompleteVaultLock",
      "glacier:CreateVault",
      "glacier:DeleteArchive",
      "glacier:DeleteVault",
      "glacier:DeleteVaultAccessPolicy",
      "glacier:DeleteVaultNotifications",
      "glacier:DescribeJob",
      "glacier:DescribeVault",
      "glacier:GetJobOutput",
      "glacier:GetVaultAccessPolicy",
      "glacier:GetVaultLock",
      "glacier:GetVaultNotifications",
      "glacier:InitiateJob",
      "glacier:InitiateMultipartUpload",
      "glacier:InitiateVaultLock",
      "glacier:ListJobs",
      "glacier:ListMultipartUploads",
      "glacier:ListParts",
      "glacier:ListTagsForVault",
      "glacier:RemoveTagsFromVault",
      "glacier:SetVaultAccessPolicy",
      "glacier:SetVaultNotifications",
      "glacier:UploadArchive",
      "glacier:UploadMultipartPart"
    ],
    "?": [
      "glacier:GetDataRetrievalPolicy",
      "glacier:ListProvisionedCapacity",
      "glacier:ListVaults",
      "glacier:PurchaseProvisionedCapacity",
      "glacier:SetDataRetrievalPolicy"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazons3glacier.html"
  },
  "s3-object-lambda": {
    "objectlambdaaccesspoint*": [
      "s3-object-lambda:AbortMultipartUpload",
      "s3-object-lambda:DeleteObject",
      "s3-object-lambda:DeleteObjectTagging",
      "s3-object-lambda:DeleteObjectVersion",
      "s3-object-lambda:DeleteObjectVersionTagging",
      "s3-object-lambda:GetObject",
      "s3-object-lambda:GetObjectAcl",
      "s3-object-lambda:GetObjectLegalHold",
      "s3-object-lambda:GetObjectRetention",
      "s3-object-lambda:GetObjectTagging",
      "s3-object-lambda:GetObjectVersion",
      "s3-object-lambda:GetObjectVersionAcl",
      "s3-object-lambda:GetObjectVersionTagging",
      "s3-object-lambda:ListBucket",
      "s3-object-lambda:ListBucketMultipartUploads",
      "s3-object-lambda:ListBucketVersions",
      "s3-object-lambda:ListMultipartUploadParts",
      "s3-object-lambda:PutObject",
      "s3-object-lambda:PutObjectAcl",
      "s3-object-lambda:PutObjectLegalHold",
      "s3-object-lambda:PutObjectRetention",
      "s3-object-lambda:PutObjectTagging",
      "s3-object-lambda:PutObjectVersionAcl",
      "s3-object-lambda:PutObjectVersionTagging",
      "s3-object-lambda:RestoreObject",
      "s3-object-lambda:WriteGetObjectResponse"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazons3objectlambda.html"
  },
  "s3-outposts": {
    "object*": [
      "s3-outposts:AbortMultipartUpload",
      "s3-outposts:DeleteObject",
      "s3-outposts:DeleteObjectTagging",
      "s3-outposts:DeleteObjectVersion",
      "s3-outposts:DeleteObjectVersionTagging",
      "s3-outposts:GetObject",
      "s3-outposts:GetObjectTagging",
      "s3-outposts:GetObjectVersion",
      "s3-outposts:GetObjectVersionTagging",
      "s3-outposts:ListMultipartUploadParts",
      "s3-outposts:PutObject",
      "s3-outposts:PutObjectAcl",
      "s3-outposts:PutObjectTagging",
      "s3-outposts:PutObjectVersionTagging"
    ],
    "accesspoint*": [
      "s3-outposts:CreateAccessPoint",
      "s3-outposts:DeleteAccessPoint",
      "s3-outposts:DeleteAccessPointPolicy",
      "s3-outposts:GetAccessPointPolicy",
      "s3-outposts:ListBucket",
      "s3-outposts:ListBucketMultipartUploads",
      "s3-outposts:PutAccessPointPolicy"
    ],
    "bucket*": [
      "s3-outposts:CreateBucket",
      "s3-outposts:DeleteBucket",
      "s3-outposts:DeleteBucketPolicy",
      "s3-outposts:GetBucket",
      "s3-outposts:GetBucketPolicy",
      "s3-outposts:GetBucketTagging",
      "s3-outposts:GetBucketVersioning",
      "s3-outposts:GetLifecycleConfiguration",
      "s3-outposts:ListBucketVersions",
      "s3-outposts:PutBucketPolicy",
      "s3-outposts:PutBucketTagging",
      "s3-outposts:PutBucketVersioning",
      "s3-outposts:PutLifecycleConfiguration"
    ],
    "endpoint*": [
      "s3-outposts:CreateEndpoint",
      "s3-outposts:DeleteEndpoint"
    ],
    "?": [
      "s3-outposts:GetAccessPoint",
      "s3-outposts:ListAccessPoints",
      "s3-outposts:ListEndpoints",
      "s3-outposts:ListOutpostsWithS3",
      "s3-outposts:ListRegionalBuckets",
      "s3-outposts:ListSharedEndpoints"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazons3onoutposts.html"
  },
  "sagemaker": {
    "action*": [
      "sagemaker:AddAssociation",
      "sagemaker:CreateAction",
      "sagemaker:DeleteAction",
      "sagemaker:DeleteAssociation",
      "sagemaker:DescribeAction",
      "sagemaker:UpdateAction"
    ],
    "action": [
      "sagemaker:AddTags",
      "sagemaker:DeleteTags",
      "sagemaker:ListTags"
    ],
    "experiment-trial*": [
      "sagemaker:AssociateTrialComponent",
      "sagemaker:CreateTrial",
      "sagemaker:DeleteTrial",
      "sagemaker:DescribeTrial",
      "sagemaker:DisassociateTrialComponent",
      "sagemaker:UpdateTrial"
    ],
    "model-package*": [
      "sagemaker:BatchDescribeModelPackage",
      "sagemaker:DeleteModelPackage",
      "sagemaker:DescribeModelPackage",
      "sagemaker:UpdateModelPackage"
    ],
    "feature-group*": [
      "sagemaker:BatchGetRecord",
      "sagemaker:CreateFeatureGroup",
      "sagemaker:DeleteFeatureGroup",
      "sagemaker:DeleteRecord",
      "sagemaker:DescribeFeatureGroup",
      "sagemaker:DescribeFeatureMetadata",
      "sagemaker:GetRecord",
      "sagemaker:PutRecord",
      "sagemaker:UpdateFeatureGroup",
      "sagemaker:UpdateFeatureMetadata"
    ],
    "experiment-trial-component*": [
      "sagemaker:BatchPutMetrics",
      "sagemaker:CreateTrialComponent",
      "sagemaker:DeleteTrialComponent",
      "sagemaker:DescribeTrialComponent",
      "sagemaker:UpdateTrialComponent"
    ],
    "algorithm*": [
      "sagemaker:CreateAlgorithm",
      "sagemaker:DeleteAlgorithm",
      "sagemaker:DescribeAlgorithm"
    ],
    "app*": [
      "sagemaker:CreateApp",
      "sagemaker:DeleteApp",
      "sagemaker:DescribeApp"
    ],
    "app-image-config*": [
      "sagemaker:CreateAppImageConfig",
      "sagemaker:DeleteAppImageConfig",
      "sagemaker:DescribeAppImageConfig",
      "sagemaker:UpdateAppImageConfig"
    ],
    "artifact*": [
      "sagemaker:CreateArtifact",
      "sagemaker:DeleteArtifact",
      "sagemaker:DescribeArtifact",
      "sagemaker:UpdateArtifact"
    ],
    "automl-job*": [
      "sagemaker:CreateAutoMLJob",
      "sagemaker:DescribeAutoMLJob",
      "sagemaker:StopAutoMLJob"
    ],
    "code-repository*": [
      "sagemaker:CreateCodeRepository",
      "sagemaker:DeleteCodeRepository",
      "sagemaker:DescribeCodeRepository",
      "sagemaker:UpdateCodeRepository"
    ],
    "compilation-job*": [
      "sagemaker:CreateCompilationJob",
      "sagemaker:DescribeCompilationJob",
      "sagemaker:StopCompilationJob"
    ],
    "context*": [
      "sagemaker:CreateContext",
      "sagemaker:DeleteContext",
      "sagemaker:DescribeContext",
      "sagemaker:UpdateContext"
    ],
    "data-quality-job-definition*": [
      "sagemaker:CreateDataQualityJobDefinition",
      "sagemaker:DeleteDataQualityJobDefinition",
      "sagemaker:DescribeDataQualityJobDefinition"
    ],
    "device-fleet*": [
      "sagemaker:CreateDeviceFleet",
      "sagemaker:DeleteDeviceFleet",
      "sagemaker:DescribeDeviceFleet",
      "sagemaker:GetDeviceFleetReport",
      "sagemaker:UpdateDeviceFleet"
    ],
    "domain*": [
      "sagemaker:CreateDomain",
      "sagemaker:DeleteDomain",
      "sagemaker:DescribeDomain",
      "sagemaker:UpdateDomain"
    ],
    "edge-deployment-plan*": [
      "sagemaker:CreateEdgeDeploymentPlan",
      "sagemaker:CreateEdgeDeploymentStage",
      "sagemaker:DeleteEdgeDeploymentPlan",
      "sagemaker:DeleteEdgeDeploymentStage",
      "sagemaker:DescribeEdgeDeploymentPlan",
      "sagemaker:StartEdgeDeploymentStage",
      "sagemaker:StopEdgeDeploymentStage"
    ],
    "edge-packaging-job*": [
      "sagemaker:CreateEdgePackagingJob",
      "sagemaker:DescribeEdgePackagingJob",
      "sagemaker:StopEdgePackagingJob"
    ],
    "endpoint*": [
      "sagemaker:CreateEndpoint",
      "sagemaker:DeleteEndpoint",
      "sagemaker:DescribeEndpoint",
      "sagemaker:InvokeEndpoint",
      "sagemaker:InvokeEndpointAsync",
      "sagemaker:UpdateEndpoint",
      "sagemaker:UpdateEndpointWeightsAndCapacities"
    ],
    "endpoint-config*": [
      "sagemaker:CreateEndpointConfig",
      "sagemaker:DeleteEndpointConfig",
      "sagemaker:DescribeEndpointConfig"
    ],
    "experiment*": [
      "sagemaker:CreateExperiment",
      "sagemaker:DeleteExperiment",
      "sagemaker:DescribeExperiment",
      "sagemaker:UpdateExperiment"
    ],
    "flow-definition*": [
      "sagemaker:CreateFlowDefinition",
      "sagemaker:DeleteFlowDefinition",
      "sagemaker:DescribeFlowDefinition",
      "sagemaker:StartHumanLoop"
    ],
    "hub*": [
      "sagemaker:CreateHub",
      "sagemaker:DeleteHub",
      "sagemaker:DeleteHubContent",
      "sagemaker:DescribeHub",
      "sagemaker:DescribeHubContent",
      "sagemaker:ImportHubContent",
      "sagemaker:ListHubContentVersions",
      "sagemaker:ListHubContents",
      "sagemaker:UpdateHub"
    ],
    "human-task-ui*": [
      "sagemaker:CreateHumanTaskUi",
      "sagemaker:DeleteHumanTaskUi",
      "sagemaker:DescribeHumanTaskUi"
    ],
    "hyper-parameter-tuning-job*": [
      "sagemaker:CreateHyperParameterTuningJob",
      "sagemaker:DescribeHyperParameterTuningJob",
      "sagemaker:ListTrainingJobsForHyperParameterTuningJob",
      "sagemaker:StopHyperParameterTuningJob"
    ],
    "image*": [
      "sagemaker:CreateImage",
      "sagemaker:CreateImageVersion",
      "sagemaker:DeleteImage",
      "sagemaker:DescribeImage",
      "sagemaker:ListAliases",
      "sagemaker:ListImageVersions",
      "sagemaker:UpdateImage"
    ],
    "inference-experiment*": [
      "sagemaker:CreateInferenceExperiment",
      "sagemaker:DeleteInferenceExperiment",
      "sagemaker:DescribeInferenceExperiment",
      "sagemaker:StartInferenceExperiment",
      "sagemaker:StopInferenceExperiment",
      "sagemaker:UpdateInferenceExperiment"
    ],
    "inference-recommendations-job*": [
      "sagemaker:CreateInferenceRecommendationsJob",
      "sagemaker:DescribeInferenceRecommendationsJob",
      "sagemaker:StopInferenceRecommendationsJob"
    ],
    "labeling-job*": [
      "sagemaker:CreateLabelingJob",
      "sagemaker:DescribeLabelingJob",
      "sagemaker:StopLabelingJob"
    ],
    "?": [
      "sagemaker:CreateLineageGroupPolicy",
      "sagemaker:DeleteLineageGroupPolicy",
      "sagemaker:DescribeLineageGroup",
      "sagemaker:DisableSagemakerServicecatalogPortfolio",
      "sagemaker:EnableSagemakerServicecatalogPortfolio",
      "sagemaker:GetLineageGroupPolicy",
      "sagemaker:GetSagemakerServicecatalogPortfolioStatus",
      "sagemaker:GetSearchSuggestions",
      "sagemaker:ListActions",
      "sagemaker:ListAlgorithms",
      "sagemaker:ListAppImageConfigs",
      "sagemaker:ListApps",
      "sagemaker:ListArtifacts",
      "sagemaker:ListAssociations",
      "sagemaker:ListAutoMLJobs",
      "sagemaker:ListCandidatesForAutoMLJob",
      "sagemaker:ListCodeRepositories",
      "sagemaker:ListCompilationJobs",
      "sagemaker:ListContexts",
      "sagemaker:ListDataQualityJobDefinitions",
      "sagemaker:ListDeviceFleets",
      "sagemaker:ListDevices",
      "sagemaker:ListDomains",
      "sagemaker:ListEdgeDeploymentPlans",
      "sagemaker:ListEdgePackagingJobs",
      "sagemaker:ListEndpointConfigs",
      "sagemaker:ListEndpoints",
      "sagemaker:ListExperiments",
      "sagemaker:ListFeatureGroups",
      "sagemaker:ListFlowDefinitions",
      "sagemaker:ListHubs",
      "sagemaker:ListHumanLoops",
      "sagemaker:ListHumanTaskUis",
      "sagemaker:ListHyperParameterTuningJobs",
      "sagemaker:ListImages",
      "sagemaker:ListInferenceExperiments",
      "sagemaker:ListInferenceRecommendationsJobSteps",
      "sagemaker:ListInferenceRecommendationsJobs",
      "sagemaker:ListLabelingJobs",
      "sagemaker:ListLineageGroups",
      "sagemaker:ListModelBiasJobDefinitions",
      "sagemaker:ListModelCards",
      "sagemaker:ListModelExplainabilityJobDefinitions",
      "sagemaker:ListModelMetadata",
      "sagemaker:ListModelPackageGroups",
      "sagemaker:ListModelQualityJobDefinitions",
      "sagemaker:ListModels",
      "sagemaker:ListMonitoringAlertHistory",
      "sagemaker:ListMonitoringAlerts",
      "sagemaker:ListMonitoringExecutions",
      "sagemaker:ListMonitoringSchedules",
      "sagemaker:ListNotebookInstanceLifecycleConfigs",
      "sagemaker:ListNotebookInstances",
      "sagemaker:ListPipelines",
      "sagemaker:ListProcessingJobs",
      "sagemaker:ListProjects",
      "sagemaker:ListSpaces",
      "sagemaker:ListStageDevices",
      "sagemaker:ListStudioLifecycleConfigs",
      "sagemaker:ListSubscribedWorkteams",
      "sagemaker:ListTrainingJobs",
      "sagemaker:ListTransformJobs",
      "sagemaker:ListTrialComponents",
      "sagemaker:ListTrials",
      "sagemaker:ListUserProfiles",
      "sagemaker:ListWorkforces",
      "sagemaker:ListWorkteams",
      "sagemaker:PutLineageGroupPolicy",
      "sagemaker:QueryLineage",
      "sagemaker:RenderUiTemplate",
      "sagemaker:Search"
    ],
    "model*": [
      "sagemaker:CreateModel",
      "sagemaker:DeleteModel",
      "sagemaker:DescribeModel"
    ],
    "model-bias-job-definition*": [
      "sagemaker:CreateModelBiasJobDefinition",
      "sagemaker:DeleteModelBiasJobDefinition",
      "sagemaker:DescribeModelBiasJobDefinition"
    ],
    "model-card*": [
      "sagemaker:CreateModelCard",
      "sagemaker:CreateModelCardExportJob",
      "sagemaker:DeleteModelCard",
      "sagemaker:DescribeModelCard",
      "sagemaker:ListModelCardExportJobs",
      "sagemaker:ListModelCardVersions",
      "sagemaker:UpdateModelCard"
    ],
    "model-explainability-job-definition*": [
      "sagemaker:CreateModelExplainabilityJobDefinition",
      "sagemaker:DeleteModelExplainabilityJobDefinition",
      "sagemaker:DescribeModelExplainabilityJobDefinition"
    ],
    "model-package": [
      "sagemaker:CreateModelPackage"
    ],
    "model-package-group*": [
      "sagemaker:CreateModelPackageGroup",
      "sagemaker:DeleteModelPackageGroup",
      "sagemaker:DeleteModelPackageGroupPolicy",
      "sagemaker:DescribeModelPackageGroup",
      "sagemaker:GetModelPackageGroupPolicy",
      "sagemaker:PutModelPackageGroupPolicy"
    ],
    "model-quality-job-definition*": [
      "sagemaker:CreateModelQualityJobDefinition",
      "sagemaker:DeleteModelQualityJobDefinition",
      "sagemaker:DescribeModelQualityJobDefinition"
    ],
    "monitoring-schedule*": [
      "sagemaker:CreateMonitoringSchedule",
      "sagemaker:DeleteMonitoringSchedule",
      "sagemaker:DescribeMonitoringSchedule",
      "sagemaker:StartMonitoringSchedule",
      "sagemaker:StopMonitoringSchedule",
      "sagemaker:UpdateMonitoringAlert",
      "sagemaker:UpdateMonitoringSchedule"
    ],
    "notebook-instance*": [
      "sagemaker:CreateNotebookInstance",
      "sagemaker:CreatePresignedNotebookInstanceUrl",
      "sagemaker:DeleteNotebookInstance",
      "sagemaker:DescribeNotebookInstance",
      "sagemaker:StartNotebookInstance",
      "sagemaker:StopNotebookInstance",
      "sagemaker:UpdateNotebookInstance"
    ],
    "notebook-instance-lifecycle-config*": [
      "sagemaker:CreateNotebookInstanceLifecycleConfig",
      "sagemaker:DeleteNotebookInstanceLifecycleConfig",
      "sagemaker:DescribeNotebookInstanceLifecycleConfig",
      "sagemaker:UpdateNotebookInstanceLifecycleConfig"
    ],
    "pipeline*": [
      "sagemaker:CreatePipeline",
      "sagemaker:DeletePipeline",
      "sagemaker:DescribePipeline",
      "sagemaker:ListPipelineExecutions",
      "sagemaker:StartPipelineExecution",
      "sagemaker:UpdatePipeline"
    ],
    "user-profile*": [
      "sagemaker:CreatePresignedDomainUrl",
      "sagemaker:CreateUserProfile",
      "sagemaker:DeleteUserProfile",
      "sagemaker:DescribeUserProfile",
      "sagemaker:UpdateUserProfile"
    ],
    "processing-job*": [
      "sagemaker:CreateProcessingJob",
      "sagemaker:DescribeProcessingJob",
      "sagemaker:StopProcessingJob"
    ],
    "project*": [
      "sagemaker:CreateProject",
      "sagemaker:DeleteProject",
      "sagemaker:DescribeProject",
      "sagemaker:UpdateProject"
    ],
    "space*": [
      "sagemaker:CreateSpace",
      "sagemaker:DeleteSpace",
      "sagemaker:DescribeSpace",
      "sagemaker:UpdateSpace"
    ],
    "studio-lifecycle-config*": [
      "sagemaker:CreateStudioLifecycleConfig",
      "sagemaker:DeleteStudioLifecycleConfig",
      "sagemaker:DescribeStudioLifecycleConfig"
    ],
    "training-job*": [
      "sagemaker:CreateTrainingJob",
      "sagemaker:DescribeTrainingJob",
      "sagemaker:StopTrainingJob",
      "sagemaker:UpdateTrainingJob"
    ],
    "transform-job*": [
      "sagemaker:CreateTransformJob",
      "sagemaker:DescribeTransformJob",
      "sagemaker:StopTransformJob"
    ],
    "workforce*": [
      "sagemaker:CreateWorkforce",
      "sagemaker:DeleteWorkforce",
      "sagemaker:DescribeWorkforce",
      "sagemaker:UpdateWorkforce"
    ],
    "workteam*": [
      "sagemaker:CreateWorkteam",
      "sagemaker:DeleteWorkteam",
      "sagemaker:DescribeSubscribedWorkteam",
      "sagemaker:DescribeWorkteam",
      "sagemaker:ListLabelingJobsForWorkteam",
      "sagemaker:UpdateWorkteam"
    ],
    "human-loop*": [
      "sagemaker:DeleteHumanLoop",
      "sagemaker:DescribeHumanLoop",
      "sagemaker:StopHumanLoop"
    ],
    "image-version*": [
      "sagemaker:DeleteImageVersion",
      "sagemaker:DescribeImageVersion",
      "sagemaker:UpdateImageVersion"
    ],
    "device*": [
      "sagemaker:DeregisterDevices",
      "sagemaker:DescribeDevice",
      "sagemaker:GetDeployments",
      "sagemaker:GetDeviceRegistration",
      "sagemaker:RegisterDevices",
      "sagemaker:SendHeartbeat",
      "sagemaker:UpdateDevices"
    ],
    "model-card-export-job*": [
      "sagemaker:DescribeModelCardExportJob"
    ],
    "pipeline-execution*": [
      "sagemaker:DescribePipelineDefinitionForExecution",
      "sagemaker:DescribePipelineExecution",
      "sagemaker:ListPipelineExecutionSteps",
      "sagemaker:ListPipelineParametersForExecution",
      "sagemaker:RetryPipelineExecution",
      "sagemaker:SendPipelineExecutionStepFailure",
      "sagemaker:SendPipelineExecutionStepSuccess",
      "sagemaker:StopPipelineExecution",
      "sagemaker:UpdatePipelineExecution"
    ],
    "model-package-group": [
      "sagemaker:ListModelPackages"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html"
  },
  "sagemaker-geospatial": {
    "EarthObservationJob*": [
      "sagemaker-geospatial:DeleteEarthObservationJob",
      "sagemaker-geospatial:ExportEarthObservationJob",
      "sagemaker-geospatial:GetEarthObservationJob",
      "sagemaker-geospatial:GetTile",
      "sagemaker-geospatial:StartEarthObservationJob",
      "sagemaker-geospatial:StopEarthObservationJob"
    ],
    "VectorEnrichmentJob*": [
      "sagemaker-geospatial:DeleteVectorEnrichmentJob",
      "sagemaker-geospatial:ExportVectorEnrichmentJob",
      "sagemaker-geospatial:GetVectorEnrichmentJob",
      "sagemaker-geospatial:StartVectorEnrichmentJob",
      "sagemaker-geospatial:StopVectorEnrichmentJob"
    ],
    "RasterDataCollection*": [
      "sagemaker-geospatial:GetRasterDataCollection"
    ],
    "?": [
      "sagemaker-geospatial:ListEarthObservationJobs",
      "sagemaker-geospatial:ListRasterDataCollections",
      "sagemaker-geospatial:ListVectorEnrichmentJobs",
      "sagemaker-geospatial:SearchRasterDataCollection"
    ],
    "EarthObservationJob": [
      "sagemaker-geospatial:ListTagsForResource",
      "sagemaker-geospatial:TagResource",
      "sagemaker-geospatial:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemakergeospatialcapabilities.html"
  },
  "sagemaker-groundtruth-synthetic": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemakergroundtruthsynthetic.html"
  },
  "savingsplans": {
    "?": [
      "savingsplans:CreateSavingsPlan",
      "savingsplans:DescribeSavingsPlansOfferingRates",
      "savingsplans:DescribeSavingsPlansOfferings"
    ],
    "savingsplan*": [
      "savingsplans:DeleteQueuedSavingsPlan",
      "savingsplans:DescribeSavingsPlanRates",
      "savingsplans:DescribeSavingsPlans",
      "savingsplans:ListTagsForResource",
      "savingsplans:TagResource",
      "savingsplans:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awssavingsplans.html"
  },
  "secretsmanager": {
    "Secret*": [
      "secretsmanager:CancelRotateSecret",
      "secretsmanager:CreateSecret",
      "secretsmanager:DeleteResourcePolicy",
      "secretsmanager:DeleteSecret",
      "secretsmanager:DescribeSecret",
      "secretsmanager:GetResourcePolicy",
      "secretsmanager:GetSecretValue",
      "secretsmanager:ListSecretVersionIds",
      "secretsmanager:PutResourcePolicy",
      "secretsmanager:PutSecretValue",
      "secretsmanager:RemoveRegionsFromReplication",
      "secretsmanager:ReplicateSecretToRegions",
      "secretsmanager:RestoreSecret",
      "secretsmanager:RotateSecret",
      "secretsmanager:StopReplicationToReplica",
      "secretsmanager:TagResource",
      "secretsmanager:UntagResource",
      "secretsmanager:UpdateSecret",
      "secretsmanager:UpdateSecretVersionStage",
      "secretsmanager:ValidateResourcePolicy"
    ],
    "?": [
      "secretsmanager:GetRandomPassword",
      "secretsmanager:ListSecrets"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awssecretsmanager.html"
  },
  "securityhub": {
    "hub": [
      "securityhub:AcceptAdministratorInvitation",
      "securityhub:AcceptInvitation",
      "securityhub:BatchDisableStandards",
      "securityhub:BatchEnableStandards",
      "securityhub:BatchUpdateFindings",
      "securityhub:CreateActionTarget",
      "securityhub:CreateInsight",
      "securityhub:CreateMembers",
      "securityhub:DeclineInvitations",
      "securityhub:DeleteActionTarget",
      "securityhub:DeleteInsight",
      "securityhub:DeleteInvitations",
      "securityhub:DeleteMembers",
      "securityhub:DescribeActionTargets",
      "securityhub:DescribeHub",
      "securityhub:DescribeOrganizationConfiguration",
      "securityhub:DescribeProducts",
      "securityhub:DescribeStandards",
      "securityhub:DescribeStandardsControls",
      "securityhub:DisableImportFindingsForProduct",
      "securityhub:DisableOrganizationAdminAccount",
      "securityhub:DisableSecurityHub",
      "securityhub:DisassociateFromAdministratorAccount",
      "securityhub:DisassociateFromMasterAccount",
      "securityhub:DisassociateMembers",
      "securityhub:EnableImportFindingsForProduct",
      "securityhub:EnableOrganizationAdminAccount",
      "securityhub:EnableSecurityHub",
      "securityhub:GetAdministratorAccount",
      "securityhub:GetEnabledStandards",
      "securityhub:GetFindings",
      "securityhub:GetInsightResults",
      "securityhub:GetInsights",
      "securityhub:GetInvitationsCount",
      "securityhub:GetMasterAccount",
      "securityhub:GetMembers",
      "securityhub:InviteMembers",
      "securityhub:ListEnabledProductsForImport",
      "securityhub:ListInvitations",
      "securityhub:ListMembers",
      "securityhub:ListOrganizationAdminAccounts",
      "securityhub:UpdateActionTarget",
      "securityhub:UpdateFindings",
      "securityhub:UpdateInsight",
      "securityhub:UpdateOrganizationConfiguration",
      "securityhub:UpdateSecurityHubConfiguration",
      "securityhub:UpdateStandardsControl"
    ],
    "?": [
      "securityhub:BatchGetSecurityControls",
      "securityhub:BatchGetStandardsControlAssociations",
      "securityhub:BatchUpdateStandardsControlAssociations",
      "securityhub:CreateFindingAggregator",
      "securityhub:ListFindingAggregators",
      "securityhub:ListSecurityControlDefinitions",
      "securityhub:ListStandardsControlAssociations"
    ],
    "product*": [
      "securityhub:BatchImportFindings"
    ],
    "finding-aggregator*": [
      "securityhub:DeleteFindingAggregator",
      "securityhub:GetFindingAggregator",
      "securityhub:UpdateFindingAggregator"
    ],
    "hub*": [
      "securityhub:ListTagsForResource",
      "securityhub:TagResource",
      "securityhub:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awssecurityhub.html"
  },
  "securitylake": {
    "?": [
      "securitylake:CreateAwsLogSource",
      "securitylake:CreateCustomLogSource",
      "securitylake:CreateDatalake",
      "securitylake:CreateDatalakeAutoEnable",
      "securitylake:CreateDatalakeDelegatedAdmin",
      "securitylake:CreateDatalakeExceptionsSubscription",
      "securitylake:CreateSubscriber",
      "securitylake:CreateSubscriptionNotificationConfiguration",
      "securitylake:DeleteAwsLogSource",
      "securitylake:DeleteCustomLogSource",
      "securitylake:DeleteDatalake",
      "securitylake:DeleteDatalakeAutoEnable",
      "securitylake:DeleteDatalakeDelegatedAdmin",
      "securitylake:DeleteDatalakeExceptionsSubscription",
      "securitylake:DeleteSubscriber",
      "securitylake:DeleteSubscriptionNotificationConfiguration",
      "securitylake:GetDatalake",
      "securitylake:GetDatalakeAutoEnable",
      "securitylake:GetDatalakeExceptionsExpiry",
      "securitylake:GetDatalakeExceptionsSubscription",
      "securitylake:GetDatalakeStatus",
      "securitylake:GetSubscriber",
      "securitylake:GetSubscriptionNotificationConfiguration",
      "securitylake:ListDatalakeExceptions",
      "securitylake:ListLogSources",
      "securitylake:ListSubscribers",
      "securitylake:UpdateDatalake",
      "securitylake:UpdateDatalakeExceptionsExpiry",
      "securitylake:UpdateDatalakeExceptionsSubscription",
      "securitylake:UpdateSubscriber",
      "securitylake:UpdateSubscriptionNotificationConfiguration"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsecuritylake.html"
  },
  "sts": {
    "role*": [
      "sts:AssumeRole",
      "sts:AssumeRoleWithSAML",
      "sts:AssumeRoleWithWebIdentity"
    ],
    "?": [
      "sts:DecodeAuthorizationMessage",
      "sts:GetAccessKeyInfo",
      "sts:GetCallerIdentity",
      "sts:GetSessionToken"
    ],
    "user": [
      "sts:GetFederationToken"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awssecuritytokenservice.html"
  },
  "sms": {
    "?": [
      "sms:CreateApp",
      "sms:CreateReplicationJob",
      "sms:DeleteApp",
      "sms:DeleteAppLaunchConfiguration",
      "sms:DeleteAppReplicationConfiguration",
      "sms:DeleteAppValidationConfiguration",
      "sms:DeleteReplicationJob",
      "sms:DeleteServerCatalog",
      "sms:DisassociateConnector",
      "sms:GenerateChangeSet",
      "sms:GenerateTemplate",
      "sms:GetApp",
      "sms:GetAppLaunchConfiguration",
      "sms:GetAppReplicationConfiguration",
      "sms:GetAppValidationConfiguration",
      "sms:GetAppValidationOutput",
      "sms:GetConnectors",
      "sms:GetReplicationJobs",
      "sms:GetReplicationRuns",
      "sms:GetServers",
      "sms:ImportAppCatalog",
      "sms:ImportServerCatalog",
      "sms:LaunchApp",
      "sms:ListApps",
      "sms:NotifyAppValidationOutput",
      "sms:PutAppLaunchConfiguration",
      "sms:PutAppReplicationConfiguration",
      "sms:PutAppValidationConfiguration",
      "sms:StartAppReplication",
      "sms:StartOnDemandAppReplication",
      "sms:StartOnDemandReplicationRun",
      "sms:StopAppReplication",
      "sms:TerminateApp",
      "sms:UpdateApp",
      "sms:UpdateReplicationJob"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsservermigrationservice.html"
  },
  "serverlessrepo": {
    "?": [
      "serverlessrepo:CreateApplication",
      "serverlessrepo:ListApplications",
      "serverlessrepo:SearchApplications"
    ],
    "applications*": [
      "serverlessrepo:CreateApplicationVersion",
      "serverlessrepo:CreateCloudFormationChangeSet",
      "serverlessrepo:CreateCloudFormationTemplate",
      "serverlessrepo:DeleteApplication",
      "serverlessrepo:GetApplication",
      "serverlessrepo:GetApplicationPolicy",
      "serverlessrepo:GetCloudFormationTemplate",
      "serverlessrepo:ListApplicationDependencies",
      "serverlessrepo:ListApplicationVersions",
      "serverlessrepo:PutApplicationPolicy",
      "serverlessrepo:UnshareApplication",
      "serverlessrepo:UpdateApplication"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsserverlessapplicationrepository.html"
  },
  "servicecatalog": {
    "Portfolio*": [
      "servicecatalog:AcceptPortfolioShare",
      "servicecatalog:AssociatePrincipalWithPortfolio",
      "servicecatalog:CreatePortfolio",
      "servicecatalog:CreatePortfolioShare",
      "servicecatalog:DeletePortfolio",
      "servicecatalog:DeletePortfolioShare",
      "servicecatalog:DescribePortfolio",
      "servicecatalog:DescribePortfolioShares",
      "servicecatalog:DisassociatePrincipalFromPortfolio",
      "servicecatalog:ListPortfolioAccess",
      "servicecatalog:ListPrincipalsForPortfolio",
      "servicecatalog:RejectPortfolioShare",
      "servicecatalog:UpdatePortfolio",
      "servicecatalog:UpdatePortfolioShare"
    ],
    "Application*": [
      "servicecatalog:AssociateAttributeGroup",
      "servicecatalog:AssociateResource",
      "servicecatalog:CreateApplication",
      "servicecatalog:DeleteApplication",
      "servicecatalog:DisassociateAttributeGroup",
      "servicecatalog:DisassociateResource",
      "servicecatalog:GetApplication",
      "servicecatalog:GetAssociatedResource",
      "servicecatalog:ListAssociatedAttributeGroups",
      "servicecatalog:ListAssociatedResources",
      "servicecatalog:ListAttributeGroupsForApplication",
      "servicecatalog:UpdateApplication"
    ],
    "?": [
      "servicecatalog:AssociateBudgetWithResource",
      "servicecatalog:AssociateProductWithPortfolio",
      "servicecatalog:BatchAssociateServiceActionWithProvisioningArtifact",
      "servicecatalog:BatchDisassociateServiceActionFromProvisioningArtifact",
      "servicecatalog:CopyProduct",
      "servicecatalog:CreateProvisionedProductPlan",
      "servicecatalog:CreateServiceAction",
      "servicecatalog:CreateTagOption",
      "servicecatalog:DeleteConstraint",
      "servicecatalog:DeleteProvisionedProductPlan",
      "servicecatalog:DeleteServiceAction",
      "servicecatalog:DeleteTagOption",
      "servicecatalog:DescribeConstraint",
      "servicecatalog:DescribeCopyProductStatus",
      "servicecatalog:DescribePortfolioShareStatus",
      "servicecatalog:DescribeProductView",
      "servicecatalog:DescribeProvisionedProduct",
      "servicecatalog:DescribeProvisionedProductPlan",
      "servicecatalog:DescribeRecord",
      "servicecatalog:DescribeServiceAction",
      "servicecatalog:DescribeServiceActionExecutionParameters",
      "servicecatalog:DescribeTagOption",
      "servicecatalog:DisableAWSOrganizationsAccess",
      "servicecatalog:DisassociateBudgetFromResource",
      "servicecatalog:DisassociateProductFromPortfolio",
      "servicecatalog:EnableAWSOrganizationsAccess",
      "servicecatalog:ExecuteProvisionedProductPlan",
      "servicecatalog:ExecuteProvisionedProductServiceAction",
      "servicecatalog:GetAWSOrganizationsAccessStatus",
      "servicecatalog:GetConfiguration",
      "servicecatalog:GetProvisionedProductOutputs",
      "servicecatalog:ListAcceptedPortfolioShares",
      "servicecatalog:ListApplications",
      "servicecatalog:ListAttributeGroups",
      "servicecatalog:ListBudgetsForResource",
      "servicecatalog:ListConstraintsForPortfolio",
      "servicecatalog:ListOrganizationPortfolioAccess",
      "servicecatalog:ListPortfolios",
      "servicecatalog:ListProvisionedProductPlans",
      "servicecatalog:ListProvisioningArtifactsForServiceAction",
      "servicecatalog:ListRecordHistory",
      "servicecatalog:ListResourcesForTagOption",
      "servicecatalog:ListServiceActions",
      "servicecatalog:ListStackInstancesForProvisionedProduct",
      "servicecatalog:ListTagOptions",
      "servicecatalog:PutConfiguration",
      "servicecatalog:ScanProvisionedProducts",
      "servicecatalog:SearchProducts",
      "servicecatalog:SearchProductsAsAdmin",
      "servicecatalog:SearchProvisionedProducts",
      "servicecatalog:SyncResource",
      "servicecatalog:TerminateProvisionedProduct",
      "servicecatalog:UpdateConstraint",
      "servicecatalog:UpdateProvisionedProduct",
      "servicecatalog:UpdateProvisionedProductProperties",
      "servicecatalog:UpdateServiceAction",
      "servicecatalog:UpdateTagOption"
    ],
    "Product*": [
      "servicecatalog:AssociateServiceActionWithProvisioningArtifact",
      "servicecatalog:CreateConstraint",
      "servicecatalog:CreateProduct",
      "servicecatalog:CreateProvisioningArtifact",
      "servicecatalog:DeleteProduct",
      "servicecatalog:DeleteProvisioningArtifact",
      "servicecatalog:DescribeProduct",
      "servicecatalog:DescribeProductAsAdmin",
      "servicecatalog:DescribeProvisioningArtifact",
      "servicecatalog:DescribeProvisioningParameters",
      "servicecatalog:DisassociateServiceActionFromProvisioningArtifact",
      "servicecatalog:ImportAsProvisionedProduct",
      "servicecatalog:ListLaunchPaths",
      "servicecatalog:ListPortfoliosForProduct",
      "servicecatalog:ListProvisioningArtifacts",
      "servicecatalog:ListServiceActionsForProvisioningArtifact",
      "servicecatalog:ProvisionProduct",
      "servicecatalog:UpdateProduct",
      "servicecatalog:UpdateProvisioningArtifact"
    ],
    "Portfolio": [
      "servicecatalog:AssociateTagOptionWithResource",
      "servicecatalog:DisassociateTagOptionFromResource"
    ],
    "AttributeGroup*": [
      "servicecatalog:CreateAttributeGroup",
      "servicecatalog:DeleteAttributeGroup",
      "servicecatalog:GetAttributeGroup",
      "servicecatalog:UpdateAttributeGroup"
    ],
    "Application": [
      "servicecatalog:ListTagsForResource",
      "servicecatalog:TagResource",
      "servicecatalog:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsservicecatalog.html"
  },
  "private-networks": {
    "order*": [
      "private-networks:AcknowledgeOrderReceipt",
      "private-networks:GetOrder"
    ],
    "device-identifier*": [
      "private-networks:ActivateDeviceIdentifier",
      "private-networks:DeactivateDeviceIdentifier",
      "private-networks:GetDeviceIdentifier"
    ],
    "network-site*": [
      "private-networks:ActivateNetworkSite",
      "private-networks:DeleteNetworkSite",
      "private-networks:GetNetworkSite",
      "private-networks:UpdateNetworkSite",
      "private-networks:UpdateNetworkSitePlan"
    ],
    "network-resource*": [
      "private-networks:ConfigureAccessPoint",
      "private-networks:GetNetworkResource"
    ],
    "network*": [
      "private-networks:CreateNetwork",
      "private-networks:CreateNetworkSite",
      "private-networks:DeleteNetwork",
      "private-networks:GetNetwork",
      "private-networks:ListDeviceIdentifiers",
      "private-networks:ListNetworkResources",
      "private-networks:ListNetworkSites",
      "private-networks:ListOrders"
    ],
    "?": [
      "private-networks:ListNetworks",
      "private-networks:ListTagsForResource",
      "private-networks:Ping"
    ],
    "device-identifier": [
      "private-networks:TagResource",
      "private-networks:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsserviceprovidingmanagedprivatenetworks.html"
  },
  "servicequotas": {
    "?": [
      "servicequotas:AssociateServiceQuotaTemplate",
      "servicequotas:DeleteServiceQuotaIncreaseRequestFromTemplate",
      "servicequotas:DisassociateServiceQuotaTemplate",
      "servicequotas:GetAWSDefaultServiceQuota",
      "servicequotas:GetAssociationForServiceQuotaTemplate",
      "servicequotas:GetRequestedServiceQuotaChange",
      "servicequotas:GetServiceQuota",
      "servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
      "servicequotas:ListAWSDefaultServiceQuotas",
      "servicequotas:ListRequestedServiceQuotaChangeHistory",
      "servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
      "servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
      "servicequotas:ListServiceQuotas",
      "servicequotas:ListServices",
      "servicequotas:ListTagsForResource",
      "servicequotas:TagResource",
      "servicequotas:UntagResource"
    ],
    "quota": [
      "servicequotas:PutServiceQuotaIncreaseRequestIntoTemplate",
      "servicequotas:RequestServiceQuotaIncrease"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_servicequotas.html"
  },
  "ssmmessages": {
    "?": [
      "ssmmessages:CreateControlChannel",
      "ssmmessages:CreateDataChannel",
      "ssmmessages:OpenControlChannel",
      "ssmmessages:OpenDataChannel"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsessionmanagermessagegatewayservice.html"
  },
  "shield": {
    "?": [
      "shield:AssociateDRTLogBucket",
      "shield:AssociateDRTRole",
      "shield:AssociateProactiveEngagementDetails",
      "shield:CreateProtection",
      "shield:CreateProtectionGroup",
      "shield:CreateSubscription",
      "shield:DeleteSubscription",
      "shield:DescribeAttackStatistics",
      "shield:DescribeDRTAccess",
      "shield:DescribeEmergencyContactSettings",
      "shield:DescribeSubscription",
      "shield:DisableApplicationLayerAutomaticResponse",
      "shield:DisableProactiveEngagement",
      "shield:DisassociateDRTLogBucket",
      "shield:DisassociateDRTRole",
      "shield:EnableApplicationLayerAutomaticResponse",
      "shield:EnableProactiveEngagement",
      "shield:GetSubscriptionState",
      "shield:ListAttacks",
      "shield:ListProtectionGroups",
      "shield:ListProtections",
      "shield:UpdateApplicationLayerAutomaticResponse",
      "shield:UpdateEmergencyContactSettings",
      "shield:UpdateSubscription"
    ],
    "protection*": [
      "shield:AssociateHealthCheck",
      "shield:DeleteProtection",
      "shield:DescribeProtection",
      "shield:DisassociateHealthCheck"
    ],
    "protection-group*": [
      "shield:DeleteProtectionGroup",
      "shield:DescribeProtectionGroup",
      "shield:ListResourcesInProtectionGroup",
      "shield:UpdateProtectionGroup"
    ],
    "attack*": [
      "shield:DescribeAttack"
    ],
    "protection": [
      "shield:ListTagsForResource",
      "shield:TagResource",
      "shield:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsshield.html"
  },
  "signer": {
    "signing-profile*": [
      "signer:AddProfilePermission",
      "signer:CancelSigningProfile",
      "signer:GetSigningProfile",
      "signer:ListProfilePermissions",
      "signer:ListTagsForResource",
      "signer:RemoveProfilePermission",
      "signer:RevokeSigningProfile",
      "signer:StartSigningJob",
      "signer:TagResource",
      "signer:UntagResource"
    ],
    "signing-job*": [
      "signer:DescribeSigningJob",
      "signer:RevokeSignature"
    ],
    "?": [
      "signer:GetSigningPlatform",
      "signer:ListSigningJobs",
      "signer:ListSigningPlatforms",
      "signer:ListSigningProfiles",
      "signer:PutSigningProfile"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awssigner.html"
  },
  "swf": {
    "domain*": [
      "swf:CancelTimer",
      "swf:CancelWorkflowExecution",
      "swf:CompleteWorkflowExecution",
      "swf:ContinueAsNewWorkflowExecution",
      "swf:CountClosedWorkflowExecutions",
      "swf:CountOpenWorkflowExecutions",
      "swf:CountPendingActivityTasks",
      "swf:CountPendingDecisionTasks",
      "swf:DeprecateActivityType",
      "swf:DeprecateDomain",
      "swf:DeprecateWorkflowType",
      "swf:DescribeActivityType",
      "swf:DescribeDomain",
      "swf:DescribeWorkflowExecution",
      "swf:DescribeWorkflowType",
      "swf:FailWorkflowExecution",
      "swf:GetWorkflowExecutionHistory",
      "swf:ListActivityTypes",
      "swf:ListClosedWorkflowExecutions",
      "swf:ListOpenWorkflowExecutions",
      "swf:ListWorkflowTypes",
      "swf:PollForActivityTask",
      "swf:PollForDecisionTask",
      "swf:RecordActivityTaskHeartbeat",
      "swf:RecordMarker",
      "swf:RegisterActivityType",
      "swf:RegisterWorkflowType",
      "swf:RequestCancelActivityTask",
      "swf:RequestCancelExternalWorkflowExecution",
      "swf:RequestCancelWorkflowExecution",
      "swf:RespondActivityTaskCanceled",
      "swf:RespondActivityTaskCompleted",
      "swf:RespondActivityTaskFailed",
      "swf:RespondDecisionTaskCompleted",
      "swf:ScheduleActivityTask",
      "swf:SignalExternalWorkflowExecution",
      "swf:SignalWorkflowExecution",
      "swf:StartChildWorkflowExecution",
      "swf:StartTimer",
      "swf:StartWorkflowExecution",
      "swf:TerminateWorkflowExecution",
      "swf:UndeprecateActivityType",
      "swf:UndeprecateDomain",
      "swf:UndeprecateWorkflowType"
    ],
    "?": [
      "swf:ListDomains",
      "swf:RegisterDomain"
    ],
    "domain": [
      "swf:ListTagsForResource",
      "swf:TagResource",
      "swf:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsimpleworkflowservice.html"
  },
  "sdb": {
    "domain*": [
      "sdb:BatchDeleteAttributes",
      "sdb:BatchPutAttributes",
      "sdb:CreateDomain",
      "sdb:DeleteAttributes",
      "sdb:DeleteDomain",
      "sdb:DomainMetadata",
      "sdb:GetAttributes",
      "sdb:PutAttributes",
      "sdb:Select"
    ],
    "?": [
      "sdb:ListDomains"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsimpledb.html"
  },
  "simspaceweaver": {
    "Simulation*": [
      "simspaceweaver:DeleteApp",
      "simspaceweaver:DeleteSimulation",
      "simspaceweaver:DescribeApp",
      "simspaceweaver:DescribeSimulation",
      "simspaceweaver:ListApps",
      "simspaceweaver:StartApp",
      "simspaceweaver:StartClock",
      "simspaceweaver:StopApp",
      "simspaceweaver:StopClock",
      "simspaceweaver:StopSimulation",
      "simspaceweaver:TagResource",
      "simspaceweaver:UntagResource"
    ],
    "?": [
      "simspaceweaver:ListSimulations",
      "simspaceweaver:ListTagsForResource",
      "simspaceweaver:StartSimulation"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awssimspaceweaver.html"
  },
  "snow-device-management": {
    "task*": [
      "snow-device-management:CancelTask",
      "snow-device-management:DescribeTask"
    ],
    "?": [
      "snow-device-management:CreateTask",
      "snow-device-management:DescribeExecution",
      "snow-device-management:ListDevices",
      "snow-device-management:ListExecutions",
      "snow-device-management:ListTagsForResource",
      "snow-device-management:ListTasks"
    ],
    "managed-device*": [
      "snow-device-management:DescribeDevice",
      "snow-device-management:DescribeDeviceEc2Instances",
      "snow-device-management:ListDeviceResources"
    ],
    "managed-device": [
      "snow-device-management:TagResource",
      "snow-device-management:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awssnowdevicemanagement.html"
  },
  "snowball": {
    "?": [
      "snowball:CancelCluster",
      "snowball:CancelJob",
      "snowball:CreateAddress",
      "snowball:CreateCluster",
      "snowball:CreateJob",
      "snowball:CreateLongTermPricing",
      "snowball:CreateReturnShippingLabel",
      "snowball:DescribeAddress",
      "snowball:DescribeAddresses",
      "snowball:DescribeCluster",
      "snowball:DescribeJob",
      "snowball:DescribeReturnShippingLabel",
      "snowball:GetJobManifest",
      "snowball:GetJobUnlockCode",
      "snowball:GetSnowballUsage",
      "snowball:GetSoftwareUpdates",
      "snowball:ListClusterJobs",
      "snowball:ListClusters",
      "snowball:ListCompatibleImages",
      "snowball:ListJobs",
      "snowball:ListLongTermPricing",
      "snowball:ListServiceVersions",
      "snowball:UpdateCluster",
      "snowball:UpdateJob",
      "snowball:UpdateJobShipmentState",
      "snowball:UpdateLongTermPricing"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awssnowball.html"
  },
  "sns": {
    "topic*": [
      "sns:AddPermission",
      "sns:ConfirmSubscription",
      "sns:CreateTopic",
      "sns:DeleteTopic",
      "sns:GetDataProtectionPolicy",
      "sns:GetTopicAttributes",
      "sns:ListSubscriptionsByTopic",
      "sns:Publish",
      "sns:PutDataProtectionPolicy",
      "sns:RemovePermission",
      "sns:SetTopicAttributes",
      "sns:Subscribe"
    ],
    "?": [
      "sns:CheckIfPhoneNumberIsOptedOut",
      "sns:CreatePlatformApplication",
      "sns:CreatePlatformEndpoint",
      "sns:CreateSMSSandboxPhoneNumber",
      "sns:DeleteEndpoint",
      "sns:DeletePlatformApplication",
      "sns:DeleteSMSSandboxPhoneNumber",
      "sns:GetEndpointAttributes",
      "sns:GetPlatformApplicationAttributes",
      "sns:GetSMSAttributes",
      "sns:GetSMSSandboxAccountStatus",
      "sns:GetSubscriptionAttributes",
      "sns:ListEndpointsByPlatformApplication",
      "sns:ListOriginationNumbers",
      "sns:ListPhoneNumbersOptedOut",
      "sns:ListPlatformApplications",
      "sns:ListSMSSandboxPhoneNumbers",
      "sns:ListSubscriptions",
      "sns:ListTopics",
      "sns:OptInPhoneNumber",
      "sns:SetEndpointAttributes",
      "sns:SetPlatformApplicationAttributes",
      "sns:SetSMSAttributes",
      "sns:SetSubscriptionAttributes",
      "sns:Unsubscribe",
      "sns:VerifySMSSandboxPhoneNumber"
    ],
    "topic": [
      "sns:ListTagsForResource",
      "sns:TagResource",
      "sns:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsns.html"
  },
  "sqlworkbench": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awssqlworkbench.html"
  },
  "sqs": {
    "queue*": [
      "sqs:AddPermission",
      "sqs:ChangeMessageVisibility",
      "sqs:CreateQueue",
      "sqs:DeleteMessage",
      "sqs:DeleteQueue",
      "sqs:GetQueueAttributes",
      "sqs:GetQueueUrl",
      "sqs:ListDeadLetterSourceQueues",
      "sqs:ListQueueTags",
      "sqs:PurgeQueue",
      "sqs:ReceiveMessage",
      "sqs:RemovePermission",
      "sqs:SendMessage",
      "sqs:SetQueueAttributes",
      "sqs:TagQueue",
      "sqs:UntagQueue"
    ],
    "?": [
      "sqs:ListQueues"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsqs.html"
  },
  "states": {
    "activity*": [
      "states:CreateActivity",
      "states:DeleteActivity",
      "states:DescribeActivity",
      "states:GetActivityTask"
    ],
    "statemachine*": [
      "states:CreateStateMachine",
      "states:DeleteStateMachine",
      "states:DescribeStateMachine",
      "states:StartExecution",
      "states:StartSyncExecution",
      "states:UpdateStateMachine"
    ],
    "execution*": [
      "states:DescribeExecution",
      "states:DescribeStateMachineForExecution",
      "states:GetExecutionHistory",
      "states:ListMapRuns",
      "states:StopExecution"
    ],
    "maprun*": [
      "states:DescribeMapRun",
      "states:ListExecutions",
      "states:UpdateMapRun"
    ],
    "?": [
      "states:ListActivities",
      "states:ListStateMachines",
      "states:SendTaskFailure",
      "states:SendTaskHeartbeat",
      "states:SendTaskSuccess"
    ],
    "activity": [
      "states:ListTagsForResource",
      "states:TagResource",
      "states:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsstepfunctions.html"
  },
  "storagegateway": {
    "?": [
      "storagegateway:ActivateGateway",
      "storagegateway:CreateTapePool",
      "storagegateway:DeleteTapeArchive",
      "storagegateway:DescribeTapeArchives",
      "storagegateway:ListGateways"
    ],
    "gateway*": [
      "storagegateway:AddCache",
      "storagegateway:AddUploadBuffer",
      "storagegateway:AddWorkingStorage",
      "storagegateway:AssociateFileSystem",
      "storagegateway:AttachVolume",
      "storagegateway:CancelArchival",
      "storagegateway:CancelRetrieval",
      "storagegateway:CreateCachediSCSIVolume",
      "storagegateway:CreateNFSFileShare",
      "storagegateway:CreateSMBFileShare",
      "storagegateway:CreateStorediSCSIVolume",
      "storagegateway:CreateTapeWithBarcode",
      "storagegateway:CreateTapes",
      "storagegateway:DeleteAutomaticTapeCreationPolicy",
      "storagegateway:DeleteBandwidthRateLimit",
      "storagegateway:DeleteGateway",
      "storagegateway:DeleteTape",
      "storagegateway:DescribeAvailabilityMonitorTest",
      "storagegateway:DescribeBandwidthRateLimit",
      "storagegateway:DescribeBandwidthRateLimitSchedule",
      "storagegateway:DescribeCache",
      "storagegateway:DescribeGatewayInformation",
      "storagegateway:DescribeMaintenanceStartTime",
      "storagegateway:DescribeSMBSettings",
      "storagegateway:DescribeTapeRecoveryPoints",
      "storagegateway:DescribeTapes",
      "storagegateway:DescribeUploadBuffer",
      "storagegateway:DescribeVTLDevices",
      "storagegateway:DescribeWorkingStorage",
      "storagegateway:DisableGateway",
      "storagegateway:JoinDomain",
      "storagegateway:ListAutomaticTapeCreationPolicies",
      "storagegateway:ListFileShares",
      "storagegateway:ListFileSystemAssociations",
      "storagegateway:ListLocalDisks",
      "storagegateway:ListVolumeRecoveryPoints",
      "storagegateway:ListVolumes",
      "storagegateway:ResetCache",
      "storagegateway:RetrieveTapeArchive",
      "storagegateway:RetrieveTapeRecoveryPoint",
      "storagegateway:SetLocalConsolePassword",
      "storagegateway:SetSMBGuestPassword",
      "storagegateway:ShutdownGateway",
      "storagegateway:StartAvailabilityMonitorTest",
      "storagegateway:StartGateway",
      "storagegateway:UpdateAutomaticTapeCreationPolicy",
      "storagegateway:UpdateBandwidthRateLimit",
      "storagegateway:UpdateBandwidthRateLimitSchedule",
      "storagegateway:UpdateGatewayInformation",
      "storagegateway:UpdateGatewaySoftwareNow",
      "storagegateway:UpdateMaintenanceStartTime",
      "storagegateway:UpdateSMBFileShareVisibility",
      "storagegateway:UpdateSMBLocalGroups",
      "storagegateway:UpdateSMBSecurityStrategy"
    ],
    "gateway": [
      "storagegateway:AddTagsToResource",
      "storagegateway:ListTagsForResource",
      "storagegateway:RemoveTagsFromResource"
    ],
    "tape*": [
      "storagegateway:AssignTapePool",
      "storagegateway:ListTapes"
    ],
    "tapepool*": [
      "storagegateway:BypassGovernanceRetention",
      "storagegateway:DeleteTapePool",
      "storagegateway:ListTapePools"
    ],
    "volume*": [
      "storagegateway:CreateSnapshot",
      "storagegateway:CreateSnapshotFromVolumeRecoveryPoint",
      "storagegateway:DeleteSnapshotSchedule",
      "storagegateway:DeleteVolume",
      "storagegateway:DescribeCachediSCSIVolumes",
      "storagegateway:DescribeSnapshotSchedule",
      "storagegateway:DescribeStorediSCSIVolumes",
      "storagegateway:DetachVolume",
      "storagegateway:ListVolumeInitiators",
      "storagegateway:UpdateSnapshotSchedule"
    ],
    "target*": [
      "storagegateway:DeleteChapCredentials",
      "storagegateway:DescribeChapCredentials",
      "storagegateway:UpdateChapCredentials"
    ],
    "share*": [
      "storagegateway:DeleteFileShare",
      "storagegateway:DescribeNFSFileShares",
      "storagegateway:DescribeSMBFileShares",
      "storagegateway:NotifyWhenUploaded",
      "storagegateway:RefreshCache",
      "storagegateway:UpdateNFSFileShare",
      "storagegateway:UpdateSMBFileShare"
    ],
    "fs-association*": [
      "storagegateway:DescribeFileSystemAssociations",
      "storagegateway:DisassociateFileSystem",
      "storagegateway:UpdateFileSystemAssociation"
    ],
    "device*": [
      "storagegateway:UpdateVTLDeviceType"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsstoragegateway.html"
  },
  "sumerian": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsumerian.html"
  },
  "scn": {
    "instance*": [
      "scn:AssignAdminPermissionsToUser",
      "scn:CreateInstance",
      "scn:CreateSSOApplication",
      "scn:DeleteInstance",
      "scn:DeleteSSOApplication",
      "scn:DescribeInstance",
      "scn:ListAdminUsers",
      "scn:ListInstances",
      "scn:RemoveAdminPermissionsForUser",
      "scn:UpdateInstance"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awssupplychain.html"
  },
  "support": {
    "?": [
      "support:AddAttachmentsToSet",
      "support:AddCommunicationToCase",
      "support:CreateCase",
      "support:DescribeAttachment",
      "support:DescribeCaseAttributes",
      "support:DescribeCases",
      "support:DescribeCommunications",
      "support:DescribeIssueTypes",
      "support:DescribeServices",
      "support:DescribeSeverityLevels",
      "support:DescribeSupportLevel",
      "support:DescribeTrustedAdvisorCheckRefreshStatuses",
      "support:DescribeTrustedAdvisorCheckResult",
      "support:DescribeTrustedAdvisorCheckSummaries",
      "support:DescribeTrustedAdvisorChecks",
      "support:InitiateCallForCase",
      "support:InitiateChatForCase",
      "support:PutCaseAttributes",
      "support:RateCaseCommunication",
      "support:RefreshTrustedAdvisorCheck",
      "support:ResolveCase",
      "support:SearchForCases"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awssupport.html"
  },
  "supportapp": {
    "?": [
      "supportapp:CreateSlackChannelConfiguration",
      "supportapp:DeleteAccountAlias",
      "supportapp:DeleteSlackChannelConfiguration",
      "supportapp:DeleteSlackWorkspaceConfiguration",
      "supportapp:GetAccountAlias",
      "supportapp:ListSlackChannelConfigurations",
      "supportapp:ListSlackWorkspaceConfigurations",
      "supportapp:PutAccountAlias",
      "supportapp:RegisterSlackWorkspaceForOrganization",
      "supportapp:UpdateSlackChannelConfiguration"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awssupportappinslack.html"
  },
  "supportplans": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awssupportplans.html"
  },
  "sustainability": {
    "?": [
      "sustainability:GetCarbonFootprintSummary"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awssustainability.html"
  },
  "ssm": {
    "association": [
      "ssm:AddTagsToResource",
      "ssm:DeleteAssociation",
      "ssm:DescribeAssociation",
      "ssm:ListTagsForResource",
      "ssm:RemoveTagsFromResource"
    ],
    "opsitem*": [
      "ssm:AssociateOpsItemRelatedItem",
      "ssm:DisassociateOpsItemRelatedItem",
      "ssm:GetOpsItem",
      "ssm:UpdateOpsItem"
    ],
    "?": [
      "ssm:CancelCommand",
      "ssm:CreateActivation",
      "ssm:CreateMaintenanceWindow",
      "ssm:CreateOpsItem",
      "ssm:CreateOpsMetadata",
      "ssm:CreatePatchBaseline",
      "ssm:DeleteActivation",
      "ssm:DeleteInventory",
      "ssm:DescribeActivations",
      "ssm:DescribeAutomationExecutions",
      "ssm:DescribeAvailablePatches",
      "ssm:DescribeInstanceInformation",
      "ssm:DescribeInstancePatchStates",
      "ssm:DescribeInstancePatchStatesForPatchGroup",
      "ssm:DescribeInstancePatches",
      "ssm:DescribeInstanceProperties",
      "ssm:DescribeInventoryDeletions",
      "ssm:DescribeMaintenanceWindowExecutionTaskInvocations",
      "ssm:DescribeMaintenanceWindowSchedule",
      "ssm:DescribeMaintenanceWindows",
      "ssm:DescribeMaintenanceWindowsForTarget",
      "ssm:DescribeOpsItems",
      "ssm:DescribeParameters",
      "ssm:DescribePatchBaselines",
      "ssm:DescribePatchGroupState",
      "ssm:DescribePatchGroups",
      "ssm:DescribePatchProperties",
      "ssm:DescribeSessions",
      "ssm:GetCommandInvocation",
      "ssm:GetDeployablePatchSnapshotForInstance",
      "ssm:GetInventory",
      "ssm:GetInventorySchema",
      "ssm:GetMaintenanceWindowExecution",
      "ssm:GetMaintenanceWindowExecutionTask",
      "ssm:GetMaintenanceWindowExecutionTaskInvocation",
      "ssm:ListAssociations",
      "ssm:ListCommandInvocations",
      "ssm:ListCommands",
      "ssm:ListComplianceItems",
      "ssm:ListComplianceSummaries",
      "ssm:ListDocuments",
      "ssm:ListInventoryEntries",
      "ssm:ListOpsItemEvents",
      "ssm:ListOpsItemRelatedItems",
      "ssm:ListOpsMetadata",
      "ssm:ListResourceComplianceSummaries",
      "ssm:ListResourceDataSync",
      "ssm:PutInventory",
      "ssm:RegisterManagedInstance"
    ],
    "maintenancewindow*": [
      "ssm:CancelMaintenanceWindowExecution",
      "ssm:DeleteMaintenanceWindow",
      "ssm:DeregisterTargetFromMaintenanceWindow",
      "ssm:DeregisterTaskFromMaintenanceWindow",
      "ssm:DescribeMaintenanceWindowExecutionTasks",
      "ssm:DescribeMaintenanceWindowExecutions",
      "ssm:DescribeMaintenanceWindowTargets",
      "ssm:DescribeMaintenanceWindowTasks",
      "ssm:GetMaintenanceWindow",
      "ssm:GetMaintenanceWindowTask",
      "ssm:RegisterTargetWithMaintenanceWindow",
      "ssm:RegisterTaskWithMaintenanceWindow",
      "ssm:UpdateMaintenanceWindow",
      "ssm:UpdateMaintenanceWindowTarget",
      "ssm:UpdateMaintenanceWindowTask"
    ],
    "document*": [
      "ssm:CreateAssociation",
      "ssm:CreateAssociationBatch",
      "ssm:CreateDocument",
      "ssm:DeleteDocument",
      "ssm:DescribeDocument",
      "ssm:DescribeDocumentParameters",
      "ssm:DescribeDocumentPermission",
      "ssm:GetCalendarState",
      "ssm:GetDocument",
      "ssm:ListDocumentMetadataHistory",
      "ssm:ListDocumentVersions",
      "ssm:ModifyDocumentPermission",
      "ssm:SendCommand",
      "ssm:UpdateAssociationStatus",
      "ssm:UpdateDocument",
      "ssm:UpdateDocumentDefaultVersion",
      "ssm:UpdateDocumentMetadata"
    ],
    "resourcedatasync*": [
      "ssm:CreateResourceDataSync",
      "ssm:DeleteResourceDataSync",
      "ssm:GetOpsSummary",
      "ssm:UpdateResourceDataSync"
    ],
    "opsmetadata*": [
      "ssm:DeleteOpsMetadata",
      "ssm:GetOpsMetadata",
      "ssm:UpdateOpsMetadata"
    ],
    "parameter*": [
      "ssm:DeleteParameter",
      "ssm:DeleteParameters",
      "ssm:GetParameter",
      "ssm:GetParameterHistory",
      "ssm:GetParameters",
      "ssm:GetParametersByPath",
      "ssm:LabelParameterVersion",
      "ssm:PutParameter",
      "ssm:UnlabelParameterVersion"
    ],
    "patchbaseline*": [
      "ssm:DeletePatchBaseline",
      "ssm:DeregisterPatchBaselineForPatchGroup",
      "ssm:DescribeEffectivePatchesForPatchBaseline",
      "ssm:GetDefaultPatchBaseline",
      "ssm:GetPatchBaseline",
      "ssm:GetPatchBaselineForPatchGroup",
      "ssm:RegisterDefaultPatchBaseline",
      "ssm:RegisterPatchBaselineForPatchGroup",
      "ssm:UpdatePatchBaseline"
    ],
    "managed-instance*": [
      "ssm:DeregisterManagedInstance",
      "ssm:UpdateManagedInstanceRole"
    ],
    "association*": [
      "ssm:DescribeAssociationExecutionTargets",
      "ssm:DescribeAssociationExecutions",
      "ssm:ListAssociationVersions",
      "ssm:StartAssociationsOnce",
      "ssm:UpdateAssociation"
    ],
    "automation-execution*": [
      "ssm:DescribeAutomationStepExecutions",
      "ssm:GetAutomationExecution",
      "ssm:SendAutomationSignal",
      "ssm:StopAutomationExecution"
    ],
    "instance*": [
      "ssm:DescribeEffectiveInstanceAssociations",
      "ssm:DescribeInstanceAssociationsStatus"
    ],
    "instance": [
      "ssm:GetConnectionStatus",
      "ssm:ListInstanceAssociations",
      "ssm:PutComplianceItems",
      "ssm:UpdateInstanceInformation"
    ],
    "servicesetting*": [
      "ssm:GetServiceSetting",
      "ssm:ResetServiceSetting",
      "ssm:UpdateServiceSetting"
    ],
    "session*": [
      "ssm:ResumeSession",
      "ssm:TerminateSession"
    ],
    "automation-definition*": [
      "ssm:StartAutomationExecution",
      "ssm:StartChangeRequestExecution"
    ],
    "document": [
      "ssm:StartSession"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awssystemsmanager.html"
  },
  "ssm-sap": {
    "?": [
      "ssm-sap:BackupDatabase",
      "ssm-sap:DeleteResourcePermission",
      "ssm-sap:DeregisterApplication",
      "ssm-sap:GetApplication",
      "ssm-sap:GetComponent",
      "ssm-sap:GetDatabase",
      "ssm-sap:GetOperation",
      "ssm-sap:GetResourcePermission",
      "ssm-sap:ListApplications",
      "ssm-sap:ListComponents",
      "ssm-sap:ListDatabases",
      "ssm-sap:ListOperations",
      "ssm-sap:ListTagsForResource",
      "ssm-sap:PutResourcePermission",
      "ssm-sap:RegisterApplication",
      "ssm-sap:RestoreDatabase",
      "ssm-sap:UpdateApplicationSettings",
      "ssm-sap:UpdateHANABackupSettings"
    ],
    "application": [
      "ssm-sap:TagResource",
      "ssm-sap:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awssystemsmanagerforsap.html"
  },
  "ssm-guiconnect": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awssystemsmanagerguiconnect.html"
  },
  "ssm-incidents": {
    "?": [
      "ssm-incidents:CreateReplicationSet",
      "ssm-incidents:CreateResponsePlan",
      "ssm-incidents:ListIncidentRecords",
      "ssm-incidents:ListReplicationSets",
      "ssm-incidents:ListResponsePlans"
    ],
    "incident-record*": [
      "ssm-incidents:CreateTimelineEvent",
      "ssm-incidents:DeleteIncidentRecord",
      "ssm-incidents:DeleteTimelineEvent",
      "ssm-incidents:GetIncidentRecord",
      "ssm-incidents:GetTimelineEvent",
      "ssm-incidents:ListRelatedItems",
      "ssm-incidents:ListTimelineEvents",
      "ssm-incidents:UpdateIncidentRecord",
      "ssm-incidents:UpdateRelatedItems",
      "ssm-incidents:UpdateTimelineEvent"
    ],
    "replication-set*": [
      "ssm-incidents:DeleteReplicationSet",
      "ssm-incidents:GetReplicationSet",
      "ssm-incidents:UpdateDeletionProtection",
      "ssm-incidents:UpdateReplicationSet"
    ],
    "response-plan*": [
      "ssm-incidents:DeleteResourcePolicy",
      "ssm-incidents:DeleteResponsePlan",
      "ssm-incidents:GetResourcePolicies",
      "ssm-incidents:GetResponsePlan",
      "ssm-incidents:PutResourcePolicy",
      "ssm-incidents:StartIncident",
      "ssm-incidents:UpdateResponsePlan"
    ],
    "incident-record": [
      "ssm-incidents:ListTagsForResource",
      "ssm-incidents:TagResource",
      "ssm-incidents:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awssystemsmanagerincidentmanager.html"
  },
  "ssm-contacts": {
    "page*": [
      "ssm-contacts:AcceptPage",
      "ssm-contacts:DescribePage",
      "ssm-contacts:ListPageReceipts"
    ],
    "contactchannel*": [
      "ssm-contacts:ActivateContactChannel",
      "ssm-contacts:DeactivateContactChannel",
      "ssm-contacts:DeleteContactChannel",
      "ssm-contacts:GetContactChannel",
      "ssm-contacts:SendActivationCode",
      "ssm-contacts:UpdateContactChannel"
    ],
    "contact*": [
      "ssm-contacts:CreateContact",
      "ssm-contacts:CreateContactChannel",
      "ssm-contacts:DeleteContact",
      "ssm-contacts:GetContact",
      "ssm-contacts:GetContactPolicy",
      "ssm-contacts:ListContactChannels",
      "ssm-contacts:ListPagesByContact",
      "ssm-contacts:ListTagsForResource",
      "ssm-contacts:PutContactPolicy",
      "ssm-contacts:StartEngagement",
      "ssm-contacts:TagResource",
      "ssm-contacts:UntagResource",
      "ssm-contacts:UpdateContact"
    ],
    "engagement*": [
      "ssm-contacts:DescribeEngagement",
      "ssm-contacts:ListPagesByEngagement",
      "ssm-contacts:StopEngagement"
    ],
    "?": [
      "ssm-contacts:ListContacts",
      "ssm-contacts:ListEngagements"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awssystemsmanagerincidentmanagercontacts.html"
  },
  "resource-explorer": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awstageditor.html"
  },
  "tax": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awstaxsettings.html"
  },
  "tnb": {
    "network-operation*": [
      "tnb:CancelSolNetworkOperation",
      "tnb:GetSolNetworkOperation",
      "tnb:ListSolNetworkOperations"
    ],
    "function-package*": [
      "tnb:CreateSolFunctionPackage",
      "tnb:DeleteSolFunctionPackage",
      "tnb:GetSolFunctionPackage",
      "tnb:GetSolFunctionPackageContent",
      "tnb:GetSolFunctionPackageDescriptor",
      "tnb:ListSolFunctionPackages",
      "tnb:PutSolFunctionPackageContent",
      "tnb:UpdateSolFunctionPackage",
      "tnb:ValidateSolFunctionPackageContent"
    ],
    "network-instance*": [
      "tnb:CreateSolNetworkInstance",
      "tnb:DeleteSolNetworkInstance",
      "tnb:GetSolNetworkInstance",
      "tnb:InstantiateSolNetworkInstance",
      "tnb:ListSolNetworkInstances",
      "tnb:TerminateSolNetworkInstance"
    ],
    "network-package*": [
      "tnb:CreateSolNetworkPackage",
      "tnb:DeleteSolNetworkPackage",
      "tnb:GetSolNetworkPackage",
      "tnb:GetSolNetworkPackageContent",
      "tnb:GetSolNetworkPackageDescriptor",
      "tnb:ListSolNetworkPackages",
      "tnb:PutSolNetworkPackageContent",
      "tnb:UpdateSolNetworkPackage",
      "tnb:ValidateSolNetworkPackageContent"
    ],
    "function-instance*": [
      "tnb:GetSolFunctionInstance",
      "tnb:ListSolFunctionInstances",
      "tnb:UpdateSolNetworkInstance"
    ],
    "?": [
      "tnb:ListTagsForResource"
    ],
    "function-instance": [
      "tnb:TagResource",
      "tnb:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awstelconetworkbuilder.html"
  },
  "textract": {
    "?": [
      "textract:AnalyzeDocument",
      "textract:AnalyzeExpense",
      "textract:AnalyzeID",
      "textract:DetectDocumentText",
      "textract:GetDocumentAnalysis",
      "textract:GetDocumentTextDetection",
      "textract:GetExpenseAnalysis",
      "textract:GetLendingAnalysis",
      "textract:GetLendingAnalysisSummary",
      "textract:StartDocumentAnalysis",
      "textract:StartDocumentTextDetection",
      "textract:StartExpenseAnalysis",
      "textract:StartLendingAnalysis"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazontextract.html"
  },
  "timestream": {
    "?": [
      "timestream:CancelQuery",
      "timestream:CreateScheduledQuery",
      "timestream:DescribeBatchLoadTask",
      "timestream:DescribeEndpoints",
      "timestream:GetAwsBackupStatus",
      "timestream:GetAwsRestoreStatus",
      "timestream:ListBatchLoadTasks",
      "timestream:ListDatabases",
      "timestream:ListScheduledQueries",
      "timestream:ResumeBatchLoadTask",
      "timestream:SelectValues"
    ],
    "table*": [
      "timestream:CreateBatchLoadTask",
      "timestream:CreateTable",
      "timestream:DeleteTable",
      "timestream:DescribeTable",
      "timestream:ListMeasures",
      "timestream:PrepareQuery",
      "timestream:Select",
      "timestream:StartAwsBackupJob",
      "timestream:StartAwsRestoreJob",
      "timestream:UpdateTable",
      "timestream:WriteRecords"
    ],
    "database*": [
      "timestream:CreateDatabase",
      "timestream:DeleteDatabase",
      "timestream:DescribeDatabase",
      "timestream:ListTables",
      "timestream:ListTagsForResource",
      "timestream:TagResource",
      "timestream:UntagResource",
      "timestream:UpdateDatabase"
    ],
    "scheduled-query*": [
      "timestream:DeleteScheduledQuery",
      "timestream:DescribeScheduledQuery",
      "timestream:ExecuteScheduledQuery",
      "timestream:UpdateScheduledQuery"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazontimestream.html"
  },
  "tiros": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awstiros.html"
  },
  "transcribe": {
    "?": [
      "transcribe:CreateCallAnalyticsCategory",
      "transcribe:CreateLanguageModel",
      "transcribe:CreateMedicalVocabulary",
      "transcribe:CreateVocabulary",
      "transcribe:CreateVocabularyFilter",
      "transcribe:DeleteCallAnalyticsCategory",
      "transcribe:DeleteCallAnalyticsJob",
      "transcribe:GetCallAnalyticsCategory",
      "transcribe:GetCallAnalyticsJob",
      "transcribe:ListCallAnalyticsCategories",
      "transcribe:ListCallAnalyticsJobs",
      "transcribe:ListLanguageModels",
      "transcribe:ListMedicalTranscriptionJobs",
      "transcribe:ListMedicalVocabularies",
      "transcribe:ListTagsForResource",
      "transcribe:ListTranscriptionJobs",
      "transcribe:ListVocabularies",
      "transcribe:ListVocabularyFilters",
      "transcribe:StartCallAnalyticsJob",
      "transcribe:StartCallAnalyticsStreamTranscription",
      "transcribe:StartCallAnalyticsStreamTranscriptionWebSocket",
      "transcribe:StartMedicalStreamTranscription",
      "transcribe:StartMedicalStreamTranscriptionWebSocket",
      "transcribe:StartMedicalTranscriptionJob",
      "transcribe:StartStreamTranscription",
      "transcribe:StartStreamTranscriptionWebSocket",
      "transcribe:StartTranscriptionJob",
      "transcribe:TagResource",
      "transcribe:UntagResource",
      "transcribe:UpdateCallAnalyticsCategory"
    ],
    "languagemodel*": [
      "transcribe:DeleteLanguageModel",
      "transcribe:DescribeLanguageModel"
    ],
    "medicaltranscriptionjob*": [
      "transcribe:DeleteMedicalTranscriptionJob",
      "transcribe:GetMedicalTranscriptionJob"
    ],
    "medicalvocabulary*": [
      "transcribe:DeleteMedicalVocabulary",
      "transcribe:GetMedicalVocabulary",
      "transcribe:UpdateMedicalVocabulary"
    ],
    "transcriptionjob*": [
      "transcribe:DeleteTranscriptionJob",
      "transcribe:GetTranscriptionJob"
    ],
    "vocabulary*": [
      "transcribe:DeleteVocabulary",
      "transcribe:GetVocabulary",
      "transcribe:UpdateVocabulary"
    ],
    "vocabularyfilter*": [
      "transcribe:DeleteVocabularyFilter",
      "transcribe:GetVocabularyFilter",
      "transcribe:UpdateVocabularyFilter"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazontranscribe.html"
  },
  "transfer": {
    "server*": [
      "transfer:CreateAccess",
      "transfer:CreateAgreement",
      "transfer:CreateUser",
      "transfer:DeleteAccess",
      "transfer:DeleteServer",
      "transfer:DescribeAccess",
      "transfer:DescribeServer",
      "transfer:ImportHostKey",
      "transfer:ListAccesses",
      "transfer:ListAgreements",
      "transfer:ListHostKeys",
      "transfer:ListUsers",
      "transfer:StartServer",
      "transfer:StopServer",
      "transfer:UpdateServer"
    ],
    "?": [
      "transfer:CreateConnector",
      "transfer:CreateProfile",
      "transfer:CreateServer",
      "transfer:CreateWorkflow",
      "transfer:DescribeSecurityPolicy",
      "transfer:ImportCertificate",
      "transfer:ListCertificates",
      "transfer:ListConnectors",
      "transfer:ListProfiles",
      "transfer:ListSecurityPolicies",
      "transfer:ListServers",
      "transfer:ListWorkflows",
      "transfer:UpdateAccess"
    ],
    "agreement*": [
      "transfer:DeleteAgreement",
      "transfer:DescribeAgreement",
      "transfer:UpdateAgreement"
    ],
    "certificate*": [
      "transfer:DeleteCertificate",
      "transfer:DescribeCertificate",
      "transfer:UpdateCertificate"
    ],
    "connector*": [
      "transfer:DeleteConnector",
      "transfer:DescribeConnector",
      "transfer:StartFileTransfer",
      "transfer:UpdateConnector"
    ],
    "host-key*": [
      "transfer:DeleteHostKey",
      "transfer:DescribeHostKey",
      "transfer:UpdateHostKey"
    ],
    "profile*": [
      "transfer:DeleteProfile",
      "transfer:DescribeProfile",
      "transfer:UpdateProfile"
    ],
    "user*": [
      "transfer:DeleteSshPublicKey",
      "transfer:DeleteUser",
      "transfer:DescribeUser",
      "transfer:ImportSshPublicKey",
      "transfer:TestIdentityProvider",
      "transfer:UpdateUser"
    ],
    "workflow*": [
      "transfer:DeleteWorkflow",
      "transfer:DescribeExecution",
      "transfer:DescribeWorkflow",
      "transfer:ListExecutions",
      "transfer:SendWorkflowStepState"
    ],
    "agreement": [
      "transfer:ListTagsForResource",
      "transfer:TagResource",
      "transfer:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awstransferfamily.html"
  },
  "translate": {
    "parallel-data": [
      "translate:CreateParallelData",
      "translate:DeleteParallelData",
      "translate:GetParallelData",
      "translate:ListTagsForResource",
      "translate:StartTextTranslationJob",
      "translate:TagResource",
      "translate:UntagResource",
      "translate:UpdateParallelData"
    ],
    "terminology": [
      "translate:DeleteTerminology",
      "translate:GetTerminology",
      "translate:ImportTerminology",
      "translate:TranslateText"
    ],
    "?": [
      "translate:DescribeTextTranslationJob",
      "translate:ListLanguages",
      "translate:ListParallelData",
      "translate:ListTerminologies",
      "translate:ListTextTranslationJobs",
      "translate:StopTextTranslationJob"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazontranslate.html"
  },
  "trustedadvisor": {
    "?": [
      "trustedadvisor:DeleteNotificationConfigurationForDelegatedAdmin",
      "trustedadvisor:DescribeChecks",
      "trustedadvisor:DescribeNotificationConfigurations",
      "trustedadvisor:DescribeRisk",
      "trustedadvisor:DescribeRiskResources",
      "trustedadvisor:DescribeRisks",
      "trustedadvisor:DownloadRisk",
      "trustedadvisor:UpdateNotificationConfigurations",
      "trustedadvisor:UpdateRiskStatus"
    ],
    "checks*": [
      "trustedadvisor:DescribeCheckItems",
      "trustedadvisor:DescribeCheckRefreshStatuses",
      "trustedadvisor:DescribeCheckSummaries",
      "trustedadvisor:RefreshCheck"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awstrustedadvisor.html"
  },
  "vpc-lattice": {
    "AccessLogSubscription*": [
      "vpc-lattice:CreateAccessLogSubscription",
      "vpc-lattice:DeleteAccessLogSubscription",
      "vpc-lattice:GetAccessLogSubscription",
      "vpc-lattice:UpdateAccessLogSubscription"
    ],
    "Listener*": [
      "vpc-lattice:CreateListener",
      "vpc-lattice:DeleteListener",
      "vpc-lattice:GetListener",
      "vpc-lattice:UpdateListener"
    ],
    "Rule*": [
      "vpc-lattice:CreateRule",
      "vpc-lattice:DeleteRule",
      "vpc-lattice:GetRule",
      "vpc-lattice:UpdateRule"
    ],
    "Service*": [
      "vpc-lattice:CreateService",
      "vpc-lattice:CreateServiceNetworkServiceAssociation",
      "vpc-lattice:DeleteService",
      "vpc-lattice:GetService",
      "vpc-lattice:UpdateService"
    ],
    "ServiceNetwork*": [
      "vpc-lattice:CreateServiceNetwork",
      "vpc-lattice:CreateServiceNetworkVpcAssociation",
      "vpc-lattice:DeleteServiceNetwork",
      "vpc-lattice:GetServiceNetwork",
      "vpc-lattice:UpdateServiceNetwork"
    ],
    "TargetGroup*": [
      "vpc-lattice:CreateTargetGroup",
      "vpc-lattice:DeleteTargetGroup",
      "vpc-lattice:DeregisterTargets",
      "vpc-lattice:GetTargetGroup",
      "vpc-lattice:ListTargets",
      "vpc-lattice:RegisterTargets",
      "vpc-lattice:UpdateTargetGroup"
    ],
    "Service": [
      "vpc-lattice:DeleteAuthPolicy",
      "vpc-lattice:DeleteResourcePolicy",
      "vpc-lattice:GetAuthPolicy",
      "vpc-lattice:GetResourcePolicy",
      "vpc-lattice:PutAuthPolicy",
      "vpc-lattice:PutResourcePolicy"
    ],
    "ServiceNetworkServiceAssociation*": [
      "vpc-lattice:DeleteServiceNetworkServiceAssociation",
      "vpc-lattice:GetServiceNetworkServiceAssociation"
    ],
    "ServiceNetworkVpcAssociation*": [
      "vpc-lattice:DeleteServiceNetworkVpcAssociation",
      "vpc-lattice:GetServiceNetworkVpcAssociation",
      "vpc-lattice:UpdateServiceNetworkVpcAssociation"
    ],
    "?": [
      "vpc-lattice:ListAccessLogSubscriptions",
      "vpc-lattice:ListListeners",
      "vpc-lattice:ListRules",
      "vpc-lattice:ListServiceNetworkServiceAssociations",
      "vpc-lattice:ListServiceNetworkVpcAssociations",
      "vpc-lattice:ListServiceNetworks",
      "vpc-lattice:ListServices",
      "vpc-lattice:ListTagsForResource",
      "vpc-lattice:ListTargetGroups"
    ],
    "AccessLogSubscription": [
      "vpc-lattice:TagResource",
      "vpc-lattice:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonvpclattice.html"
  },
  "vpc-lattice-svcs": {
    "Service*": [
      "vpc-lattice-svcs:Invoke"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonvpclatticeservices.html"
  },
  "waf": {
    "bytematchset*": [
      "waf:CreateByteMatchSet",
      "waf:DeleteByteMatchSet",
      "waf:GetByteMatchSet",
      "waf:UpdateByteMatchSet"
    ],
    "geomatchset*": [
      "waf:CreateGeoMatchSet",
      "waf:DeleteGeoMatchSet",
      "waf:GetGeoMatchSet",
      "waf:UpdateGeoMatchSet"
    ],
    "ipset*": [
      "waf:CreateIPSet",
      "waf:DeleteIPSet",
      "waf:GetIPSet",
      "waf:UpdateIPSet"
    ],
    "ratebasedrule*": [
      "waf:CreateRateBasedRule",
      "waf:DeleteRateBasedRule",
      "waf:GetRateBasedRule",
      "waf:GetRateBasedRuleManagedKeys",
      "waf:UpdateRateBasedRule"
    ],
    "regexmatchset*": [
      "waf:CreateRegexMatchSet",
      "waf:DeleteRegexMatchSet",
      "waf:GetRegexMatchSet",
      "waf:UpdateRegexMatchSet"
    ],
    "regexpatternset*": [
      "waf:CreateRegexPatternSet",
      "waf:DeleteRegexPatternSet",
      "waf:GetRegexPatternSet",
      "waf:UpdateRegexPatternSet"
    ],
    "rule*": [
      "waf:CreateRule",
      "waf:DeleteRule",
      "waf:GetRule",
      "waf:UpdateRule"
    ],
    "rulegroup*": [
      "waf:CreateRuleGroup",
      "waf:DeletePermissionPolicy",
      "waf:DeleteRuleGroup",
      "waf:GetPermissionPolicy",
      "waf:GetRuleGroup",
      "waf:PutPermissionPolicy",
      "waf:UpdateRuleGroup"
    ],
    "sizeconstraintset*": [
      "waf:CreateSizeConstraintSet",
      "waf:DeleteSizeConstraintSet",
      "waf:GetSizeConstraintSet",
      "waf:UpdateSizeConstraintSet"
    ],
    "sqlinjectionmatchset*": [
      "waf:CreateSqlInjectionMatchSet",
      "waf:DeleteSqlInjectionMatchSet",
      "waf:GetSqlInjectionMatchSet",
      "waf:UpdateSqlInjectionMatchSet"
    ],
    "webacl*": [
      "waf:CreateWebACL",
      "waf:CreateWebACLMigrationStack",
      "waf:DeleteLoggingConfiguration",
      "waf:DeleteWebACL",
      "waf:GetLoggingConfiguration",
      "waf:GetWebACL",
      "waf:PutLoggingConfiguration",
      "waf:UpdateWebACL"
    ],
    "xssmatchset*": [
      "waf:CreateXssMatchSet",
      "waf:DeleteXssMatchSet",
      "waf:GetXssMatchSet",
      "waf:UpdateXssMatchSet"
    ],
    "?": [
      "waf:GetChangeToken",
      "waf:GetChangeTokenStatus",
      "waf:ListActivatedRulesInRuleGroup",
      "waf:ListByteMatchSets",
      "waf:ListGeoMatchSets",
      "waf:ListIPSets",
      "waf:ListLoggingConfigurations",
      "waf:ListRateBasedRules",
      "waf:ListRegexMatchSets",
      "waf:ListRegexPatternSets",
      "waf:ListRuleGroups",
      "waf:ListRules",
      "waf:ListSizeConstraintSets",
      "waf:ListSqlInjectionMatchSets",
      "waf:ListSubscribedRuleGroups",
      "waf:ListWebACLs",
      "waf:ListXssMatchSets"
    ],
    "rule": [
      "waf:GetSampledRequests"
    ],
    "ratebasedrule": [
      "waf:ListTagsForResource",
      "waf:TagResource",
      "waf:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awswaf.html"
  },
  "waf-regional": {
    "loadbalancer/app/*": [
      "waf-regional:AssociateWebACL",
      "waf-regional:DisassociateWebACL",
      "waf-regional:GetWebACLForResource"
    ],
    "bytematchset*": [
      "waf-regional:CreateByteMatchSet",
      "waf-regional:DeleteByteMatchSet",
      "waf-regional:GetByteMatchSet",
      "waf-regional:UpdateByteMatchSet"
    ],
    "geomatchset*": [
      "waf-regional:CreateGeoMatchSet",
      "waf-regional:DeleteGeoMatchSet",
      "waf-regional:GetGeoMatchSet",
      "waf-regional:UpdateGeoMatchSet"
    ],
    "ipset*": [
      "waf-regional:CreateIPSet",
      "waf-regional:DeleteIPSet",
      "waf-regional:GetIPSet",
      "waf-regional:UpdateIPSet"
    ],
    "ratebasedrule*": [
      "waf-regional:CreateRateBasedRule",
      "waf-regional:DeleteRateBasedRule",
      "waf-regional:GetRateBasedRule",
      "waf-regional:GetRateBasedRuleManagedKeys",
      "waf-regional:UpdateRateBasedRule"
    ],
    "regexmatchset*": [
      "waf-regional:CreateRegexMatchSet",
      "waf-regional:DeleteRegexMatchSet",
      "waf-regional:GetRegexMatchSet",
      "waf-regional:UpdateRegexMatchSet"
    ],
    "regexpatternset*": [
      "waf-regional:CreateRegexPatternSet",
      "waf-regional:DeleteRegexPatternSet",
      "waf-regional:GetRegexPatternSet",
      "waf-regional:UpdateRegexPatternSet"
    ],
    "rule*": [
      "waf-regional:CreateRule",
      "waf-regional:DeleteRule",
      "waf-regional:GetRule",
      "waf-regional:UpdateRule"
    ],
    "rulegroup*": [
      "waf-regional:CreateRuleGroup",
      "waf-regional:DeletePermissionPolicy",
      "waf-regional:DeleteRuleGroup",
      "waf-regional:GetPermissionPolicy",
      "waf-regional:GetRuleGroup",
      "waf-regional:PutPermissionPolicy",
      "waf-regional:UpdateRuleGroup"
    ],
    "sizeconstraintset*": [
      "waf-regional:CreateSizeConstraintSet",
      "waf-regional:DeleteSizeConstraintSet",
      "waf-regional:GetSizeConstraintSet",
      "waf-regional:UpdateSizeConstraintSet"
    ],
    "sqlinjectionmatchset*": [
      "waf-regional:CreateSqlInjectionMatchSet",
      "waf-regional:DeleteSqlInjectionMatchSet",
      "waf-regional:GetSqlInjectionMatchSet",
      "waf-regional:UpdateSqlInjectionMatchSet"
    ],
    "webacl*": [
      "waf-regional:CreateWebACL",
      "waf-regional:CreateWebACLMigrationStack",
      "waf-regional:DeleteLoggingConfiguration",
      "waf-regional:DeleteWebACL",
      "waf-regional:GetLoggingConfiguration",
      "waf-regional:GetWebACL",
      "waf-regional:ListResourcesForWebACL",
      "waf-regional:PutLoggingConfiguration",
      "waf-regional:UpdateWebACL"
    ],
    "xssmatchset*": [
      "waf-regional:CreateXssMatchSet",
      "waf-regional:DeleteXssMatchSet",
      "waf-regional:GetXssMatchSet",
      "waf-regional:UpdateXssMatchSet"
    ],
    "?": [
      "waf-regional:GetChangeToken",
      "waf-regional:GetChangeTokenStatus",
      "waf-regional:ListActivatedRulesInRuleGroup",
      "waf-regional:ListByteMatchSets",
      "waf-regional:ListGeoMatchSets",
      "waf-regional:ListIPSets",
      "waf-regional:ListLoggingConfigurations",
      "waf-regional:ListRateBasedRules",
      "waf-regional:ListRegexMatchSets",
      "waf-regional:ListRegexPatternSets",
      "waf-regional:ListRuleGroups",
      "waf-regional:ListRules",
      "waf-regional:ListSizeConstraintSets",
      "waf-regional:ListSqlInjectionMatchSets",
      "waf-regional:ListSubscribedRuleGroups",
      "waf-regional:ListWebACLs",
      "waf-regional:ListXssMatchSets"
    ],
    "rule": [
      "waf-regional:GetSampledRequests"
    ],
    "ratebasedrule": [
      "waf-regional:ListTagsForResource",
      "waf-regional:TagResource",
      "waf-regional:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awswafregional.html"
  },
  "wafv2": {
    "webacl*": [
      "wafv2:AssociateWebACL",
      "wafv2:CreateWebACL",
      "wafv2:DeleteFirewallManagerRuleGroups",
      "wafv2:DeleteLoggingConfiguration",
      "wafv2:DeleteWebACL",
      "wafv2:GetLoggingConfiguration",
      "wafv2:GetRateBasedStatementManagedKeys",
      "wafv2:GetSampledRequests",
      "wafv2:GetWebACL",
      "wafv2:ListResourcesForWebACL",
      "wafv2:PutLoggingConfiguration",
      "wafv2:UpdateWebACL"
    ],
    "?": [
      "wafv2:CheckCapacity",
      "wafv2:DescribeManagedRuleGroup",
      "wafv2:GenerateMobileSdkReleaseUrl",
      "wafv2:GetMobileSdkRelease",
      "wafv2:ListAvailableManagedRuleGroupVersions",
      "wafv2:ListAvailableManagedRuleGroups",
      "wafv2:ListIPSets",
      "wafv2:ListLoggingConfigurations",
      "wafv2:ListManagedRuleSets",
      "wafv2:ListMobileSdkReleases",
      "wafv2:ListRegexPatternSets",
      "wafv2:ListRuleGroups",
      "wafv2:ListWebACLs"
    ],
    "ipset*": [
      "wafv2:CreateIPSet",
      "wafv2:DeleteIPSet",
      "wafv2:GetIPSet",
      "wafv2:UpdateIPSet"
    ],
    "regexpatternset*": [
      "wafv2:CreateRegexPatternSet",
      "wafv2:DeleteRegexPatternSet",
      "wafv2:GetRegexPatternSet",
      "wafv2:UpdateRegexPatternSet"
    ],
    "rulegroup*": [
      "wafv2:CreateRuleGroup",
      "wafv2:DeletePermissionPolicy",
      "wafv2:DeleteRuleGroup",
      "wafv2:GetPermissionPolicy",
      "wafv2:GetRuleGroup",
      "wafv2:PutPermissionPolicy",
      "wafv2:UpdateRuleGroup"
    ],
    "apigateway": [
      "wafv2:DisassociateWebACL",
      "wafv2:GetWebACLForResource"
    ],
    "managedruleset*": [
      "wafv2:GetManagedRuleSet",
      "wafv2:PutManagedRuleSetVersions",
      "wafv2:UpdateManagedRuleSetVersionExpiryDate"
    ],
    "ipset": [
      "wafv2:ListTagsForResource",
      "wafv2:TagResource",
      "wafv2:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awswafv2.html"
  },
  "wellarchitected": {
    "workload*": [
      "wellarchitected:AssociateLenses",
      "wellarchitected:CreateMilestone",
      "wellarchitected:CreateWorkloadShare",
      "wellarchitected:DeleteWorkload",
      "wellarchitected:DeleteWorkloadShare",
      "wellarchitected:DisassociateLenses",
      "wellarchitected:GetAnswer",
      "wellarchitected:GetLensReview",
      "wellarchitected:GetLensReviewReport",
      "wellarchitected:GetMilestone",
      "wellarchitected:GetWorkload",
      "wellarchitected:ListAnswers",
      "wellarchitected:ListCheckDetails",
      "wellarchitected:ListCheckSummaries",
      "wellarchitected:ListLensReviewImprovements",
      "wellarchitected:ListLensReviews",
      "wellarchitected:ListMilestones",
      "wellarchitected:ListWorkloadShares",
      "wellarchitected:UpdateAnswer",
      "wellarchitected:UpdateLensReview",
      "wellarchitected:UpdateWorkload",
      "wellarchitected:UpdateWorkloadShare",
      "wellarchitected:UpgradeLensReview"
    ],
    "lens*": [
      "wellarchitected:CreateLensShare",
      "wellarchitected:CreateLensVersion",
      "wellarchitected:DeleteLens",
      "wellarchitected:DeleteLensShare",
      "wellarchitected:ExportLens",
      "wellarchitected:GetLens",
      "wellarchitected:GetLensVersionDifference",
      "wellarchitected:ListLensShares"
    ],
    "?": [
      "wellarchitected:CreateWorkload",
      "wellarchitected:ImportLens",
      "wellarchitected:ListLenses",
      "wellarchitected:ListNotifications",
      "wellarchitected:ListShareInvitations",
      "wellarchitected:ListWorkloads",
      "wellarchitected:UpdateGlobalSettings",
      "wellarchitected:UpdateShareInvitation"
    ],
    "lens": [
      "wellarchitected:ListTagsForResource",
      "wellarchitected:TagResource",
      "wellarchitected:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awswell-architectedtool.html"
  },
  "wickr": {
    "network*": [
      "wickr:CreateAdminSession",
      "wickr:TagResource",
      "wickr:UntagResource",
      "wickr:UpdateNetworkDetails"
    ],
    "?": [
      "wickr:CreateNetwork",
      "wickr:ListNetworks",
      "wickr:ListTagsForResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awswickr.html"
  },
  "workdocs": {
    "?": [
      "workdocs:AbortDocumentVersionUpload",
      "workdocs:ActivateUser",
      "workdocs:AddResourcePermissions",
      "workdocs:CreateComment",
      "workdocs:CreateCustomMetadata",
      "workdocs:CreateFolder",
      "workdocs:CreateLabels",
      "workdocs:CreateNotificationSubscription",
      "workdocs:CreateUser",
      "workdocs:DeactivateUser",
      "workdocs:DeleteComment",
      "workdocs:DeleteCustomMetadata",
      "workdocs:DeleteDocument",
      "workdocs:DeleteDocumentVersion",
      "workdocs:DeleteFolder",
      "workdocs:DeleteFolderContents",
      "workdocs:DeleteLabels",
      "workdocs:DeleteNotificationSubscription",
      "workdocs:DeleteUser",
      "workdocs:DescribeActivities",
      "workdocs:DescribeComments",
      "workdocs:DescribeDocumentVersions",
      "workdocs:DescribeFolderContents",
      "workdocs:DescribeGroups",
      "workdocs:DescribeNotificationSubscriptions",
      "workdocs:DescribeResourcePermissions",
      "workdocs:DescribeRootFolders",
      "workdocs:DescribeUsers",
      "workdocs:GetCurrentUser",
      "workdocs:GetDocument",
      "workdocs:GetDocumentPath",
      "workdocs:GetDocumentVersion",
      "workdocs:GetFolder",
      "workdocs:GetFolderPath",
      "workdocs:GetResources",
      "workdocs:InitiateDocumentVersionUpload",
      "workdocs:RemoveAllResourcePermissions",
      "workdocs:RemoveResourcePermission",
      "workdocs:RestoreDocumentVersions",
      "workdocs:UpdateDocument",
      "workdocs:UpdateDocumentVersion",
      "workdocs:UpdateFolder",
      "workdocs:UpdateUser"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonworkdocs.html"
  },
  "worklink": {
    "fleet*": [
      "worklink:AssociateDomain",
      "worklink:AssociateWebsiteAuthorizationProvider",
      "worklink:AssociateWebsiteCertificateAuthority",
      "worklink:DeleteFleet",
      "worklink:DescribeAuditStreamConfiguration",
      "worklink:DescribeCompanyNetworkConfiguration",
      "worklink:DescribeDevice",
      "worklink:DescribeDevicePolicyConfiguration",
      "worklink:DescribeDomain",
      "worklink:DescribeFleetMetadata",
      "worklink:DescribeIdentityProviderConfiguration",
      "worklink:DescribeWebsiteCertificateAuthority",
      "worklink:DisassociateDomain",
      "worklink:DisassociateWebsiteAuthorizationProvider",
      "worklink:DisassociateWebsiteCertificateAuthority",
      "worklink:ListDevices",
      "worklink:ListDomains",
      "worklink:ListTagsForResource",
      "worklink:ListWebsiteAuthorizationProviders",
      "worklink:ListWebsiteCertificateAuthorities",
      "worklink:RestoreDomainAccess",
      "worklink:RevokeDomainAccess",
      "worklink:SignOutUser",
      "worklink:TagResource",
      "worklink:UntagResource",
      "worklink:UpdateAuditStreamConfiguration",
      "worklink:UpdateCompanyNetworkConfiguration",
      "worklink:UpdateDevicePolicyConfiguration",
      "worklink:UpdateDomainMetadata",
      "worklink:UpdateFleetMetadata",
      "worklink:UpdateIdentityProviderConfiguration"
    ],
    "?": [
      "worklink:CreateFleet",
      "worklink:ListFleets"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonworklink.html"
  },
  "workmail": {
    "organization*": [
      "workmail:AssociateDelegateToResource",
      "workmail:AssociateMemberToGroup",
      "workmail:AssumeImpersonationRole",
      "workmail:CancelMailboxExportJob",
      "workmail:CreateAlias",
      "workmail:CreateAvailabilityConfiguration",
      "workmail:CreateGroup",
      "workmail:CreateImpersonationRole",
      "workmail:CreateMobileDeviceAccessRule",
      "workmail:CreateResource",
      "workmail:CreateUser",
      "workmail:DeleteAccessControlRule",
      "workmail:DeleteAlias",
      "workmail:DeleteAvailabilityConfiguration",
      "workmail:DeleteEmailMonitoringConfiguration",
      "workmail:DeleteGroup",
      "workmail:DeleteImpersonationRole",
      "workmail:DeleteMailboxPermissions",
      "workmail:DeleteMobileDeviceAccessOverride",
      "workmail:DeleteMobileDeviceAccessRule",
      "workmail:DeleteOrganization",
      "workmail:DeleteResource",
      "workmail:DeleteRetentionPolicy",
      "workmail:DeleteUser",
      "workmail:DeregisterFromWorkMail",
      "workmail:DeregisterMailDomain",
      "workmail:DescribeEmailMonitoringConfiguration",
      "workmail:DescribeGroup",
      "workmail:DescribeInboundDmarcSettings",
      "workmail:DescribeMailboxExportJob",
      "workmail:DescribeOrganization",
      "workmail:DescribeResource",
      "workmail:DescribeUser",
      "workmail:DisassociateDelegateFromResource",
      "workmail:DisassociateMemberFromGroup",
      "workmail:GetAccessControlEffect",
      "workmail:GetDefaultRetentionPolicy",
      "workmail:GetImpersonationRole",
      "workmail:GetImpersonationRoleEffect",
      "workmail:GetMailDomain",
      "workmail:GetMailboxDetails",
      "workmail:GetMobileDeviceAccessEffect",
      "workmail:GetMobileDeviceAccessOverride",
      "workmail:ListAccessControlRules",
      "workmail:ListAliases",
      "workmail:ListAvailabilityConfigurations",
      "workmail:ListGroupMembers",
      "workmail:ListGroups",
      "workmail:ListImpersonationRoles",
      "workmail:ListMailDomains",
      "workmail:ListMailboxExportJobs",
      "workmail:ListMailboxPermissions",
      "workmail:ListMobileDeviceAccessOverrides",
      "workmail:ListMobileDeviceAccessRules",
      "workmail:ListResourceDelegates",
      "workmail:ListResources",
      "workmail:ListTagsForResource",
      "workmail:ListUsers",
      "workmail:PutAccessControlRule",
      "workmail:PutEmailMonitoringConfiguration",
      "workmail:PutInboundDmarcSettings",
      "workmail:PutMailboxPermissions",
      "workmail:PutMobileDeviceAccessOverride",
      "workmail:PutRetentionPolicy",
      "workmail:RegisterMailDomain",
      "workmail:RegisterToWorkMail",
      "workmail:ResetPassword",
      "workmail:StartMailboxExportJob",
      "workmail:TagResource",
      "workmail:TestAvailabilityConfiguration",
      "workmail:UntagResource",
      "workmail:UpdateAvailabilityConfiguration",
      "workmail:UpdateDefaultMailDomain",
      "workmail:UpdateImpersonationRole",
      "workmail:UpdateMailboxQuota",
      "workmail:UpdateMobileDeviceAccessRule",
      "workmail:UpdatePrimaryEmailAddress",
      "workmail:UpdateResource"
    ],
    "?": [
      "workmail:CreateOrganization",
      "workmail:ListOrganizations"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonworkmail.html"
  },
  "workmailmessageflow": {
    "RawMessage*": [
      "workmailmessageflow:GetRawMessageContent",
      "workmailmessageflow:PutRawMessageContent"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonworkmailmessageflow.html"
  },
  "workspaces": {
    "connectionalias*": [
      "workspaces:AssociateConnectionAlias",
      "workspaces:DeleteConnectionAlias",
      "workspaces:DescribeConnectionAliasPermissions",
      "workspaces:DisassociateConnectionAlias",
      "workspaces:UpdateConnectionAliasPermission"
    ],
    "directoryid*": [
      "workspaces:AssociateIpGroups",
      "workspaces:CreateConnectClientAddIn",
      "workspaces:CreateStandbyWorkspaces",
      "workspaces:CreateWorkspaces",
      "workspaces:DeleteClientBranding",
      "workspaces:DeleteConnectClientAddIn",
      "workspaces:DeregisterWorkspaceDirectory",
      "workspaces:DescribeClientBranding",
      "workspaces:DescribeClientProperties",
      "workspaces:DescribeConnectClientAddIns",
      "workspaces:DisassociateIpGroups",
      "workspaces:ImportClientBranding",
      "workspaces:ModifyCertificateBasedAuthProperties",
      "workspaces:ModifyClientProperties",
      "workspaces:ModifySamlProperties",
      "workspaces:ModifySelfservicePermissions",
      "workspaces:ModifyWorkspaceAccessProperties",
      "workspaces:ModifyWorkspaceCreationProperties",
      "workspaces:RegisterWorkspaceDirectory",
      "workspaces:Stream",
      "workspaces:UpdateConnectClientAddIn"
    ],
    "workspaceipgroup*": [
      "workspaces:AuthorizeIpRules",
      "workspaces:DeleteIpGroup",
      "workspaces:DescribeIpGroups",
      "workspaces:RevokeIpRules",
      "workspaces:UpdateRulesOfIpGroup"
    ],
    "workspaceimage*": [
      "workspaces:CopyWorkspaceImage",
      "workspaces:CreateUpdatedWorkspaceImage",
      "workspaces:DeleteWorkspaceImage",
      "workspaces:DescribeWorkspaceImagePermissions",
      "workspaces:UpdateWorkspaceImagePermission"
    ],
    "?": [
      "workspaces:CreateConnectionAlias",
      "workspaces:CreateIpGroup",
      "workspaces:CreateTags",
      "workspaces:DeleteTags",
      "workspaces:DescribeAccount",
      "workspaces:DescribeAccountModifications",
      "workspaces:DescribeConnectionAliases",
      "workspaces:DescribeTags",
      "workspaces:DescribeWorkspaceBundles",
      "workspaces:DescribeWorkspaceDirectories",
      "workspaces:DescribeWorkspaceImages",
      "workspaces:DescribeWorkspaces",
      "workspaces:DescribeWorkspacesConnectionStatus",
      "workspaces:ImportWorkspaceImage",
      "workspaces:ListAvailableManagementCidrRanges",
      "workspaces:ModifyAccount"
    ],
    "workspacebundle*": [
      "workspaces:CreateWorkspaceBundle",
      "workspaces:DeleteWorkspaceBundle",
      "workspaces:MigrateWorkspace",
      "workspaces:UpdateWorkspaceBundle"
    ],
    "workspaceid*": [
      "workspaces:CreateWorkspaceImage",
      "workspaces:DescribeWorkspaceSnapshots",
      "workspaces:ModifyWorkspaceProperties",
      "workspaces:ModifyWorkspaceState",
      "workspaces:RebootWorkspaces",
      "workspaces:RebuildWorkspaces",
      "workspaces:RestoreWorkspace",
      "workspaces:StartWorkspaces",
      "workspaces:StopWorkspaces",
      "workspaces:TerminateWorkspaces"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonworkspaces.html"
  },
  "wam": {
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonworkspacesapplicationmanager.html"
  },
  "workspaces-web": {
    "browserSettings*": [
      "workspaces-web:AssociateBrowserSettings",
      "workspaces-web:DeleteBrowserSettings",
      "workspaces-web:GetBrowserSettings",
      "workspaces-web:UpdateBrowserSettings"
    ],
    "networkSettings*": [
      "workspaces-web:AssociateNetworkSettings",
      "workspaces-web:DeleteNetworkSettings",
      "workspaces-web:GetNetworkSettings",
      "workspaces-web:UpdateNetworkSettings"
    ],
    "portal*": [
      "workspaces-web:AssociateTrustStore",
      "workspaces-web:AssociateUserAccessLoggingSettings",
      "workspaces-web:AssociateUserSettings",
      "workspaces-web:CreateIdentityProvider",
      "workspaces-web:DeletePortal",
      "workspaces-web:DisassociateBrowserSettings",
      "workspaces-web:DisassociateNetworkSettings",
      "workspaces-web:DisassociateTrustStore",
      "workspaces-web:DisassociateUserAccessLoggingSettings",
      "workspaces-web:DisassociateUserSettings",
      "workspaces-web:GetPortal",
      "workspaces-web:GetPortalServiceProviderMetadata",
      "workspaces-web:UpdatePortal"
    ],
    "?": [
      "workspaces-web:CreateBrowserSettings",
      "workspaces-web:CreateNetworkSettings",
      "workspaces-web:CreatePortal",
      "workspaces-web:CreateTrustStore",
      "workspaces-web:CreateUserAccessLoggingSettings",
      "workspaces-web:CreateUserSettings",
      "workspaces-web:DeleteIdentityProvider",
      "workspaces-web:GetIdentityProvider",
      "workspaces-web:ListBrowserSettings",
      "workspaces-web:ListIdentityProviders",
      "workspaces-web:ListNetworkSettings",
      "workspaces-web:ListPortals",
      "workspaces-web:ListTagsForResource",
      "workspaces-web:ListTrustStoreCertificates",
      "workspaces-web:ListTrustStores",
      "workspaces-web:ListUserAccessLoggingSettings",
      "workspaces-web:ListUserSettings",
      "workspaces-web:UpdateIdentityProvider"
    ],
    "trustStore*": [
      "workspaces-web:DeleteTrustStore",
      "workspaces-web:GetTrustStore",
      "workspaces-web:GetTrustStoreCertificate",
      "workspaces-web:UpdateTrustStore"
    ],
    "userAccessLoggingSettings*": [
      "workspaces-web:DeleteUserAccessLoggingSettings",
      "workspaces-web:GetUserAccessLoggingSettings",
      "workspaces-web:UpdateUserAccessLoggingSettings"
    ],
    "userSettings*": [
      "workspaces-web:DeleteUserSettings",
      "workspaces-web:GetUserSettings",
      "workspaces-web:UpdateUserSettings"
    ],
    "browserSettings": [
      "workspaces-web:TagResource",
      "workspaces-web:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonworkspacesweb.html"
  },
  "xray": {
    "?": [
      "xray:BatchGetTraces",
      "xray:DeleteResourcePolicy",
      "xray:GetEncryptionConfig",
      "xray:GetGroups",
      "xray:GetInsight",
      "xray:GetInsightEvents",
      "xray:GetInsightImpactGraph",
      "xray:GetInsightSummaries",
      "xray:GetSamplingRules",
      "xray:GetSamplingStatisticSummaries",
      "xray:GetSamplingTargets",
      "xray:GetServiceGraph",
      "xray:GetTimeSeriesServiceStatistics",
      "xray:GetTraceGraph",
      "xray:GetTraceSummaries",
      "xray:ListResourcePolicies",
      "xray:PutEncryptionConfig",
      "xray:PutResourcePolicy",
      "xray:PutTelemetryRecords",
      "xray:PutTraceSegments"
    ],
    "group*": [
      "xray:CreateGroup",
      "xray:DeleteGroup",
      "xray:GetGroup",
      "xray:UpdateGroup"
    ],
    "sampling-rule*": [
      "xray:CreateSamplingRule",
      "xray:DeleteSamplingRule",
      "xray:UpdateSamplingRule"
    ],
    "group": [
      "xray:ListTagsForResource",
      "xray:TagResource",
      "xray:UntagResource"
    ],
    "_url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsx-ray.html"
  }
}