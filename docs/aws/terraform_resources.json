[["accessanalyzer_analyzer", "IAM Access Analyzer", null, null], ["accessanalyzer_archive_rule", "IAM Access Analyzer", null, null], ["account_alternate_contact", "Account Management", "account", "AlternateContact"], ["acm_certificate", "ACM", "acm", "Certificate"], ["acm_certificate_validation", "ACM", "acm", "CertificateValidation"], ["acmpca_certificate", "ACM PCA", "acm-pca", "Certificate"], ["acmpca_certificate_authority", "ACM PCA", "acm-pca", "CertificateAuthority"], ["acmpca_certificate_authority_certificate", "ACM PCA", "acm-pca", "CertificateAuthorityCertificate"], ["acmpca_permission", "ACM PCA", "acm-pca", "Permission"], ["acmpca_policy", "ACM PCA", "acm-pca", "Policy"], ["ami", "EC2", "ec2", "Ami"], ["ami_copy", "EC2", "ec2", "AmiCopy"], ["ami_from_instance", "EC2", "ec2", "Ami"], ["ami_ids", "EC2", "ec2", "AmiId"], ["ami_launch_permission", "EC2", "ec2", "AmiLaunchPermission"], ["amplify_app", "Amplify", "amplify", "App"], ["amplify_backend_environment", "Amplify", "amplify", "BackendEnvironment"], ["amplify_branch", "Amplify", "amplify", "Branch"], ["amplify_domain_association", "Amplify", "amplify", "DomainAssociation"], ["amplify_webhook", "Amplify", "amplify", "Webhook"], ["api_gateway_account", "API Gateway", "apigateway", "GatewayAccount"], ["api_gateway_api_key", "API Gateway", "apigateway", "GatewayApiKey"], ["api_gateway_authorizer", "API Gateway", "apigateway", "GatewayAuthorizer"], ["api_gateway_base_path_mapping", "API Gateway", "apigateway", "GatewayBasePathMapping"], ["api_gateway_client_certificate", "API Gateway", "apigateway", "GatewayClientCertificate"], ["api_gateway_deployment", "API Gateway", "apigateway", "GatewayDeployment"], ["api_gateway_documentation_part", "API Gateway", "apigateway", "GatewayDocumentationPart"], ["api_gateway_documentation_version", "API Gateway", "apigateway", "GatewayDocumentationVersion"], ["api_gateway_domain_name", "API Gateway", "apigateway", "GatewayDomainName"], ["api_gateway_export", "API Gateway", "apigateway", "GatewayExport"], ["api_gateway_gateway_response", "API Gateway", "apigateway", "GatewayGatewayResponse"], ["api_gateway_integration", "API Gateway", "apigateway", "GatewayIntegration"], ["api_gateway_integration_response", "API Gateway", "apigateway", "GatewayIntegrationResponse"], ["api_gateway_method", "API Gateway", "apigateway", "GatewayMethod"], ["api_gateway_method_response", "API Gateway", "apigateway", "GatewayMethodResponse"], ["api_gateway_method_settings", "API Gateway", "apigateway", "GatewayMethodSetting"], ["api_gateway_model", "API Gateway", "apigateway", "GatewayModel"], ["api_gateway_request_validator", "API Gateway", "apigateway", "GatewayRequestValidator"], ["api_gateway_resource", "API Gateway", "apigateway", "GatewayResource"], ["api_gateway_rest_api", "API Gateway", "apigateway", "GatewayRestApus"], ["api_gateway_rest_api_policy", "API Gateway", "apigateway", "GatewayRestApiPolicy"], ["api_gateway_sdk", "API Gateway", "apigateway", "GatewaySdk"], ["api_gateway_stage", "API Gateway", "apigateway", "GatewayStage"], ["api_gateway_usage_plan", "API Gateway", "apigateway", "GatewayUsagePlan"], ["api_gateway_usage_plan_key", "API Gateway", "apigateway", "GatewayUsagePlanKey"], ["api_gateway_vpc_link", "API Gateway", "apigateway", "GatewayVpcLink"], ["apigatewayv2_api", "API Gateway V2", "apigateway", "V2Apus"], ["apigatewayv2_api_mapping", "API Gateway V2", "apigateway", "V2ApiMapping"], ["apigatewayv2_apis", "API Gateway V2", "apigateway", "V2Api"], ["apigatewayv2_authorizer", "API Gateway V2", "apigateway", "V2Authorizer"], ["apigatewayv2_deployment", "API Gateway V2", "apigateway", "V2Deployment"], ["apigatewayv2_domain_name", "API Gateway V2", "apigateway", "V2DomainName"], ["apigatewayv2_export", "API Gateway V2", "apigateway", "V2Export"], ["apigatewayv2_integration", "API Gateway V2", "apigateway", "V2Integration"], ["apigatewayv2_integration_response", "API Gateway V2", "apigateway", "V2IntegrationResponse"], ["apigatewayv2_model", "API Gateway V2", "apigateway", "V2Model"], ["apigatewayv2_route", "API Gateway V2", "apigateway", "V2Route"], ["apigatewayv2_route_response", "API Gateway V2", "apigateway", "V2RouteResponse"], ["apigatewayv2_stage", "API Gateway V2", "apigateway", "V2Stage"], ["apigatewayv2_vpc_link", "API Gateway V2", "apigateway", "V2VpcLink"], ["app_cookie_stickiness_policy", "ELB Classic", null, null], ["appautoscaling_policy", "Application Auto Scaling", null, null], ["appautoscaling_scheduled_action", "Application Auto Scaling", null, null], ["appautoscaling_target", "Application Auto Scaling", null, null], ["appconfig_application", "AppConfig", "appconfig", "Application"], ["appconfig_configuration_profile", "AppConfig", "appconfig", "ConfigurationProfile"], ["appconfig_configuration_profiles", "AppConfig", "appconfig", "ConfigurationProfile"], ["appconfig_deployment", "AppConfig", "appconfig", "Deployment"], ["appconfig_deployment_strategy", "AppConfig", "appconfig", "DeploymentStrategy"], ["appconfig_environment", "AppConfig", "appconfig", "Environment"], ["appconfig_environments", "AppConfig", "appconfig", "Environment"], ["appconfig_extension", "AppConfig", "appconfig", "Extension"], ["appconfig_extension_association", "AppConfig", "appconfig", "ExtensionAssociation"], ["appconfig_hosted_configuration_version", "AppConfig", "appconfig", "HostedConfigurationVersion"], ["appflow_connector_profile", "AppFlow", "appflow", "ConnectorProfile"], ["appflow_flow", "AppFlow", "appflow", "Flow"], ["appintegrations_event_integration", "AppIntegrations", null, null], ["applicationinsights_application", "CloudWatch Application Insights", "applicationinsights", "Application"], ["appmesh_gateway_route", "App Mesh", "appmesh", "GatewayRoute"], ["appmesh_mesh", "App Mesh", "appmesh", "Mesh"], ["appmesh_route", "App Mesh", "appmesh", "Route"], ["appmesh_virtual_gateway", "App Mesh", "appmesh", "VirtualGateway"], ["appmesh_virtual_node", "App Mesh", "appmesh", "VirtualNode"], ["appmesh_virtual_router", "App Mesh", "appmesh", "VirtualRouter"], ["appmesh_virtual_service", "App Mesh", "appmesh", "VirtualService"], ["apprunner_auto_scaling_configuration_version", "App Runner", "apprunner", "AutoScalingConfigurationVersion"], ["apprunner_connection", "App Runner", "apprunner", "Connection"], ["apprunner_custom_domain_association", "App Runner", "apprunner", "CustomDomainAssociation"], ["apprunner_observability_configuration", "App Runner", "apprunner", "ObservabilityConfiguration"], ["apprunner_service", "App Runner", "apprunner", "Service"], ["apprunner_vpc_connector", "App Runner", "apprunner", "VpcConnector"], ["apprunner_vpc_ingress_connection", "App Runner", "apprunner", "VpcIngressConnection"], ["appstream_directory_config", "AppStream 2.0", "appstream", "DirectoryConfig"], ["appstream_fleet", "AppStream 2.0", "appstream", "Fleet"], ["appstream_fleet_stack_association", "AppStream 2.0", "appstream", "FleetStackAssociation"], ["appstream_image_builder", "AppStream 2.0", "appstream", "ImageBuilder"], ["appstream_stack", "AppStream 2.0", "appstream", "Stack"], ["appstream_user", "AppStream 2.0", "appstream", "User"], ["appstream_user_stack_association", "AppStream 2.0", "appstream", "UserStackAssociation"], ["appsync_api_cache", "AppSync", "appsync", "ApiCache"], ["appsync_api_key", "AppSync", "appsync", "ApiKey"], ["appsync_datasource", "AppSync", "appsync", "Datasource"], ["appsync_domain_name", "AppSync", "appsync", "DomainName"], ["appsync_domain_name_api_association", "AppSync", "appsync", "DomainNameApiAssociation"], ["appsync_function", "AppSync", "appsync", "Function"], ["appsync_graphql_api", "AppSync", "appsync", "GraphqlApus"], ["appsync_resolver", "AppSync", "appsync", "Resolver"], ["appsync_type", "AppSync", "appsync", "Type"], ["arn", "Meta Data Sources", null, null], ["athena_data_catalog", "Athena", "athena", "DataCatalog"], ["athena_database", "Athena", "athena", "Database"], ["athena_named_query", "Athena", "athena", "NamedQuery"], ["athena_workgroup", "Athena", "athena", "Workgroup"], ["auditmanager_account_registration", "Audit Manager", "auditmanager", "AccountRegistration"], ["auditmanager_assessment", "Audit Manager", "auditmanager", "Assessment"], ["auditmanager_assessment_delegation", "Audit Manager", "auditmanager", "AssessmentDelegation"], ["auditmanager_assessment_report", "Audit Manager", "auditmanager", "AssessmentReport"], ["auditmanager_control", "Audit Manager", "auditmanager", "Control"], ["auditmanager_framework", "Audit Manager", "auditmanager", "Framework"], ["auditmanager_framework_share", "Audit Manager", "auditmanager", "FrameworkShare"], ["auditmanager_organization_admin_account_registration", "Audit Manager", "auditmanager", "OrganizationAdminAccountRegistration"], ["autoscaling_attachment", "Auto Scaling", "autoscaling", "Attachment"], ["autoscaling_group", "Auto Scaling", "autoscaling", "Group"], ["autoscaling_group_tag", "Auto Scaling", "autoscaling", "GroupTag"], ["autoscaling_groups", "Auto Scaling", "autoscaling", "Group"], ["autoscaling_lifecycle_hook", "Auto Scaling", "autoscaling", "LifecycleHook"], ["autoscaling_notification", "Auto Scaling", "autoscaling", "Notification"], ["autoscaling_policy", "Auto Scaling", "autoscaling", "Policy"], ["autoscaling_schedule", "Auto Scaling", "autoscaling", "Schedule"], ["autoscalingplans_scaling_plan", "Auto Scaling Plans", null, null], ["availability_zone", "EC2", "ec2", "AvailabilityZone"], ["availability_zones", "EC2", "ec2", "AvailabilityZone"], ["backup_framework", "Backup", "backup", "Framework"], ["backup_global_settings", "Backup", "backup", "GlobalSetting"], ["backup_plan", "Backup", "backup", "Plan"], ["backup_region_settings", "Backup", "backup", "RegionSetting"], ["backup_report_plan", "Backup", "backup", "ReportPlan"], ["backup_selection", "Backup", "backup", "Selection"], ["backup_vault", "Backup", "backup", "Vault"], ["backup_vault_lock_configuration", "Backup", "backup", "VaultLockConfiguration"], ["backup_vault_notifications", "Backup", "backup", "VaultNotification"], ["backup_vault_policy", "Backup", "backup", "VaultPolicy"], ["batch_compute_environment", "Batch", "batch", "ComputeEnvironment"], ["batch_job_definition", "Batch", "batch", "JobDefinition"], ["batch_job_queue", "Batch", "batch", "JobQueue"], ["batch_scheduling_policy", "Batch", "batch", "SchedulingPolicy"], ["billing_service_account", "Meta Data Sources", "billing", "ServiceAccount"], ["budgets_budget", "Web Services Budgets", "budgets", "Budget"], ["budgets_budget_action", "Web Services Budgets", "budgets", "BudgetAction"], ["caller_identity", "STS", "sts", "CallerIdentity"], ["canonical_user_id", "S3", "s3", "CanonicalUserId"], ["ce_anomaly_monitor", "CE", "ce", "AnomalyMonitor"], ["ce_anomaly_subscription", "CE", "ce", "AnomalySubscription"], ["ce_cost_allocation_tag", "CE", "ce", "CostAllocationTag"], ["ce_cost_category", "CE", "ce", "CostCategory"], ["ce_tags", "CE", "ce", "Tag"], ["chime_voice_connector", "Chime", "chime", "VoiceConnector"], ["chime_voice_connector_group", "Chime", "chime", "VoiceConnectorGroup"], ["chime_voice_connector_logging", "Chime", "chime", "VoiceConnectorLogging"], ["chime_voice_connector_origination", "Chime", "chime", "VoiceConnectorOrigination"], ["chime_voice_connector_streaming", "Chime", "chime", "VoiceConnectorStreaming"], ["chime_voice_connector_termination", "Chime", "chime", "VoiceConnectorTermination"], ["chime_voice_connector_termination_credentials", "Chime", "chime", "VoiceConnectorTerminationCredential"], ["cloud9_environment_ec2", "Cloud9", "cloud9", "EnvironmentEc2"], ["cloud9_environment_membership", "Cloud9", "cloud9", "EnvironmentMembership"], ["cloudcontrolapi_resource", "Cloud Control API", null, null], ["cloudformation_export", "CloudFormation", "cloudformation", "Export"], ["cloudformation_stack", "CloudFormation", "cloudformation", "Stack"], ["cloudformation_stack_set", "CloudFormation", "cloudformation", "StackSet"], ["cloudformation_stack_set_instance", "CloudFormation", "cloudformation", "StackSetInstance"], ["cloudformation_type", "CloudFormation", "cloudformation", "Type"], ["cloudfront_cache_policy", "CloudFront", "cloudfront", "CachePolicy"], ["cloudfront_distribution", "CloudFront", "cloudfront", "Distribution"], ["cloudfront_field_level_encryption_config", "CloudFront", "cloudfront", "FieldLevelEncryptionConfig"], ["cloudfront_field_level_encryption_profile", "CloudFront", "cloudfront", "FieldLevelEncryptionProfile"], ["cloudfront_function", "CloudFront", "cloudfront", "Function"], ["cloudfront_key_group", "CloudFront", "cloudfront", "KeyGroup"], ["cloudfront_log_delivery_canonical_user_id", "CloudFront", "cloudfront", "LogDeliveryCanonicalUserId"], ["cloudfront_monitoring_subscription", "CloudFront", "cloudfront", "MonitoringSubscription"], ["cloudfront_origin_access_control", "CloudFront", "cloudfront", "OriginAccessControl"], ["cloudfront_origin_access_identities", "CloudFront", "cloudfront", "OriginAccessIdentity"], ["cloudfront_origin_access_identity", "CloudFront", "cloudfront", "OriginAccessIdentity"], ["cloudfront_origin_request_policy", "CloudFront", "cloudfront", "OriginRequestPolicy"], ["cloudfront_public_key", "CloudFront", "cloudfront", "PublicKey"], ["cloudfront_realtime_log_config", "CloudFront", "cloudfront", "RealtimeLogConfig"], ["cloudfront_response_headers_policy", "CloudFront", "cloudfront", "ResponseHeadersPolicy"], ["cloudhsm_v2_cluster", "CloudHSM", "cloudhsm", "V2Cluster"], ["cloudhsm_v2_hsm", "CloudHSM", "cloudhsm", "V2Hsm"], ["cloudsearch_domain", "CloudSearch", "cloudsearch", "Domain"], ["cloudsearch_domain_service_access_policy", "CloudSearch", "cloudsearch", "DomainServiceAccessPolicy"], ["cloudtrail", "CloudTrail", "cloudtrail", ""], ["cloudtrail_event_data_store", "CloudTrail", "cloudtrail", "EventDataStore"], ["cloudtrail_service_account", "CloudTrail", "cloudtrail", "ServiceAccount"], ["cloudwatch_composite_alarm", "CloudWatch", "cloudwatch", "CompositeAlarm"], ["cloudwatch_dashboard", "CloudWatch", "cloudwatch", "Dashboard"], ["cloudwatch_event_api_destination", "EventBridge", "cloudwatch", "EventApiDestination"], ["cloudwatch_event_archive", "EventBridge", "cloudwatch", "EventArchive"], ["cloudwatch_event_bus", "EventBridge", "cloudwatch", "EventBu"], ["cloudwatch_event_bus_policy", "EventBridge", "cloudwatch", "EventBusPolicy"], ["cloudwatch_event_connection", "EventBridge", "cloudwatch", "EventConnection"], ["cloudwatch_event_permission", "EventBridge", "cloudwatch", "EventPermission"], ["cloudwatch_event_rule", "EventBridge", "cloudwatch", "EventRule"], ["cloudwatch_event_source", "EventBridge", "cloudwatch", "EventSource"], ["cloudwatch_event_target", "EventBridge", "cloudwatch", "EventTarget"], ["cloudwatch_log_data_protection_policy", "CloudWatch Logs", "logs", "LogDataProtectionPolicy"], ["cloudwatch_log_data_protection_policy_document", "CloudWatch Logs", "logs", "LogDataProtectionPolicyDocument"], ["cloudwatch_log_destination", "CloudWatch Logs", "logs", "LogDestination"], ["cloudwatch_log_destination_policy", "CloudWatch Logs", "logs", "LogDestinationPolicy"], ["cloudwatch_log_group", "CloudWatch Logs", "logs", "LogGroup"], ["cloudwatch_log_groups", "CloudWatch Logs", "logs", "LogGroup"], ["cloudwatch_log_metric_filter", "CloudWatch Logs", "logs", "LogMetricFilter"], ["cloudwatch_log_resource_policy", "CloudWatch Logs", "logs", "LogResourcePolicy"], ["cloudwatch_log_stream", "CloudWatch Logs", "logs", "LogStream"], ["cloudwatch_log_subscription_filter", "CloudWatch Logs", "logs", "LogSubscriptionFilter"], ["cloudwatch_metric_alarm", "CloudWatch", "cloudwatch", "MetricAlarm"], ["cloudwatch_metric_stream", "CloudWatch", "cloudwatch", "MetricStream"], ["cloudwatch_query_definition", "CloudWatch Logs", "cloudwatch", "QueryDefinition"], ["codeartifact_authorization_token", "CodeArtifact", "codeartifact", "AuthorizationToken"], ["codeartifact_domain", "CodeArtifact", "codeartifact", "Domain"], ["codeartifact_domain_permissions_policy", "CodeArtifact", "codeartifact", "DomainPermissionsPolicy"], ["codeartifact_repository", "CodeArtifact", "codeartifact", "Repository"], ["codeartifact_repository_endpoint", "CodeArtifact", "codeartifact", "RepositoryEndpoint"], ["codeartifact_repository_permissions_policy", "CodeArtifact", "codeartifact", "RepositoryPermissionsPolicy"], ["codebuild_project", "CodeBuild", "codebuild", "Project"], ["codebuild_report_group", "CodeBuild", "codebuild", "ReportGroup"], ["codebuild_resource_policy", "CodeBuild", "codebuild", "ResourcePolicy"], ["codebuild_source_credential", "CodeBuild", "codebuild", "SourceCredential"], ["codebuild_webhook", "CodeBuild", "codebuild", "Webhook"], ["codecommit_approval_rule_template", "CodeCommit", "codecommit", "ApprovalRuleTemplate"], ["codecommit_approval_rule_template_association", "CodeCommit", "codecommit", "ApprovalRuleTemplateAssociation"], ["codecommit_repository", "CodeCommit", "codecommit", "Repository"], ["codecommit_trigger", "CodeCommit", "codecommit", "Trigger"], ["codedeploy_app", "CodeDeploy", "codedeploy", "App"], ["codedeploy_deployment_config", "CodeDeploy", "codedeploy", "DeploymentConfig"], ["codedeploy_deployment_group", "CodeDeploy", "codedeploy", "DeploymentGroup"], ["codepipeline", "CodePipeline", "codepipeline", ""], ["codepipeline_custom_action_type", "CodePipeline", "codepipeline", "CustomActionType"], ["codepipeline_webhook", "CodePipeline", "codepipeline", "Webhook"], ["codestarconnections_connection", "CodeStar Connections", "codestar-connections", "Connection"], ["codestarconnections_host", "CodeStar Connections", "codestar-connections", "Host"], ["codestarnotifications_notification_rule", "CodeStar Notifications", "codestar-notifications", "NotificationRule"], ["cognito_identity_pool", "Cognito Identity", "cognito-identity", "IdentityPool"], ["cognito_identity_pool_provider_principal_tag", "Cognito Identity", "cognito-identity", "IdentityPoolProviderPrincipalTag"], ["cognito_identity_pool_roles_attachment", "Cognito Identity", "cognito-identity", "IdentityPoolRolesAttachment"], ["cognito_identity_provider", "Cognito IDP", "cognito-idp", "IdentityProvider"], ["cognito_resource_server", "Cognito IDP", "cognito-idp", "ResourceServer"], ["cognito_risk_configuration", "Cognito IDP", "cognito-idp", "RiskConfiguration"], ["cognito_user", "Cognito IDP", "cognito-idp", "User"], ["cognito_user_group", "Cognito IDP", "cognito-idp", "UserGroup"], ["cognito_user_in_group", "Cognito IDP", "cognito-idp", "UserInGroup"], ["cognito_user_pool", "Cognito IDP", "cognito-idp", "UserPool"], ["cognito_user_pool_client", "Cognito IDP", "cognito-idp", "UserPoolClient"], ["cognito_user_pool_clients", "Cognito IDP", "cognito-idp", "UserPoolClient"], ["cognito_user_pool_domain", "Cognito IDP", "cognito-idp", "UserPoolDomain"], ["cognito_user_pool_signing_certificate", "Cognito IDP", "cognito-idp", "UserPoolSigningCertificate"], ["cognito_user_pool_ui_customization", "Cognito IDP", "cognito-idp", "UserPoolUiCustomization"], ["cognito_user_pools", "Cognito IDP", "cognito-idp", "UserPool"], ["comprehend_document_classifier", "Comprehend", "comprehend", "DocumentClassifier"], ["comprehend_entity_recognizer", "Comprehend", "comprehend", "EntityRecognizer"], ["config_aggregate_authorization", "Config", "config", "AggregateAuthorization"], ["config_config_rule", "Config", "config", "ConfigRule"], ["config_configuration_aggregator", "Config", "config", "ConfigurationAggregator"], ["config_configuration_recorder", "Config", "config", "ConfigurationRecorder"], ["config_configuration_recorder_status", "Config", "config", "ConfigurationRecorderStatus"], ["config_conformance_pack", "Config", "config", "ConformancePack"], ["config_delivery_channel", "Config", "config", "DeliveryChannel"], ["config_organization_conformance_pack", "Config", "config", "OrganizationConformancePack"], ["config_organization_custom_rule", "Config", "config", "OrganizationCustomRule"], ["config_organization_managed_rule", "Config", "config", "OrganizationManagedRule"], ["config_remediation_configuration", "Config", "config", "RemediationConfiguration"], ["connect_bot_association", "Connect", "connect", "BotAssociation"], ["connect_contact_flow", "Connect", "connect", "ContactFlow"], ["connect_contact_flow_module", "Connect", "connect", "ContactFlowModule"], ["connect_hours_of_operation", "Connect", "connect", "HoursOfOperation"], ["connect_instance", "Connect", "connect", "Instance"], ["connect_instance_storage_config", "Connect", "connect", "InstanceStorageConfig"], ["connect_lambda_function_association", "Connect", "connect", "LambdaFunctionAssociation"], ["connect_phone_number", "Connect", "connect", "PhoneNumber"], ["connect_prompt", "Connect", "connect", "Prompt"], ["connect_queue", "Connect", "connect", "Queue"], ["connect_quick_connect", "Connect", "connect", "QuickConnect"], ["connect_routing_profile", "Connect", "connect", "RoutingProfile"], ["connect_security_profile", "Connect", "connect", "SecurityProfile"], ["connect_user", "Connect", "connect", "User"], ["connect_user_hierarchy_group", "Connect", "connect", "UserHierarchyGroup"], ["connect_user_hierarchy_structure", "Connect", "connect", "UserHierarchyStructure"], ["connect_vocabulary", "Connect", "connect", "Vocabulary"], ["controltower_control", "Control Tower", "controltower", "Control"], ["controltower_controls", "Control Tower", "controltower", "Control"], ["cur_report_definition", "Cost and Usage Report", "cur", "ReportDefinition"], ["customer_gateway", "VPN", null, null], ["dataexchange_data_set", "Data Exchange", "dataexchange", "DataSet"], ["dataexchange_revision", "Data Exchange", "dataexchange", "Revision"], ["datapipeline_pipeline", "Data Pipeline", "datapipeline", "Pipeline"], ["datapipeline_pipeline_definition", "Data Pipeline", "datapipeline", "PipelineDefinition"], ["datasync_agent", "DataSync", "datasync", "Agent"], ["datasync_location_efs", "DataSync", "datasync", "LocationEf"], ["datasync_location_fsx_lustre_file_system", "DataSync", "datasync", "LocationFsxLustreFileSystem"], ["datasync_location_fsx_openzfs_file_system", "DataSync", "datasync", "LocationFsxOpenzfsFileSystem"], ["datasync_location_fsx_windows_file_system", "DataSync", "datasync", "LocationFsxWindowsFileSystem"], ["datasync_location_hdfs", "DataSync", "datasync", "LocationHdf"], ["datasync_location_nfs", "DataSync", "datasync", "LocationNf"], ["datasync_location_object_storage", "DataSync", "datasync", "LocationObjectStorage"], ["datasync_location_s3", "DataSync", "datasync", "LocationS3"], ["datasync_location_smb", "DataSync", "datasync", "LocationSmb"], ["datasync_task", "DataSync", "datasync", "Task"], ["dax_cluster", "DynamoDB Accelerator", "dax", "Cluster"], ["dax_parameter_group", "DynamoDB Accelerator", "dax", "ParameterGroup"], ["dax_subnet_group", "DynamoDB Accelerator", "dax", "SubnetGroup"], ["db_cluster_snapshot", "RDS", "rds", "BClusterSnapshot"], ["db_event_categories", "RDS", "rds", "BEventCategory"], ["db_event_subscription", "RDS", "rds", "BEventSubscription"], ["db_instance", "RDS", "rds", "BInstance"], ["db_instance_automated_backups_replication", "RDS", "rds", "BInstanceAutomatedBackupsReplication"], ["db_instance_role_association", "RDS", "rds", "BInstanceRoleAssociation"], ["db_instances", "RDS", "rds", "BInstance"], ["db_option_group", "RDS", "rds", "BOptionGroup"], ["db_parameter_group", "RDS", "rds", "BParameterGroup"], ["db_proxy", "RDS", "rds", "BProxy"], ["db_proxy_default_target_group", "RDS", "rds", "BProxyDefaultTargetGroup"], ["db_proxy_endpoint", "RDS", "rds", "BProxyEndpoint"], ["db_proxy_target", "RDS", "rds", "BProxyTarget"], ["db_security_group", "RDS", "rds", "BSecurityGroup"], ["db_snapshot", "RDS", "rds", "BSnapshot"], ["db_snapshot_copy", "RDS", "rds", "BSnapshotCopy"], ["db_subnet_group", "RDS", "rds", "BSubnetGroup"], ["default_network_acl", "VPC", "ec2", "DefaultNetworkAcl"], ["default_route_table", "VPC", "ec2", "DefaultRouteTable"], ["default_security_group", "VPC", "ec2", "DefaultSecurityGroup"], ["default_subnet", "VPC", "ec2", "DefaultSubnet"], ["default_tags", "Meta Data Sources", null, null], ["default_vpc", "VPC", "ec2", "DefaultVpc"], ["default_vpc_dhcp_options", "VPC", "ec2", "DefaultVpcDhcpOption"], ["detective_graph", "Detective", "detective", "Graph"], ["detective_invitation_accepter", "Detective", "detective", "InvitationAccepter"], ["detective_member", "Detective", "detective", "Member"], ["devicefarm_device_pool", "Device Farm", "devicefarm", "DevicePool"], ["devicefarm_instance_profile", "Device Farm", "devicefarm", "InstanceProfile"], ["devicefarm_network_profile", "Device Farm", "devicefarm", "NetworkProfile"], ["devicefarm_project", "Device Farm", "devicefarm", "Project"], ["devicefarm_test_grid_project", "Device Farm", "devicefarm", "TestGridProject"], ["devicefarm_upload", "Device Farm", "devicefarm", "Upload"], ["directory_service_conditional_forwarder", "DS", "ds", "IrectoryServiceConditionalForwarder"], ["directory_service_directory", "DS", "ds", "IrectoryServiceDirectory"], ["directory_service_log_subscription", "DS", "ds", "IrectoryServiceLogSubscription"], ["directory_service_radius_settings", "DS", "ds", "IrectoryServiceRadiusSetting"], ["directory_service_region", "DS", "ds", "IrectoryServiceRegion"], ["directory_service_shared_directory", "DS", "ds", "IrectoryServiceSharedDirectory"], ["directory_service_shared_directory_accepter", "DS", "ds", "IrectoryServiceSharedDirectoryAccepter"], ["dlm_lifecycle_policy", "DLM", "dlm", "LifecyclePolicy"], ["dms_certificate", "DMS", "dms", "Certificate"], ["dms_endpoint", "DMS", "dms", "Endpoint"], ["dms_event_subscription", "DMS", "dms", "EventSubscription"], ["dms_replication_instance", "DMS", "dms", "ReplicationInstance"], ["dms_replication_subnet_group", "DMS", "dms", "ReplicationSubnetGroup"], ["dms_replication_task", "DMS", "dms", "ReplicationTask"], ["dms_s3_endpoint", "DMS", "dms", "S3Endpoint"], ["docdb_cluster", "DocDB", null, null], ["docdb_cluster_instance", "DocDB", null, null], ["docdb_cluster_parameter_group", "DocDB", null, null], ["docdb_cluster_snapshot", "DocDB", null, null], ["docdb_engine_version", "DocDB", null, null], ["docdb_event_subscription", "DocDB", null, null], ["docdb_global_cluster", "DocDB", null, null], ["docdb_orderable_db_instance", "DocDB", null, null], ["docdb_subnet_group", "DocDB", null, null], ["dx_bgp_peer", "Direct Connect", "directconnect", "XBgpPeer"], ["dx_connection", "Direct Connect", "directconnect", "XConnection"], ["dx_connection_association", "Direct Connect", "directconnect", "XConnectionAssociation"], ["dx_connection_confirmation", "Direct Connect", "directconnect", "XConnectionConfirmation"], ["dx_gateway", "Direct Connect", "directconnect", "XGateway"], ["dx_gateway_association", "Direct Connect", "directconnect", "XGatewayAssociation"], ["dx_gateway_association_proposal", "Direct Connect", "directconnect", "XGatewayAssociationProposal"], ["dx_hosted_connection", "Direct Connect", "directconnect", "XHostedConnection"], ["dx_hosted_private_virtual_interface", "Direct Connect", "directconnect", "XHostedPrivateVirtualInterface"], ["dx_hosted_private_virtual_interface_accepter", "Direct Connect", "directconnect", "XHostedPrivateVirtualInterfaceAccepter"], ["dx_hosted_public_virtual_interface", "Direct Connect", "directconnect", "XHostedPublicVirtualInterface"], ["dx_hosted_public_virtual_interface_accepter", "Direct Connect", "directconnect", "XHostedPublicVirtualInterfaceAccepter"], ["dx_hosted_transit_virtual_interface", "Direct Connect", "directconnect", "XHostedTransitVirtualInterface"], ["dx_hosted_transit_virtual_interface_accepter", "Direct Connect", "directconnect", "XHostedTransitVirtualInterfaceAccepter"], ["dx_lag", "Direct Connect", "directconnect", "XLag"], ["dx_location", "Direct Connect", "directconnect", "XLocation"], ["dx_locations", "Direct Connect", "directconnect", "XLocation"], ["dx_macsec_key_association", "Direct Connect", "directconnect", "XMacsecKeyAssociation"], ["dx_private_virtual_interface", "Direct Connect", "directconnect", "XPrivateVirtualInterface"], ["dx_public_virtual_interface", "Direct Connect", "directconnect", "XPublicVirtualInterface"], ["dx_router_configuration", "Direct Connect", "directconnect", "XRouterConfiguration"], ["dx_transit_virtual_interface", "Direct Connect", "directconnect", "XTransitVirtualInterface"], ["dynamodb_contributor_insights", "DynamoDB", "dynamodb", "ContributorInsight"], ["dynamodb_global_table", "DynamoDB", "dynamodb", "GlobalTable"], ["dynamodb_kinesis_streaming_destination", "DynamoDB", "dynamodb", "KinesisStreamingDestination"], ["dynamodb_table", "DynamoDB", "dynamodb", "Table"], ["dynamodb_table_item", "DynamoDB", "dynamodb", "TableItem"], ["dynamodb_table_replica", "DynamoDB", "dynamodb", "TableReplica"], ["dynamodb_tag", "DynamoDB", "dynamodb", "Tag"], ["ebs_default_kms_key", "EBS", "ebs", "DefaultKmsKey"], ["ebs_encryption_by_default", "EBS", "ebs", "Encryption"], ["ebs_snapshot", "EBS", "ebs", "Snapshot"], ["ebs_snapshot_copy", "EBS", "ebs", "SnapshotCopy"], ["ebs_snapshot_ids", "EBS", "ebs", "SnapshotId"], ["ebs_snapshot_import", "EBS", "ebs", "SnapshotImport"], ["ebs_volume", "EBS", "ebs", "Volume"], ["ebs_volumes", "EBS", "ebs", "Volume"], ["ec2_availability_zone_group", "EC2", "ec2", "AvailabilityZoneGroup"], ["ec2_capacity_reservation", "EC2", "ec2", "CapacityReservation"], ["ec2_carrier_gateway", "Wavelength", "ec2", "CarrierGateway"], ["ec2_client_vpn_authorization_rule", "VPN", "ec2", "ClientVpnAuthorizationRule"], ["ec2_client_vpn_endpoint", "VPN", "ec2", "ClientVpnEndpoint"], ["ec2_client_vpn_network_association", "VPN", "ec2", "ClientVpnNetworkAssociation"], ["ec2_client_vpn_route", "VPN", "ec2", "ClientVpnRoute"], ["ec2_coip_pool", "Outposts", "ec2", "CoipPool"], ["ec2_coip_pools", "Outposts", "ec2", "CoipPool"], ["ec2_fleet", "EC2", "ec2", "Fleet"], ["ec2_host", "EC2", "ec2", "Host"], ["ec2_instance_state", "EC2", "ec2", "InstanceState"], ["ec2_instance_type", "EC2", "ec2", "InstanceType"], ["ec2_instance_type_offering", "EC2", "ec2", "InstanceTypeOffering"], ["ec2_instance_type_offerings", "EC2", "ec2", "InstanceTypeOffering"], ["ec2_instance_types", "EC2", "ec2", "InstanceType"], ["ec2_local_gateway", "Outposts", "ec2", "LocalGateway"], ["ec2_local_gateway_route", "Outposts", "ec2", "LocalGatewayRoute"], ["ec2_local_gateway_route_table", "Outposts", "ec2", "LocalGatewayRouteTable"], ["ec2_local_gateway_route_table_vpc_association", "Outposts", "ec2", "LocalGatewayRouteTableVpcAssociation"], ["ec2_local_gateway_route_tables", "Outposts", "ec2", "LocalGatewayRouteTable"], ["ec2_local_gateway_virtual_interface", "Outposts", "ec2", "LocalGatewayVirtualInterface"], ["ec2_local_gateway_virtual_interface_group", "Outposts", "ec2", "LocalGatewayVirtualInterfaceGroup"], ["ec2_local_gateway_virtual_interface_groups", "Outposts", "ec2", "LocalGatewayVirtualInterfaceGroup"], ["ec2_local_gateways", "Outposts", "ec2", "LocalGateway"], ["ec2_managed_prefix_list", "VPC", "ec2", "ManagedPrefixList"], ["ec2_managed_prefix_list_entry", "VPC", "ec2", "ManagedPrefixListEntry"], ["ec2_managed_prefix_lists", "VPC", "ec2", "ManagedPrefixList"], ["ec2_network_insights_analysis", "VPC", "ec2", "NetworkInsightsAnalysi"], ["ec2_network_insights_path", "VPC", "ec2", "NetworkInsightsPath"], ["ec2_serial_console_access", "EC2", "ec2", "SerialConsoleAcces"], ["ec2_spot_price", "EC2", "ec2", "SpotPrice"], ["ec2_subnet_cidr_reservation", "VPC", "ec2", "SubnetCidrReservation"], ["ec2_tag", "EC2", "ec2", "Tag"], ["ec2_traffic_mirror_filter", "VPC", "ec2", "TrafficMirrorFilter"], ["ec2_traffic_mirror_filter_rule", "VPC", "ec2", "TrafficMirrorFilterRule"], ["ec2_traffic_mirror_session", "VPC", "ec2", "TrafficMirrorSession"], ["ec2_traffic_mirror_target", "VPC", "ec2", "TrafficMirrorTarget"], ["ec2_transit_gateway", "Transit Gateway", "ec2", "TransitGateway"], ["ec2_transit_gateway_attachment", "Transit Gateway", "ec2", "TransitGatewayAttachment"], ["ec2_transit_gateway_connect", "Transit Gateway", "ec2", "TransitGatewayConnect"], ["ec2_transit_gateway_connect_peer", "Transit Gateway", "ec2", "TransitGatewayConnectPeer"], ["ec2_transit_gateway_dx_gateway_attachment", "Transit Gateway", "ec2", "TransitGatewayDxGatewayAttachment"], ["ec2_transit_gateway_multicast_domain", "Transit Gateway", "ec2", "TransitGatewayMulticastDomain"], ["ec2_transit_gateway_multicast_domain_association", "Transit Gateway", "ec2", "TransitGatewayMulticastDomainAssociation"], ["ec2_transit_gateway_multicast_group_member", "Transit Gateway", "ec2", "TransitGatewayMulticastGroupMember"], ["ec2_transit_gateway_multicast_group_source", "Transit Gateway", "ec2", "TransitGatewayMulticastGroupSource"], ["ec2_transit_gateway_peering_attachment", "Transit Gateway", "ec2", "TransitGatewayPeeringAttachment"], ["ec2_transit_gateway_peering_attachment_accepter", "Transit Gateway", "ec2", "TransitGatewayPeeringAttachmentAccepter"], ["ec2_transit_gateway_policy_table", "Transit Gateway", "ec2", "TransitGatewayPolicyTable"], ["ec2_transit_gateway_policy_table_association", "Transit Gateway", "ec2", "TransitGatewayPolicyTableAssociation"], ["ec2_transit_gateway_prefix_list_reference", "Transit Gateway", "ec2", "TransitGatewayPrefixListReference"], ["ec2_transit_gateway_route", "Transit Gateway", "ec2", "TransitGatewayRoute"], ["ec2_transit_gateway_route_table", "Transit Gateway", "ec2", "TransitGatewayRouteTable"], ["ec2_transit_gateway_route_table_association", "Transit Gateway", "ec2", "TransitGatewayRouteTableAssociation"], ["ec2_transit_gateway_route_table_propagation", "Transit Gateway", "ec2", "TransitGatewayRouteTablePropagation"], ["ec2_transit_gateway_route_tables", "Transit Gateway", "ec2", "TransitGatewayRouteTable"], ["ec2_transit_gateway_vpc_attachment", "Transit Gateway", "ec2", "TransitGatewayVpcAttachment"], ["ec2_transit_gateway_vpc_attachment_accepter", "Transit Gateway", "ec2", "TransitGatewayVpcAttachmentAccepter"], ["ec2_transit_gateway_vpc_attachments", "Transit Gateway", "ec2", "TransitGatewayVpcAttachment"], ["ec2_transit_gateway_vpn_attachment", "Transit Gateway", "ec2", "TransitGatewayVpnAttachment"], ["ecr_authorization_token", "ECR", "ecr", "AuthorizationToken"], ["ecr_image", "ECR", "ecr", "Image"], ["ecr_lifecycle_policy", "ECR", "ecr", "LifecyclePolicy"], ["ecr_pull_through_cache_rule", "ECR", "ecr", "PullThroughCacheRule"], ["ecr_registry_policy", "ECR", "ecr", "RegistryPolicy"], ["ecr_registry_scanning_configuration", "ECR", "ecr", "RegistryScanningConfiguration"], ["ecr_replication_configuration", "ECR", "ecr", "ReplicationConfiguration"], ["ecr_repository", "ECR", "ecr", "Repository"], ["ecr_repository_policy", "ECR", "ecr", "RepositoryPolicy"], ["ecrpublic_authorization_token", "ECR Public", "ecr-public", "AuthorizationToken"], ["ecrpublic_repository", "ECR Public", "ecr-public", "Repository"], ["ecrpublic_repository_policy", "ECR Public", "ecr-public", "RepositoryPolicy"], ["ecs_account_setting_default", "ECS", "ecs", "AccountSettingDefault"], ["ecs_capacity_provider", "ECS", "ecs", "CapacityProvider"], ["ecs_cluster", "ECS", "ecs", "Cluster"], ["ecs_cluster_capacity_providers", "ECS", "ecs", "ClusterCapacityProvider"], ["ecs_container_definition", "ECS", "ecs", "ContainerDefinition"], ["ecs_service", "ECS", "ecs", "Service"], ["ecs_tag", "ECS", "ecs", "Tag"], ["ecs_task_definition", "ECS", "ecs", "TaskDefinition"], ["ecs_task_execution", "ECS", "ecs", "TaskExecution"], ["ecs_task_set", "ECS", "ecs", "TaskSet"], ["efs_access_point", "EFS", null, null], ["efs_access_points", "EFS", null, null], ["efs_backup_policy", "EFS", null, null], ["efs_file_system", "EFS", null, null], ["efs_file_system_policy", "EFS", null, null], ["efs_mount_target", "EFS", null, null], ["efs_replication_configuration", "EFS", null, null], ["egress_only_internet_gateway", "VPC", "ec2", "GressOnlyInternetGateway"], ["eip", "EC2", "ec2", "Ip"], ["eip_association", "EC2", "ec2", "IpAssociation"], ["eips", "EC2", "ec2", "Ip"], ["eks_addon", "EKS", "eks", "Addon"], ["eks_addon_version", "EKS", "eks", "AddonVersion"], ["eks_cluster", "EKS", "eks", "Cluster"], ["eks_cluster_auth", "EKS", "eks", "ClusterAuth"], ["eks_clusters", "EKS", "eks", "Cluster"], ["eks_fargate_profile", "EKS", "eks", "FargateProfile"], ["eks_identity_provider_config", "EKS", "eks", "IdentityProviderConfig"], ["eks_node_group", "EKS", "eks", "NodeGroup"], ["eks_node_groups", "EKS", "eks", "NodeGroup"], ["elastic_beanstalk_application", "Elastic Beanstalk", "elasticbeanstalk", "BeanstalkApplication"], ["elastic_beanstalk_application_version", "Elastic Beanstalk", "elasticbeanstalk", "BeanstalkApplicationVersion"], ["elastic_beanstalk_configuration_template", "Elastic Beanstalk", "elasticbeanstalk", "BeanstalkConfigurationTemplate"], ["elastic_beanstalk_environment", "Elastic Beanstalk", "elasticbeanstalk", "BeanstalkEnvironment"], ["elastic_beanstalk_hosted_zone", "Elastic Beanstalk", "elasticbeanstalk", "BeanstalkHostedZone"], ["elastic_beanstalk_solution_stack", "Elastic Beanstalk", "elasticbeanstalk", "BeanstalkSolutionStack"], ["elasticache_cluster", "ElastiCache", "elasticache", "Cluster"], ["elasticache_global_replication_group", "ElastiCache", "elasticache", "GlobalReplicationGroup"], ["elasticache_parameter_group", "ElastiCache", "elasticache", "ParameterGroup"], ["elasticache_replication_group", "ElastiCache", "elasticache", "ReplicationGroup"], ["elasticache_security_group", "ElastiCache", "elasticache", "SecurityGroup"], ["elasticache_subnet_group", "ElastiCache", "elasticache", "SubnetGroup"], ["elasticache_user", "ElastiCache", "elasticache", "User"], ["elasticache_user_group", "ElastiCache", "elasticache", "UserGroup"], ["elasticache_user_group_association", "ElastiCache", "elasticache", "UserGroupAssociation"], ["elasticsearch_domain", "Elasticsearch", null, null], ["elasticsearch_domain_policy", "Elasticsearch", null, null], ["elasticsearch_domain_saml_options", "Elasticsearch", null, null], ["elastictranscoder_pipeline", "Elastic Transcoder", "elastictranscoder", "Pipeline"], ["elastictranscoder_preset", "Elastic Transcoder", "elastictranscoder", "Preset"], ["elb", "ELB Classic", null, null], ["elb_attachment", "ELB Classic", null, null], ["elb_hosted_zone_id", "ELB Classic", null, null], ["elb_service_account", "ELB Classic", null, null], ["emr_cluster", "EMR", null, null], ["emr_instance_fleet", "EMR", null, null], ["emr_instance_group", "EMR", null, null], ["emr_managed_scaling_policy", "EMR", null, null], ["emr_release_labels", "EMR", null, null], ["emr_security_configuration", "EMR", null, null], ["emr_studio", "EMR", null, null], ["emr_studio_session_mapping", "EMR", null, null], ["emrcontainers_virtual_cluster", "EMR Containers", "emr-containers", "VirtualCluster"], ["emrserverless_application", "EMR Serverless", "emr-serverless", "Application"], ["evidently_feature", "CloudWatch Evidently", "evidently", "Feature"], ["evidently_launch", "CloudWatch Evidently", "evidently", "Launch"], ["evidently_project", "CloudWatch Evidently", "evidently", "Project"], ["evidently_segment", "CloudWatch Evidently", "evidently", "Segment"], ["fis_experiment_template", "FIS", "fis", "ExperimentTemplate"], ["flow_log", "VPC", "ec2", "FlowLog"], ["fms_admin_account", "FMS", "fms", "AdminAccount"], ["fms_policy", "FMS", "fms", "Policy"], ["fsx_backup", "FSx", "fsx", "Backup"], ["fsx_data_repository_association", "FSx", "fsx", "DataRepositoryAssociation"], ["fsx_file_cache", "FSx", "fsx", "FileCache"], ["fsx_lustre_file_system", "FSx", "fsx", "LustreFileSystem"], ["fsx_ontap_file_system", "FSx", "fsx", "OntapFileSystem"], ["fsx_ontap_storage_virtual_machine", "FSx", "fsx", "OntapStorageVirtualMachine"], ["fsx_ontap_volume", "FSx", "fsx", "OntapVolume"], ["fsx_openzfs_file_system", "FSx", "fsx", "OpenzfsFileSystem"], ["fsx_openzfs_snapshot", "FSx", "fsx", "OpenzfsSnapshot"], ["fsx_openzfs_volume", "FSx", "fsx", "OpenzfsVolume"], ["fsx_windows_file_system", "FSx", "fsx", "WindowsFileSystem"], ["gamelift_alias", "GameLift", "gamelift", "Alia"], ["gamelift_build", "GameLift", "gamelift", "Build"], ["gamelift_fleet", "GameLift", "gamelift", "Fleet"], ["gamelift_game_server_group", "GameLift", "gamelift", "GameServerGroup"], ["gamelift_game_session_queue", "GameLift", "gamelift", "GameSessionQueue"], ["gamelift_script", "GameLift", "gamelift", "Script"], ["glacier_vault", "S3 Glacier", "glacier", "Vault"], ["glacier_vault_lock", "S3 Glacier", "glacier", "VaultLock"], ["globalaccelerator_accelerator", "Global Accelerator", "globalaccelerator", "Accelerator"], ["globalaccelerator_endpoint_group", "Global Accelerator", "globalaccelerator", "EndpointGroup"], ["globalaccelerator_listener", "Global Accelerator", "globalaccelerator", "Listener"], ["glue_catalog_database", "Glue", "glue", "CatalogDatabase"], ["glue_catalog_table", "Glue", "glue", "CatalogTable"], ["glue_classifier", "Glue", "glue", "Classifier"], ["glue_connection", "Glue", "glue", "Connection"], ["glue_crawler", "Glue", "glue", "Crawler"], ["glue_data_catalog_encryption_settings", "Glue", "glue", "DataCatalogEncryptionSetting"], ["glue_dev_endpoint", "Glue", "glue", "DevEndpoint"], ["glue_job", "Glue", "glue", "Job"], ["glue_ml_transform", "Glue", "glue", "MlTransform"], ["glue_partition", "Glue", "glue", "Partition"], ["glue_partition_index", "Glue", "glue", "PartitionIndex"], ["glue_registry", "Glue", "glue", "Registry"], ["glue_resource_policy", "Glue", "glue", "ResourcePolicy"], ["glue_schema", "Glue", "glue", "Schema"], ["glue_script", "Glue", "glue", "Script"], ["glue_security_configuration", "Glue", "glue", "SecurityConfiguration"], ["glue_trigger", "Glue", "glue", "Trigger"], ["glue_user_defined_function", "Glue", "glue", "UserDefinedFunction"], ["glue_workflow", "Glue", "glue", "Workflow"], ["grafana_license_association", "Managed Grafana", "grafana", "LicenseAssociation"], ["grafana_role_association", "Managed Grafana", "grafana", "RoleAssociation"], ["grafana_workspace", "Managed Grafana", "grafana", "Workspace"], ["grafana_workspace_api_key", "Managed Grafana", "grafana", "WorkspaceApiKey"], ["grafana_workspace_saml_configuration", "Managed Grafana", "grafana", "WorkspaceSamlConfiguration"], ["guardduty_detector", "GuardDuty", "guardduty", "Detector"], ["guardduty_filter", "GuardDuty", "guardduty", "Filter"], ["guardduty_invite_accepter", "GuardDuty", "guardduty", "InviteAccepter"], ["guardduty_ipset", "GuardDuty", "guardduty", "Ipset"], ["guardduty_member", "GuardDuty", "guardduty", "Member"], ["guardduty_organization_admin_account", "GuardDuty", "guardduty", "OrganizationAdminAccount"], ["guardduty_organization_configuration", "GuardDuty", "guardduty", "OrganizationConfiguration"], ["guardduty_publishing_destination", "GuardDuty", "guardduty", "PublishingDestination"], ["guardduty_threatintelset", "GuardDuty", "guardduty", "Threatintelset"], ["iam_access_key", "IAM", "iam", "AccessKey"], ["iam_account_alias", "IAM", "iam", "AccountAlia"], ["iam_account_password_policy", "IAM", "iam", "AccountPasswordPolicy"], ["iam_group", "IAM", "iam", "Group"], ["iam_group_membership", "IAM", "iam", "GroupMembership"], ["iam_group_policy", "IAM", "iam", "GroupPolicy"], ["iam_group_policy_attachment", "IAM", "iam", "GroupPolicyAttachment"], ["iam_instance_profile", "IAM", "iam", "InstanceProfile"], ["iam_instance_profiles", "IAM", "iam", "InstanceProfile"], ["iam_openid_connect_provider", "IAM", "iam", "OpenidConnectProvider"], ["iam_policy", "IAM", "iam", "Policy"], ["iam_policy_attachment", "IAM", "iam", "PolicyAttachment"], ["iam_policy_document", "IAM", "iam", "PolicyDocument"], ["iam_role", "IAM", "iam", "Role"], ["iam_role_policy", "IAM", "iam", "RolePolicy"], ["iam_role_policy_attachment", "IAM", "iam", "RolePolicyAttachment"], ["iam_roles", "IAM", "iam", "Role"], ["iam_saml_provider", "IAM", "iam", "SamlProvider"], ["iam_server_certificate", "IAM", "iam", "ServerCertificate"], ["iam_service_linked_role", "IAM", "iam", "ServiceLinkedRole"], ["iam_service_specific_credential", "IAM", "iam", "ServiceSpecificCredential"], ["iam_session_context", "IAM", "iam", "SessionContext"], ["iam_signing_certificate", "IAM", "iam", "SigningCertificate"], ["iam_user", "IAM", "iam", "User"], ["iam_user_group_membership", "IAM", "iam", "UserGroupMembership"], ["iam_user_login_profile", "IAM", "iam", "UserLoginProfile"], ["iam_user_policy", "IAM", "iam", "UserPolicy"], ["iam_user_policy_attachment", "IAM", "iam", "UserPolicyAttachment"], ["iam_user_ssh_key", "IAM", "iam", "UserSshKey"], ["iam_users", "IAM", "iam", "User"], ["iam_virtual_mfa_device", "IAM", "iam", "VirtualMfaDevice"], ["identitystore_group", "SSO Identity Store", "identitystore", "Group"], ["identitystore_group_membership", "SSO Identity Store", "identitystore", "GroupMembership"], ["identitystore_user", "SSO Identity Store", "identitystore", "User"], ["imagebuilder_component", "EC2 Image Builder", "imagebuilder", "Component"], ["imagebuilder_components", "EC2 Image Builder", "imagebuilder", "Component"], ["imagebuilder_container_recipe", "EC2 Image Builder", "imagebuilder", "ContainerRecipe"], ["imagebuilder_container_recipes", "EC2 Image Builder", "imagebuilder", "ContainerRecipe"], ["imagebuilder_distribution_configuration", "EC2 Image Builder", "imagebuilder", "DistributionConfiguration"], ["imagebuilder_distribution_configurations", "EC2 Image Builder", "imagebuilder", "DistributionConfiguration"], ["imagebuilder_image", "EC2 Image Builder", "imagebuilder", "Image"], ["imagebuilder_image_pipeline", "EC2 Image Builder", "imagebuilder", "ImagePipeline"], ["imagebuilder_image_pipelines", "EC2 Image Builder", "imagebuilder", "ImagePipeline"], ["imagebuilder_image_recipe", "EC2 Image Builder", "imagebuilder", "ImageRecipe"], ["imagebuilder_image_recipes", "EC2 Image Builder", "imagebuilder", "ImageRecipe"], ["imagebuilder_infrastructure_configuration", "EC2 Image Builder", "imagebuilder", "InfrastructureConfiguration"], ["imagebuilder_infrastructure_configurations", "EC2 Image Builder", "imagebuilder", "InfrastructureConfiguration"], ["inspector2_delegated_admin_account", "Inspector V2", "inspector2", "DelegatedAdminAccount"], ["inspector2_enabler", "Inspector V2", "inspector2", "Enabler"], ["inspector2_organization_configuration", "Inspector V2", "inspector2", "OrganizationConfiguration"], ["inspector_assessment_target", "Inspector", "inspector", "AssessmentTarget"], ["inspector_assessment_template", "Inspector", "inspector", "AssessmentTemplate"], ["inspector_resource_group", "Inspector", "inspector", "ResourceGroup"], ["inspector_rules_packages", "Inspector", "inspector", "RulesPackage"], ["instance", "EC2", "ec2", "Instance"], ["instances", "EC2", "ec2", "Instance"], ["internet_gateway", "VPC", "ec2", "InternetGateway"], ["internet_gateway_attachment", "VPC", "ec2", "InternetGatewayAttachment"], ["iot_authorizer", "IoT Core", "iot", "Authorizer"], ["iot_certificate", "IoT Core", "iot", "Certificate"], ["iot_endpoint", "IoT Core", "iot", "Endpoint"], ["iot_indexing_configuration", "IoT Core", "iot", "IndexingConfiguration"], ["iot_logging_options", "IoT Core", "iot", "LoggingOption"], ["iot_policy", "IoT Core", "iot", "Policy"], ["iot_policy_attachment", "IoT Core", "iot", "PolicyAttachment"], ["iot_provisioning_template", "IoT Core", "iot", "ProvisioningTemplate"], ["iot_role_alias", "IoT Core", "iot", "RoleAlia"], ["iot_thing", "IoT Core", "iot", "Thing"], ["iot_thing_group", "IoT Core", "iot", "ThingGroup"], ["iot_thing_group_membership", "IoT Core", "iot", "ThingGroupMembership"], ["iot_thing_principal_attachment", "IoT Core", "iot", "ThingPrincipalAttachment"], ["iot_thing_type", "IoT Core", "iot", "ThingType"], ["iot_topic_rule", "IoT Core", "iot", "TopicRule"], ["iot_topic_rule_destination", "IoT Core", "iot", "TopicRuleDestination"], ["ip_ranges", "Meta Data Sources", null, null], ["ivs_channel", "IVS", "ivs", "Channel"], ["ivs_playback_key_pair", "IVS", "ivs", "PlaybackKeyPair"], ["ivs_recording_configuration", "IVS", "ivs", "RecordingConfiguration"], ["ivs_stream_key", "IVS", "ivs", "StreamKey"], ["ivschat_logging_configuration", "IVS", "ivschat", "LoggingConfiguration"], ["ivschat_room", "IVS", "ivschat", "Room"], ["kendra_data_source", "Kendra", "kendra", "DataSource"], ["kendra_experience", "Kendra", "kendra", "Experience"], ["kendra_faq", "Kendra", "kendra", "Faq"], ["kendra_index", "Kendra", "kendra", "Index"], ["kendra_query_suggestions_block_list", "Kendra", "kendra", "QuerySuggestionsBlockList"], ["kendra_thesaurus", "Kendra", "kendra", "Thesauru"], ["key_pair", "EC2", "ec2", "KeyPair"], ["keyspaces_keyspace", "Keyspaces", null, null], ["keyspaces_table", "Keyspaces", null, null], ["kinesis_analytics_application", "Kinesis Analytics", "kinesis", "AnalyticsApplication"], ["kinesis_firehose_delivery_stream", "Kinesis Firehose", "kinesis", "FirehoseDeliveryStream"], ["kinesis_stream", "Kinesis", "kinesis", "Stream"], ["kinesis_stream_consumer", "Kinesis", "kinesis", "StreamConsumer"], ["kinesis_video_stream", "Kinesis Video", "kinesis", "VideoStream"], ["kinesisanalyticsv2_application", "Kinesis Analytics V2", null, null], ["kinesisanalyticsv2_application_snapshot", "Kinesis Analytics V2", null, null], ["kms_alias", "KMS", "kms", "Alia"], ["kms_ciphertext", "KMS", "kms", "Ciphertext"], ["kms_custom_key_store", "KMS", "kms", "CustomKeyStore"], ["kms_external_key", "KMS", "kms", "ExternalKey"], ["kms_grant", "KMS", "kms", "Grant"], ["kms_key", "KMS", "kms", "Key"], ["kms_public_key", "KMS", "kms", "PublicKey"], ["kms_replica_external_key", "KMS", "kms", "ReplicaExternalKey"], ["kms_replica_key", "KMS", "kms", "ReplicaKey"], ["kms_secret", "KMS", "kms", "Secret"], ["kms_secrets", "KMS", "kms", "Secret"], ["lakeformation_data_lake_settings", "Lake Formation", "lakeformation", "DataLakeSetting"], ["lakeformation_lf_tag", "Lake Formation", "lakeformation", "LfTag"], ["lakeformation_permissions", "Lake Formation", "lakeformation", "Permission"], ["lakeformation_resource", "Lake Formation", "lakeformation", "Resource"], ["lakeformation_resource_lf_tags", "Lake Formation", "lakeformation", "ResourceLfTag"], ["lambda_alias", "Lambda", "lambda", "Alia"], ["lambda_code_signing_config", "Lambda", "lambda", "CodeSigningConfig"], ["lambda_event_source_mapping", "Lambda", "lambda", "EventSourceMapping"], ["lambda_function", "Lambda", "lambda", "Function"], ["lambda_function_event_invoke_config", "Lambda", "lambda", "FunctionEventInvokeConfig"], ["lambda_function_url", "Lambda", "lambda", "FunctionUrl"], ["lambda_functions", "Lambda", "lambda", "Function"], ["lambda_invocation", "Lambda", "lambda", "Invocation"], ["lambda_layer_version", "Lambda", "lambda", "LayerVersion"], ["lambda_layer_version_permission", "Lambda", "lambda", "LayerVersionPermission"], ["lambda_permission", "Lambda", "lambda", "Permission"], ["lambda_provisioned_concurrency_config", "Lambda", "lambda", "ProvisionedConcurrencyConfig"], ["launch_configuration", "Auto Scaling", "autoscaling", "HConfiguration"], ["launch_template", "EC2", "ec2", "LaunchTemplate"], ["lb", "ELB", "elasticloadbalancing", ""], ["lb_cookie_stickiness_policy", "ELB Classic", null, null], ["lb_hosted_zone_id", "ELB", "elasticloadbalancing", "HostedZoneId"], ["lb_listener", "ELB", "elasticloadbalancing", "Listener"], ["lb_listener_certificate", "ELB", "elasticloadbalancing", "ListenerCertificate"], ["lb_listener_rule", "ELB", "elasticloadbalancing", "ListenerRule"], ["lb_ssl_negotiation_policy", "ELB Classic", null, null], ["lb_target_group", "ELB", "elasticloadbalancing", "TargetGroup"], ["lb_target_group_attachment", "ELB", "elasticloadbalancing", "TargetGroupAttachment"], ["lbs", "ELB", "elasticloadbalancing", ""], ["lex_bot", "Lex Model Building", "lex", "Bot"], ["lex_bot_alias", "Lex Model Building", "lex", "BotAlia"], ["lex_intent", "Lex Model Building", "lex", "Intent"], ["lex_slot_type", "Lex Model Building", "lex", "SlotType"], ["licensemanager_association", "License Manager", "license-manager", "Association"], ["licensemanager_grant", "License Manager", "license-manager", "Grant"], ["licensemanager_grant_accepter", "License Manager", "license-manager", "GrantAccepter"], ["licensemanager_grants", "License Manager", "license-manager", "Grant"], ["licensemanager_license_configuration", "License Manager", "license-manager", "LicenseConfiguration"], ["licensemanager_received_license", "License Manager", "license-manager", "ReceivedLicense"], ["licensemanager_received_licenses", "License Manager", "license-manager", "ReceivedLicense"], ["lightsail_bucket", "Lightsail", "lightsail", "Bucket"], ["lightsail_bucket_access_key", "Lightsail", "lightsail", "BucketAccessKey"], ["lightsail_bucket_resource_access", "Lightsail", "lightsail", "BucketResourceAcces"], ["lightsail_certificate", "Lightsail", "lightsail", "Certificate"], ["lightsail_container_service", "Lightsail", "lightsail", "ContainerService"], ["lightsail_container_service_deployment_version", "Lightsail", "lightsail", "ContainerServiceDeploymentVersion"], ["lightsail_database", "Lightsail", "lightsail", "Database"], ["lightsail_disk", "Lightsail", "lightsail", "Disk"], ["lightsail_disk_attachment", "Lightsail", "lightsail", "DiskAttachment"], ["lightsail_domain", "Lightsail", "lightsail", "Domain"], ["lightsail_domain_entry", "Lightsail", "lightsail", "DomainEntry"], ["lightsail_instance", "Lightsail", "lightsail", "Instance"], ["lightsail_instance_public_ports", "Lightsail", "lightsail", "InstancePublicPort"], ["lightsail_key_pair", "Lightsail", "lightsail", "KeyPair"], ["lightsail_lb", "Lightsail", "lightsail", "Lb"], ["lightsail_lb_attachment", "Lightsail", "lightsail", "LbAttachment"], ["lightsail_lb_certificate", "Lightsail", "lightsail", "LbCertificate"], ["lightsail_lb_certificate_attachment", "Lightsail", "lightsail", "LbCertificateAttachment"], ["lightsail_lb_https_redirection_policy", "Lightsail", "lightsail", "LbHttpsRedirectionPolicy"], ["lightsail_lb_stickiness_policy", "Lightsail", "lightsail", "LbStickinessPolicy"], ["lightsail_static_ip", "Lightsail", "lightsail", "StaticIp"], ["lightsail_static_ip_attachment", "Lightsail", "lightsail", "StaticIpAttachment"], ["load_balancer_backend_server_policy", "ELB Classic", null, null], ["load_balancer_listener_policy", "ELB Classic", null, null], ["load_balancer_policy", "ELB Classic", null, null], ["location_geofence_collection", "Location", null, null], ["location_map", "Location", null, null], ["location_place_index", "Location", null, null], ["location_route_calculator", "Location", null, null], ["location_tracker", "Location", null, null], ["location_tracker_association", "Location", null, null], ["location_tracker_associations", "Location", null, null], ["macie2_account", "Macie", "macie2", "Account"], ["macie2_classification_export_configuration", "Macie", "macie2", "ClassificationExportConfiguration"], ["macie2_classification_job", "Macie", "macie2", "ClassificationJob"], ["macie2_custom_data_identifier", "Macie", "macie2", "CustomDataIdentifier"], ["macie2_findings_filter", "Macie", "macie2", "FindingsFilter"], ["macie2_invitation_accepter", "Macie", "macie2", "InvitationAccepter"], ["macie2_member", "Macie", "macie2", "Member"], ["macie2_organization_admin_account", "Macie", "macie2", "OrganizationAdminAccount"], ["macie_member_account_association", "Macie Classic", null, null], ["macie_s3_bucket_association", "Macie Classic", null, null], ["main_route_table_association", "VPC", "ec2", "MainRouteTableAssociation"], ["media_convert_queue", "Elemental MediaConvert", null, null], ["media_package_channel", "Elemental MediaPackage", null, null], ["media_store_container", "Elemental MediaStore", null, null], ["media_store_container_policy", "Elemental MediaStore", null, null], ["medialive_channel", "Elemental MediaLive", "medialive", "Channel"], ["medialive_input", "Elemental MediaLive", "medialive", "Input"], ["medialive_input_security_group", "Elemental MediaLive", "medialive", "InputSecurityGroup"], ["medialive_multiplex", "Elemental MediaLive", "medialive", "Multiplex"], ["medialive_multiplex_program", "Elemental MediaLive", "medialive", "MultiplexProgram"], ["memorydb_acl", "MemoryDB for Redis", "memorydb", "Acl"], ["memorydb_cluster", "MemoryDB for Redis", "memorydb", "Cluster"], ["memorydb_parameter_group", "MemoryDB for Redis", "memorydb", "ParameterGroup"], ["memorydb_snapshot", "MemoryDB for Redis", "memorydb", "Snapshot"], ["memorydb_subnet_group", "MemoryDB for Redis", "memorydb", "SubnetGroup"], ["memorydb_user", "MemoryDB for Redis", "memorydb", "User"], ["mq_broker", "MQ", "mq", "Broker"], ["mq_broker_instance_type_offerings", "MQ", "mq", "BrokerInstanceTypeOffering"], ["mq_configuration", "MQ", "mq", "Configuration"], ["msk_broker_nodes", "Managed Streaming for Kafka", null, null], ["msk_cluster", "Managed Streaming for Kafka", null, null], ["msk_configuration", "Managed Streaming for Kafka", null, null], ["msk_kafka_version", "Managed Streaming for Kafka", null, null], ["msk_scram_secret_association", "Managed Streaming for Kafka", null, null], ["msk_serverless_cluster", "Managed Streaming for Kafka", null, null], ["mskconnect_connector", "Managed Streaming for Kafka Connect", null, null], ["mskconnect_custom_plugin", "Managed Streaming for Kafka Connect", null, null], ["mskconnect_worker_configuration", "Managed Streaming for Kafka Connect", null, null], ["mwaa_environment", "MWAA", null, null], ["nat_gateway", "VPC", "ec2", "NatGateway"], ["nat_gateways", "VPC", "ec2", "NatGateway"], ["neptune_cluster", "Neptune", null, null], ["neptune_cluster_endpoint", "Neptune", null, null], ["neptune_cluster_instance", "Neptune", null, null], ["neptune_cluster_parameter_group", "Neptune", null, null], ["neptune_cluster_snapshot", "Neptune", null, null], ["neptune_engine_version", "Neptune", null, null], ["neptune_event_subscription", "Neptune", null, null], ["neptune_global_cluster", "Neptune", null, null], ["neptune_orderable_db_instance", "Neptune", null, null], ["neptune_parameter_group", "Neptune", null, null], ["neptune_subnet_group", "Neptune", null, null], ["network_acl", "VPC", "ec2", "NetworkAcl"], ["network_acl_association", "VPC", "ec2", "NetworkAclAssociation"], ["network_acl_rule", "VPC", "ec2", "NetworkAclRule"], ["network_acls", "VPC", "ec2", "NetworkAcl"], ["network_interface", "VPC", "ec2", "NetworkInterface"], ["network_interface_attachment", "VPC", "ec2", "NetworkInterfaceAttachment"], ["network_interface_sg_attachment", "VPC", "ec2", "NetworkInterfaceSgAttachment"], ["network_interfaces", "VPC", "ec2", "NetworkInterface"], ["networkfirewall_firewall", "Network Firewall", "network-firewall", "Firewall"], ["networkfirewall_firewall_policy", "Network Firewall", "network-firewall", "FirewallPolicy"], ["networkfirewall_logging_configuration", "Network Firewall", "network-firewall", "LoggingConfiguration"], ["networkfirewall_resource_policy", "Network Firewall", "network-firewall", "ResourcePolicy"], ["networkfirewall_rule_group", "Network Firewall", "network-firewall", "RuleGroup"], ["networkmanager_attachment_accepter", "Network Manager", "networkmanager", "AttachmentAccepter"], ["networkmanager_connect_attachment", "Network Manager", "networkmanager", "ConnectAttachment"], ["networkmanager_connect_peer", "Network Manager", "networkmanager", "ConnectPeer"], ["networkmanager_connection", "Network Manager", "networkmanager", "Connection"], ["networkmanager_connections", "Network Manager", "networkmanager", "Connection"], ["networkmanager_core_network", "Network Manager", "networkmanager", "CoreNetwork"], ["networkmanager_core_network_policy_attachment", "Network Manager", "networkmanager", "CoreNetworkPolicyAttachment"], ["networkmanager_core_network_policy_document", "Network Manager", "networkmanager", "CoreNetworkPolicyDocument"], ["networkmanager_customer_gateway_association", "Network Manager", "networkmanager", "CustomerGatewayAssociation"], ["networkmanager_device", "Network Manager", "networkmanager", "Device"], ["networkmanager_devices", "Network Manager", "networkmanager", "Device"], ["networkmanager_global_network", "Network Manager", "networkmanager", "GlobalNetwork"], ["networkmanager_global_networks", "Network Manager", "networkmanager", "GlobalNetwork"], ["networkmanager_link", "Network Manager", "networkmanager", "Link"], ["networkmanager_link_association", "Network Manager", "networkmanager", "LinkAssociation"], ["networkmanager_links", "Network Manager", "networkmanager", "Link"], ["networkmanager_site", "Network Manager", "networkmanager", "Site"], ["networkmanager_site_to_site_vpn_attachment", "Network Manager", "networkmanager", "SiteToSiteVpnAttachment"], ["networkmanager_sites", "Network Manager", "networkmanager", "Site"], ["networkmanager_transit_gateway_connect_peer_association", "Network Manager", "networkmanager", "TransitGatewayConnectPeerAssociation"], ["networkmanager_transit_gateway_peering", "Network Manager", "networkmanager", "TransitGatewayPeering"], ["networkmanager_transit_gateway_registration", "Network Manager", "networkmanager", "TransitGatewayRegistration"], ["networkmanager_transit_gateway_route_table_attachment", "Network Manager", "networkmanager", "TransitGatewayRouteTableAttachment"], ["networkmanager_vpc_attachment", "Network Manager", "networkmanager", "VpcAttachment"], ["opensearch_domain", "OpenSearch", "es", "OpensearchDomain"], ["opensearch_domain_policy", "OpenSearch", "es", "OpensearchDomainPolicy"], ["opensearch_domain_saml_options", "OpenSearch", "es", "OpensearchDomainSamlOption"], ["opensearch_inbound_connection_accepter", "OpenSearch", "es", "OpensearchInboundConnectionAccepter"], ["opensearch_outbound_connection", "OpenSearch", "es", "OpensearchOutboundConnection"], ["opsworks_application", "OpsWorks", "opsworks", "Application"], ["opsworks_custom_layer", "OpsWorks", "opsworks", "CustomLayer"], ["opsworks_ecs_cluster_layer", "OpsWorks", "opsworks", "EcsClusterLayer"], ["opsworks_ganglia_layer", "OpsWorks", "opsworks", "GangliaLayer"], ["opsworks_haproxy_layer", "OpsWorks", "opsworks", "HaproxyLayer"], ["opsworks_instance", "OpsWorks", "opsworks", "Instance"], ["opsworks_java_app_layer", "OpsWorks", "opsworks", "JavaAppLayer"], ["opsworks_memcached_layer", "OpsWorks", "opsworks", "MemcachedLayer"], ["opsworks_mysql_layer", "OpsWorks", "opsworks", "MysqlLayer"], ["opsworks_nodejs_app_layer", "OpsWorks", "opsworks", "NodejsAppLayer"], ["opsworks_permission", "OpsWorks", "opsworks", "Permission"], ["opsworks_php_app_layer", "OpsWorks", "opsworks", "PhpAppLayer"], ["opsworks_rails_app_layer", "OpsWorks", "opsworks", "RailsAppLayer"], ["opsworks_rds_db_instance", "OpsWorks", "opsworks", "RdsDbInstance"], ["opsworks_stack", "OpsWorks", "opsworks", "Stack"], ["opsworks_static_web_layer", "OpsWorks", "opsworks", "StaticWebLayer"], ["opsworks_user_profile", "OpsWorks", "opsworks", "UserProfile"], ["organizations_account", "Organizations", "organizations", "Account"], ["organizations_delegated_administrator", "Organizations", "organizations", "DelegatedAdministrator"], ["organizations_delegated_administrators", "Organizations", "organizations", "DelegatedAdministrator"], ["organizations_delegated_services", "Organizations", "organizations", "DelegatedService"], ["organizations_organization", "Organizations", "organizations", "Organization"], ["organizations_organizational_unit", "Organizations", "organizations", "OrganizationalUnit"], ["organizations_organizational_unit_child_accounts", "Organizations", "organizations", "OrganizationalUnitChildAccount"], ["organizations_organizational_unit_descendant_accounts", "Organizations", "organizations", "OrganizationalUnitDescendantAccount"], ["organizations_organizational_units", "Organizations", "organizations", "OrganizationalUnit"], ["organizations_policy", "Organizations", "organizations", "Policy"], ["organizations_policy_attachment", "Organizations", "organizations", "PolicyAttachment"], ["organizations_resource_tags", "Organizations", "organizations", "ResourceTag"], ["outposts_asset", "Outposts", "outposts", "Asset"], ["outposts_assets", "Outposts", "outposts", "Asset"], ["outposts_outpost", "Outposts", "outposts", "Outpost"], ["outposts_outpost_instance_type", "Outposts", "outposts", "OutpostInstanceType"], ["outposts_outpost_instance_types", "Outposts", "outposts", "OutpostInstanceType"], ["outposts_outposts", "Outposts", "outposts", "Outpost"], ["outposts_site", "Outposts", "outposts", "Site"], ["outposts_sites", "Outposts", "outposts", "Site"], ["partition", "Meta Data Sources", null, null], ["pinpoint_adm_channel", "Pinpoint", null, null], ["pinpoint_apns_channel", "Pinpoint", null, null], ["pinpoint_apns_sandbox_channel", "Pinpoint", null, null], ["pinpoint_apns_voip_channel", "Pinpoint", null, null], ["pinpoint_apns_voip_sandbox_channel", "Pinpoint", null, null], ["pinpoint_app", "Pinpoint", null, null], ["pinpoint_baidu_channel", "Pinpoint", null, null], ["pinpoint_email_channel", "Pinpoint", null, null], ["pinpoint_event_stream", "Pinpoint", null, null], ["pinpoint_gcm_channel", "Pinpoint", null, null], ["pinpoint_sms_channel", "Pinpoint", null, null], ["placement_group", "EC2", "ec2", "PlacementGroup"], ["prefix_list", "VPC", "ec2", "PrefixList"], ["pricing_product", "Pricing Calculator", "pricing", "Product"], ["prometheus_alert_manager_definition", "AMP", null, null], ["prometheus_rule_group_namespace", "AMP", null, null], ["prometheus_workspace", "AMP", null, null], ["proxy_protocol_policy", "ELB Classic", null, null], ["qldb_ledger", "QLDB", "qldb", "Ledger"], ["qldb_stream", "QLDB", "qldb", "Stream"], ["quicksight_data_source", "QuickSight", "quicksight", "DataSource"], ["quicksight_group", "QuickSight", "quicksight", "Group"], ["quicksight_group_membership", "QuickSight", "quicksight", "GroupMembership"], ["quicksight_user", "QuickSight", "quicksight", "User"], ["ram_principal_association", "RAM", "ram", "PrincipalAssociation"], ["ram_resource_association", "RAM", "ram", "ResourceAssociation"], ["ram_resource_share", "RAM", "ram", "ResourceShare"], ["ram_resource_share_accepter", "RAM", "ram", "ResourceShareAccepter"], ["rds_certificate", "RDS", "rds", "Certificate"], ["rds_cluster", "RDS", "rds", "Cluster"], ["rds_cluster_activity_stream", "RDS", "rds", "ClusterActivityStream"], ["rds_cluster_endpoint", "RDS", "rds", "ClusterEndpoint"], ["rds_cluster_instance", "RDS", "rds", "ClusterInstance"], ["rds_cluster_parameter_group", "RDS", "rds", "ClusterParameterGroup"], ["rds_cluster_role_association", "RDS", "rds", "ClusterRoleAssociation"], ["rds_clusters", "RDS", "rds", "Cluster"], ["rds_engine_version", "RDS", "rds", "EngineVersion"], ["rds_export_task", "RDS", "rds", "ExportTask"], ["rds_global_cluster", "RDS", "rds", "GlobalCluster"], ["rds_orderable_db_instance", "RDS", "rds", "OrderableDbInstance"], ["rds_reserved_instance", "RDS", "rds", "ReservedInstance"], ["rds_reserved_instance_offering", "RDS", "rds", "ReservedInstanceOffering"], ["redshift_authentication_profile", "Redshift", "redshift", "AuthenticationProfile"], ["redshift_cluster", "Redshift", "redshift", "Cluster"], ["redshift_cluster_credentials", "Redshift", "redshift", "ClusterCredential"], ["redshift_cluster_iam_roles", "Redshift", "redshift", "ClusterIamRole"], ["redshift_cluster_snapshot", "Redshift", "redshift", "ClusterSnapshot"], ["redshift_endpoint_access", "Redshift", "redshift", "EndpointAcces"], ["redshift_endpoint_authorization", "Redshift", "redshift", "EndpointAuthorization"], ["redshift_event_subscription", "Redshift", "redshift", "EventSubscription"], ["redshift_hsm_client_certificate", "Redshift", "redshift", "HsmClientCertificate"], ["redshift_hsm_configuration", "Redshift", "redshift", "HsmConfiguration"], ["redshift_orderable_cluster", "Redshift", "redshift", "OrderableCluster"], ["redshift_parameter_group", "Redshift", "redshift", "ParameterGroup"], ["redshift_partner", "Redshift", "redshift", "Partner"], ["redshift_scheduled_action", "Redshift", "redshift", "ScheduledAction"], ["redshift_security_group", "Redshift", "redshift", "SecurityGroup"], ["redshift_service_account", "Redshift", "redshift", "ServiceAccount"], ["redshift_snapshot_copy_grant", "Redshift", "redshift", "SnapshotCopyGrant"], ["redshift_snapshot_schedule", "Redshift", "redshift", "SnapshotSchedule"], ["redshift_snapshot_schedule_association", "Redshift", "redshift", "SnapshotScheduleAssociation"], ["redshift_subnet_group", "Redshift", "redshift", "SubnetGroup"], ["redshift_usage_limit", "Redshift", "redshift", "UsageLimit"], ["redshiftdata_statement", "Redshift Data", "redshift-data", "Statement"], ["redshiftserverless_credentials", "Redshift Serverless", "redshift-serverless", "Credential"], ["redshiftserverless_endpoint_access", "Redshift Serverless", "redshift-serverless", "EndpointAcces"], ["redshiftserverless_namespace", "Redshift Serverless", "redshift-serverless", "Namespace"], ["redshiftserverless_resource_policy", "Redshift Serverless", "redshift-serverless", "ResourcePolicy"], ["redshiftserverless_snapshot", "Redshift Serverless", "redshift-serverless", "Snapshot"], ["redshiftserverless_usage_limit", "Redshift Serverless", "redshift-serverless", "UsageLimit"], ["redshiftserverless_workgroup", "Redshift Serverless", "redshift-serverless", "Workgroup"], ["region", "Meta Data Sources", null, null], ["regions", "Meta Data Sources", null, null], ["resourceexplorer2_index", "Resource Explorer", "resource-explorer", "2Index"], ["resourceexplorer2_view", "Resource Explorer", "resource-explorer", "2View"], ["resourcegroups_group", "Resource Groups", "resource-groups", "Group"], ["resourcegroupstaggingapi_resources", "Resource Groups Tagging", null, null], ["rolesanywhere_profile", "Roles Anywhere", "rolesanywhere", "Profile"], ["rolesanywhere_trust_anchor", "Roles Anywhere", "rolesanywhere", "TrustAnchor"], ["route", "VPC", "ec2", "Route"], ["route53_cidr_collection", "Route 53", "route53", "CidrCollection"], ["route53_cidr_location", "Route 53", "route53", "CidrLocation"], ["route53_delegation_set", "Route 53", "route53", "DelegationSet"], ["route53_health_check", "Route 53", "route53", "HealthCheck"], ["route53_hosted_zone_dnssec", "Route 53", "route53", "HostedZoneDnssec"], ["route53_key_signing_key", "Route 53", "route53", "KeySigningKey"], ["route53_query_log", "Route 53", "route53", "QueryLog"], ["route53_record", "Route 53", "route53", "Record"], ["route53_resolver_config", "Route 53 Resolver", "route53", "ResolverConfig"], ["route53_resolver_dnssec_config", "Route 53 Resolver", "route53", "ResolverDnssecConfig"], ["route53_resolver_endpoint", "Route 53 Resolver", "route53", "ResolverEndpoint"], ["route53_resolver_firewall_config", "Route 53 Resolver", "route53", "ResolverFirewallConfig"], ["route53_resolver_firewall_domain_list", "Route 53 Resolver", "route53", "ResolverFirewallDomainList"], ["route53_resolver_firewall_rule", "Route 53 Resolver", "route53", "ResolverFirewallRule"], ["route53_resolver_firewall_rule_group", "Route 53 Resolver", "route53", "ResolverFirewallRuleGroup"], ["route53_resolver_firewall_rule_group_association", "Route 53 Resolver", "route53", "ResolverFirewallRuleGroupAssociation"], ["route53_resolver_firewall_rules", "Route 53 Resolver", "route53", "ResolverFirewallRule"], ["route53_resolver_query_log_config", "Route 53 Resolver", "route53", "ResolverQueryLogConfig"], ["route53_resolver_query_log_config_association", "Route 53 Resolver", "route53", "ResolverQueryLogConfigAssociation"], ["route53_resolver_rule", "Route 53 Resolver", "route53", "ResolverRule"], ["route53_resolver_rule_association", "Route 53 Resolver", "route53", "ResolverRuleAssociation"], ["route53_resolver_rules", "Route 53 Resolver", "route53", "ResolverRule"], ["route53_traffic_policy", "Route 53", "route53", "TrafficPolicy"], ["route53_traffic_policy_document", "Route 53", "route53", "TrafficPolicyDocument"], ["route53_traffic_policy_instance", "Route 53", "route53", "TrafficPolicyInstance"], ["route53_vpc_association_authorization", "Route 53", "route53", "VpcAssociationAuthorization"], ["route53_zone", "Route 53", "route53", "Zone"], ["route53_zone_association", "Route 53", "route53", "ZoneAssociation"], ["route53domains_registered_domain", "Route 53 Domains", "route53domains", "RegisteredDomain"], ["route53recoverycontrolconfig_cluster", "Route 53 Recovery Control Config", null, null], ["route53recoverycontrolconfig_control_panel", "Route 53 Recovery Control Config", null, null], ["route53recoverycontrolconfig_routing_control", "Route 53 Recovery Control Config", null, null], ["route53recoverycontrolconfig_safety_rule", "Route 53 Recovery Control Config", null, null], ["route53recoveryreadiness_cell", "Route 53 Recovery Readiness", null, null], ["route53recoveryreadiness_readiness_check", "Route 53 Recovery Readiness", null, null], ["route53recoveryreadiness_recovery_group", "Route 53 Recovery Readiness", null, null], ["route53recoveryreadiness_resource_set", "Route 53 Recovery Readiness", null, null], ["route_table", "VPC", "ec2", "RouteTable"], ["route_table_association", "VPC", "ec2", "RouteTableAssociation"], ["route_tables", "VPC", "ec2", "RouteTable"], ["rum_app_monitor", "CloudWatch RUM", "rum", "AppMonitor"], ["rum_metrics_destination", "CloudWatch RUM", "rum", "MetricsDestination"], ["s3_access_point", "S3 Control", "s3", "AccessPoint"], ["s3_account_public_access_block", "S3 Control", "s3", "AccountPublicAccessBlock"], ["s3_bucket", "S3", "s3", "Bucket"], ["s3_bucket_accelerate_configuration", "S3", "s3", "BucketAccelerateConfiguration"], ["s3_bucket_acl", "S3", "s3", "BucketAcl"], ["s3_bucket_analytics_configuration", "S3", "s3", "BucketAnalyticsConfiguration"], ["s3_bucket_cors_configuration", "S3", "s3", "BucketCorsConfiguration"], ["s3_bucket_intelligent_tiering_configuration", "S3", "s3", "BucketIntelligentTieringConfiguration"], ["s3_bucket_inventory", "S3", "s3", "BucketInventory"], ["s3_bucket_lifecycle_configuration", "S3", "s3", "BucketLifecycleConfiguration"], ["s3_bucket_logging", "S3", "s3", "BucketLogging"], ["s3_bucket_metric", "S3", "s3", "BucketMetric"], ["s3_bucket_notification", "S3", "s3", "BucketNotification"], ["s3_bucket_object", "S3", "s3", "BucketObject"], ["s3_bucket_object_lock_configuration", "S3", "s3", "BucketObjectLockConfiguration"], ["s3_bucket_objects", "S3", "s3", "BucketObject"], ["s3_bucket_ownership_controls", "S3", "s3", "BucketOwnershipControl"], ["s3_bucket_policy", "S3", "s3", "BucketPolicy"], ["s3_bucket_public_access_block", "S3", "s3", "BucketPublicAccessBlock"], ["s3_bucket_replication_configuration", "S3", "s3", "BucketReplicationConfiguration"], ["s3_bucket_request_payment_configuration", "S3", "s3", "BucketRequestPaymentConfiguration"], ["s3_bucket_server_side_encryption_configuration", "S3", "s3", "BucketServerSideEncryptionConfiguration"], ["s3_bucket_versioning", "S3", "s3", "BucketVersioning"], ["s3_bucket_website_configuration", "S3", "s3", "BucketWebsiteConfiguration"], ["s3_object", "S3", "s3", "Object"], ["s3_object_copy", "S3", "s3", "ObjectCopy"], ["s3_objects", "S3", "s3", "Object"], ["s3control_access_point_policy", "S3 Control", null, null], ["s3control_bucket", "S3 Control", null, null], ["s3control_bucket_lifecycle_configuration", "S3 Control", null, null], ["s3control_bucket_policy", "S3 Control", null, null], ["s3control_multi_region_access_point", "S3 Control", null, null], ["s3control_multi_region_access_point_policy", "S3 Control", null, null], ["s3control_object_lambda_access_point", "S3 Control", null, null], ["s3control_object_lambda_access_point_policy", "S3 Control", null, null], ["s3control_storage_lens_configuration", "S3 Control", null, null], ["s3outposts_endpoint", "S3 on Outposts", null, null], ["sagemaker_app", "SageMaker", "sagemaker", "App"], ["sagemaker_app_image_config", "SageMaker", "sagemaker", "AppImageConfig"], ["sagemaker_code_repository", "SageMaker", "sagemaker", "CodeRepository"], ["sagemaker_device", "SageMaker", "sagemaker", "Device"], ["sagemaker_device_fleet", "SageMaker", "sagemaker", "DeviceFleet"], ["sagemaker_domain", "SageMaker", "sagemaker", "Domain"], ["sagemaker_endpoint", "SageMaker", "sagemaker", "Endpoint"], ["sagemaker_endpoint_configuration", "SageMaker", "sagemaker", "EndpointConfiguration"], ["sagemaker_feature_group", "SageMaker", "sagemaker", "FeatureGroup"], ["sagemaker_flow_definition", "SageMaker", "sagemaker", "FlowDefinition"], ["sagemaker_human_task_ui", "SageMaker", "sagemaker", "HumanTaskUi"], ["sagemaker_image", "SageMaker", "sagemaker", "Image"], ["sagemaker_image_version", "SageMaker", "sagemaker", "ImageVersion"], ["sagemaker_model", "SageMaker", "sagemaker", "Model"], ["sagemaker_model_package_group", "SageMaker", "sagemaker", "ModelPackageGroup"], ["sagemaker_model_package_group_policy", "SageMaker", "sagemaker", "ModelPackageGroupPolicy"], ["sagemaker_notebook_instance", "SageMaker", "sagemaker", "NotebookInstance"], ["sagemaker_notebook_instance_lifecycle_configuration", "SageMaker", "sagemaker", "NotebookInstanceLifecycleConfiguration"], ["sagemaker_prebuilt_ecr_image", "SageMaker", "sagemaker", "PrebuiltEcrImage"], ["sagemaker_project", "SageMaker", "sagemaker", "Project"], ["sagemaker_servicecatalog_portfolio_status", "SageMaker", "sagemaker", "ServicecatalogPortfolioStatus"], ["sagemaker_space", "SageMaker", "sagemaker", "Space"], ["sagemaker_studio_lifecycle_config", "SageMaker", "sagemaker", "StudioLifecycleConfig"], ["sagemaker_user_profile", "SageMaker", "sagemaker", "UserProfile"], ["sagemaker_workforce", "SageMaker", "sagemaker", "Workforce"], ["sagemaker_workteam", "SageMaker", "sagemaker", "Workteam"], ["scheduler_schedule", "EventBridge Scheduler", "scheduler", "Schedule"], ["scheduler_schedule_group", "EventBridge Scheduler", "scheduler", "ScheduleGroup"], ["schemas_discoverer", "EventBridge Schemas", "schemas", "Discoverer"], ["schemas_registry", "EventBridge Schemas", "schemas", "Registry"], ["schemas_registry_policy", "EventBridge Schemas", "schemas", "RegistryPolicy"], ["schemas_schema", "EventBridge Schemas", "schemas", "Schema"], ["secretsmanager_random_password", "Secrets Manager", "secretsmanager", "RandomPassword"], ["secretsmanager_secret", "Secrets Manager", "secretsmanager", "Secret"], ["secretsmanager_secret_policy", "Secrets Manager", "secretsmanager", "SecretPolicy"], ["secretsmanager_secret_rotation", "Secrets Manager", "secretsmanager", "SecretRotation"], ["secretsmanager_secret_version", "Secrets Manager", "secretsmanager", "SecretVersion"], ["secretsmanager_secrets", "Secrets Manager", "secretsmanager", "Secret"], ["security_group", "VPC", "ec2", "SecurityGroup"], ["security_group_rule", "VPC", "ec2", "SecurityGroupRule"], ["security_groups", "VPC", "ec2", "SecurityGroup"], ["securityhub_account", "Security Hub", "securityhub", "Account"], ["securityhub_action_target", "Security Hub", "securityhub", "ActionTarget"], ["securityhub_finding_aggregator", "Security Hub", "securityhub", "FindingAggregator"], ["securityhub_insight", "Security Hub", "securityhub", "Insight"], ["securityhub_invite_accepter", "Security Hub", "securityhub", "InviteAccepter"], ["securityhub_member", "Security Hub", "securityhub", "Member"], ["securityhub_organization_admin_account", "Security Hub", "securityhub", "OrganizationAdminAccount"], ["securityhub_organization_configuration", "Security Hub", "securityhub", "OrganizationConfiguration"], ["securityhub_product_subscription", "Security Hub", "securityhub", "ProductSubscription"], ["securityhub_standards_control", "Security Hub", "securityhub", "StandardsControl"], ["securityhub_standards_subscription", "Security Hub", "securityhub", "StandardsSubscription"], ["serverlessapplicationrepository_application", "Serverless Application Repository", null, null], ["serverlessapplicationrepository_cloudformation_stack", "Serverless Application Repository", null, null], ["service", "Meta Data Sources", null, null], ["service_discovery_dns_namespace", "Cloud Map", null, null], ["service_discovery_http_namespace", "Cloud Map", null, null], ["service_discovery_instance", "Cloud Map", null, null], ["service_discovery_private_dns_namespace", "Cloud Map", null, null], ["service_discovery_public_dns_namespace", "Cloud Map", null, null], ["service_discovery_service", "Cloud Map", null, null], ["servicecatalog_budget_resource_association", "Service Catalog", "servicecatalog", "BudgetResourceAssociation"], ["servicecatalog_constraint", "Service Catalog", "servicecatalog", "Constraint"], ["servicecatalog_launch_paths", "Service Catalog", "servicecatalog", "LaunchPath"], ["servicecatalog_organizations_access", "Service Catalog", "servicecatalog", "OrganizationsAcces"], ["servicecatalog_portfolio", "Service Catalog", "servicecatalog", "Portfolio"], ["servicecatalog_portfolio_constraints", "Service Catalog", "servicecatalog", "PortfolioConstraint"], ["servicecatalog_portfolio_share", "Service Catalog", "servicecatalog", "PortfolioShare"], ["servicecatalog_principal_portfolio_association", "Service Catalog", "servicecatalog", "PrincipalPortfolioAssociation"], ["servicecatalog_product", "Service Catalog", "servicecatalog", "Product"], ["servicecatalog_product_portfolio_association", "Service Catalog", "servicecatalog", "ProductPortfolioAssociation"], ["servicecatalog_provisioned_product", "Service Catalog", "servicecatalog", "ProvisionedProduct"], ["servicecatalog_provisioning_artifact", "Service Catalog", "servicecatalog", "ProvisioningArtifact"], ["servicecatalog_service_action", "Service Catalog", "servicecatalog", "ServiceAction"], ["servicecatalog_tag_option", "Service Catalog", "servicecatalog", "TagOption"], ["servicecatalog_tag_option_resource_association", "Service Catalog", "servicecatalog", "TagOptionResourceAssociation"], ["servicequotas_service", "Service Quotas", "servicequotas", "Service"], ["servicequotas_service_quota", "Service Quotas", "servicequotas", "ServiceQuotum"], ["ses_active_receipt_rule_set", "SES", "ses", "ActiveReceiptRuleSet"], ["ses_configuration_set", "SES", "ses", "ConfigurationSet"], ["ses_domain_dkim", "SES", "ses", "DomainDkim"], ["ses_domain_identity", "SES", "ses", "DomainIdentity"], ["ses_domain_identity_verification", "SES", "ses", "DomainIdentityVerification"], ["ses_domain_mail_from", "SES", "ses", "DomainMail"], ["ses_email_identity", "SES", "ses", "EmailIdentity"], ["ses_event_destination", "SES", "ses", "EventDestination"], ["ses_identity_notification_topic", "SES", "ses", "IdentityNotificationTopic"], ["ses_identity_policy", "SES", "ses", "IdentityPolicy"], ["ses_receipt_filter", "SES", "ses", "ReceiptFilter"], ["ses_receipt_rule", "SES", "ses", "ReceiptRule"], ["ses_receipt_rule_set", "SES", "ses", "ReceiptRuleSet"], ["ses_template", "SES", "ses", "Template"], ["sesv2_configuration_set", "SESv2", null, null], ["sesv2_configuration_set_event_destination", "SESv2", null, null], ["sesv2_dedicated_ip_assignment", "SESv2", null, null], ["sesv2_dedicated_ip_pool", "SESv2", null, null], ["sesv2_email_identity", "SESv2", null, null], ["sesv2_email_identity_feedback_attributes", "SESv2", null, null], ["sesv2_email_identity_mail_from_attributes", "SESv2", null, null], ["sfn_activity", "SFN", null, null], ["sfn_state_machine", "SFN", null, null], ["shield_protection", "Shield", "shield", "Protection"], ["shield_protection_group", "Shield", "shield", "ProtectionGroup"], ["shield_protection_health_check_association", "Shield", "shield", "ProtectionHealthCheckAssociation"], ["signer_signing_job", "Signer", "signer", "SigningJob"], ["signer_signing_profile", "Signer", "signer", "SigningProfile"], ["signer_signing_profile_permission", "Signer", "signer", "SigningProfilePermission"], ["simpledb_domain", "SDB", "sdb", "ImpledbDomain"], ["snapshot_create_volume_permission", "EBS", "ebs", "NapshotCreateVolumePermission"], ["sns_platform_application", "SNS", "sns", "PlatformApplication"], ["sns_sms_preferences", "SNS", "sns", "SmsPreference"], ["sns_topic", "SNS", "sns", "Topic"], ["sns_topic_policy", "SNS", "sns", "TopicPolicy"], ["sns_topic_subscription", "SNS", "sns", "TopicSubscription"], ["spot_datafeed_subscription", "EC2", "ec2", "SpotDatafeedSubscription"], ["spot_fleet_request", "EC2", "ec2", "SpotFleetRequest"], ["spot_instance_request", "EC2", "ec2", "SpotInstanceRequest"], ["sqs_queue", "SQS", "sqs", "Queue"], ["sqs_queue_policy", "SQS", "sqs", "QueuePolicy"], ["sqs_queue_redrive_allow_policy", "SQS", "sqs", "QueueRedriveAllowPolicy"], ["sqs_queue_redrive_policy", "SQS", "sqs", "QueueRedrivePolicy"], ["sqs_queues", "SQS", "sqs", "Queue"], ["ssm_activation", "SSM", "ssm", "Activation"], ["ssm_association", "SSM", "ssm", "Association"], ["ssm_default_patch_baseline", "SSM", "ssm", "DefaultPatchBaseline"], ["ssm_document", "SSM", "ssm", "Document"], ["ssm_instances", "SSM", "ssm", "Instance"], ["ssm_maintenance_window", "SSM", "ssm", "MaintenanceWindow"], ["ssm_maintenance_window_target", "SSM", "ssm", "MaintenanceWindowTarget"], ["ssm_maintenance_window_task", "SSM", "ssm", "MaintenanceWindowTask"], ["ssm_maintenance_windows", "SSM", "ssm", "MaintenanceWindow"], ["ssm_parameter", "SSM", "ssm", "Parameter"], ["ssm_parameters_by_path", "SSM", "ssm", "Parameter"], ["ssm_patch_baseline", "SSM", "ssm", "PatchBaseline"], ["ssm_patch_group", "SSM", "ssm", "PatchGroup"], ["ssm_resource_data_sync", "SSM", "ssm", "ResourceDataSync"], ["ssm_service_setting", "SSM", "ssm", "ServiceSetting"], ["ssoadmin_account_assignment", "SSO Admin", null, null], ["ssoadmin_customer_managed_policy_attachment", "SSO Admin", null, null], ["ssoadmin_instance_access_control_attributes", "SSO Admin", null, null], ["ssoadmin_instances", "SSO Admin", null, null], ["ssoadmin_managed_policy_attachment", "SSO Admin", null, null], ["ssoadmin_permission_set", "SSO Admin", null, null], ["ssoadmin_permission_set_inline_policy", "SSO Admin", null, null], ["ssoadmin_permissions_boundary_attachment", "SSO Admin", null, null], ["storagegateway_cache", "Storage Gateway", "storagegateway", "Cache"], ["storagegateway_cached_iscsi_volume", "Storage Gateway", "storagegateway", "CachedIscsiVolume"], ["storagegateway_file_system_association", "Storage Gateway", "storagegateway", "FileSystemAssociation"], ["storagegateway_gateway", "Storage Gateway", "storagegateway", "Gateway"], ["storagegateway_local_disk", "Storage Gateway", "storagegateway", "LocalDisk"], ["storagegateway_nfs_file_share", "Storage Gateway", "storagegateway", "NfsFileShare"], ["storagegateway_smb_file_share", "Storage Gateway", "storagegateway", "SmbFileShare"], ["storagegateway_stored_iscsi_volume", "Storage Gateway", "storagegateway", "StoredIscsiVolume"], ["storagegateway_tape_pool", "Storage Gateway", "storagegateway", "TapePool"], ["storagegateway_upload_buffer", "Storage Gateway", "storagegateway", "UploadBuffer"], ["storagegateway_working_storage", "Storage Gateway", "storagegateway", "WorkingStorage"], ["subnet", "VPC", "ec2", "Subnet"], ["subnet_ids", "VPC", "ec2", "SubnetId"], ["subnets", "VPC", "ec2", "Subnet"], ["swf_domain", "SWF", "swf", "Domain"], ["synthetics_canary", "CloudWatch Synthetics", "synthetics", "Canary"], ["timestreamwrite_database", "Timestream Write", null, null], ["timestreamwrite_table", "Timestream Write", null, null], ["transcribe_language_model", "Transcribe", "transcribe", "LanguageModel"], ["transcribe_medical_vocabulary", "Transcribe", "transcribe", "MedicalVocabulary"], ["transcribe_vocabulary", "Transcribe", "transcribe", "Vocabulary"], ["transcribe_vocabulary_filter", "Transcribe", "transcribe", "VocabularyFilter"], ["transfer_access", "Transfer Family", "transfer", "Acces"], ["transfer_server", "Transfer Family", "transfer", "Server"], ["transfer_ssh_key", "Transfer Family", "transfer", "SshKey"], ["transfer_tag", "Transfer Family", "transfer", "Tag"], ["transfer_user", "Transfer Family", "transfer", "User"], ["transfer_workflow", "Transfer Family", "transfer", "Workflow"], ["volume_attachment", "EBS", "ebs", "VolumeAttachment"], ["vpc", "VPC", "ec2", "Vpc"], ["vpc_dhcp_options", "VPC", "ec2", "VpcDhcpOption"], ["vpc_dhcp_options_association", "VPC", "ec2", "VpcDhcpOptionsAssociation"], ["vpc_endpoint", "VPC", "ec2", "VpcEndpoint"], ["vpc_endpoint_connection_accepter", "VPC", "ec2", "VpcEndpointConnectionAccepter"], ["vpc_endpoint_connection_notification", "VPC", "ec2", "VpcEndpointConnectionNotification"], ["vpc_endpoint_policy", "VPC", "ec2", "VpcEndpointPolicy"], ["vpc_endpoint_route_table_association", "VPC", "ec2", "VpcEndpointRouteTableAssociation"], ["vpc_endpoint_security_group_association", "VPC", "ec2", "VpcEndpointSecurityGroupAssociation"], ["vpc_endpoint_service", "VPC", "ec2", "VpcEndpointService"], ["vpc_endpoint_service_allowed_principal", "VPC", "ec2", "VpcEndpointServiceAllowedPrincipal"], ["vpc_endpoint_subnet_association", "VPC", "ec2", "VpcEndpointSubnetAssociation"], ["vpc_ipam", "VPC IPAM", null, null], ["vpc_ipam_organization_admin_account", "VPC IPAM", null, null], ["vpc_ipam_pool", "VPC IPAM", null, null], ["vpc_ipam_pool_cidr", "VPC IPAM", null, null], ["vpc_ipam_pool_cidr_allocation", "VPC IPAM", null, null], ["vpc_ipam_pool_cidrs", "VPC IPAM", null, null], ["vpc_ipam_pools", "VPC IPAM", null, null], ["vpc_ipam_preview_next_cidr", "VPC IPAM", null, null], ["vpc_ipam_resource_discovery", "VPC IPAM", null, null], ["vpc_ipam_resource_discovery_association", "VPC IPAM", null, null], ["vpc_ipam_scope", "VPC IPAM", null, null], ["vpc_ipv4_cidr_block_association", "VPC", "ec2", "VpcIpv4CidrBlockAssociation"], ["vpc_ipv6_cidr_block_association", "VPC", "ec2", "VpcIpv6CidrBlockAssociation"], ["vpc_network_performance_metric_subscription", "VPC", "ec2", "VpcNetworkPerformanceMetricSubscription"], ["vpc_peering_connection", "VPC", "ec2", "VpcPeeringConnection"], ["vpc_peering_connection_accepter", "VPC", "ec2", "VpcPeeringConnectionAccepter"], ["vpc_peering_connection_options", "VPC", "ec2", "VpcPeeringConnectionOption"], ["vpc_peering_connections", "VPC", "ec2", "VpcPeeringConnection"], ["vpc_security_group_egress_rule", "VPC", "ec2", "VpcSecurityGroupEgressRule"], ["vpc_security_group_ingress_rule", "VPC", "ec2", "VpcSecurityGroupIngressRule"], ["vpc_security_group_rule", "VPC", "ec2", "VpcSecurityGroupRule"], ["vpc_security_group_rules", "VPC", "ec2", "VpcSecurityGroupRule"], ["vpcs", "VPC", "ec2", "Vpc"], ["vpn_connection", "VPN", null, null], ["vpn_connection_route", "VPN", null, null], ["vpn_gateway", "VPN", null, null], ["vpn_gateway_attachment", "VPN", null, null], ["vpn_gateway_route_propagation", "VPN", null, null], ["waf_byte_match_set", "WAF Classic", "waf", "ByteMatchSet"], ["waf_geo_match_set", "WAF Classic", "waf", "GeoMatchSet"], ["waf_ipset", "WAF Classic", "waf", "Ipset"], ["waf_rate_based_rule", "WAF Classic", "waf", "RateBasedRule"], ["waf_regex_match_set", "WAF Classic", "waf", "RegexMatchSet"], ["waf_regex_pattern_set", "WAF Classic", "waf", "RegexPatternSet"], ["waf_rule", "WAF Classic", "waf", "Rule"], ["waf_rule_group", "WAF Classic", "waf", "RuleGroup"], ["waf_size_constraint_set", "WAF Classic", "waf", "SizeConstraintSet"], ["waf_sql_injection_match_set", "WAF Classic", "waf", "SqlInjectionMatchSet"], ["waf_subscribed_rule_group", "WAF Classic", "waf", "SubscribedRuleGroup"], ["waf_web_acl", "WAF Classic", "waf", "WebAcl"], ["waf_xss_match_set", "WAF Classic", "waf", "XssMatchSet"], ["wafregional_byte_match_set", "WAF Classic Regional", null, null], ["wafregional_geo_match_set", "WAF Classic Regional", null, null], ["wafregional_ipset", "WAF Classic Regional", null, null], ["wafregional_rate_based_rule", "WAF Classic Regional", null, null], ["wafregional_regex_match_set", "WAF Classic Regional", null, null], ["wafregional_regex_pattern_set", "WAF Classic Regional", null, null], ["wafregional_rule", "WAF Classic Regional", null, null], ["wafregional_rule_group", "WAF Classic Regional", null, null], ["wafregional_size_constraint_set", "WAF Classic Regional", null, null], ["wafregional_sql_injection_match_set", "WAF Classic Regional", null, null], ["wafregional_subscribed_rule_group", "WAF Classic Regional", null, null], ["wafregional_web_acl", "WAF Classic Regional", null, null], ["wafregional_web_acl_association", "WAF Classic Regional", null, null], ["wafregional_xss_match_set", "WAF Classic Regional", null, null], ["wafv2_ip_set", "WAF", "wafv2", "IpSet"], ["wafv2_regex_pattern_set", "WAF", "wafv2", "RegexPatternSet"], ["wafv2_rule_group", "WAF", "wafv2", "RuleGroup"], ["wafv2_web_acl", "WAF", "wafv2", "WebAcl"], ["wafv2_web_acl_association", "WAF", "wafv2", "WebAclAssociation"], ["wafv2_web_acl_logging_configuration", "WAF", "wafv2", "WebAclLoggingConfiguration"], ["worklink_fleet", "WorkLink", "worklink", "Fleet"], ["worklink_website_certificate_authority_association", "WorkLink", "worklink", "WebsiteCertificateAuthorityAssociation"], ["workspaces_bundle", "WorkSpaces", "workspaces", "Bundle"], ["workspaces_directory", "WorkSpaces", "workspaces", "Directory"], ["workspaces_image", "WorkSpaces", "workspaces", "Image"], ["workspaces_ip_group", "WorkSpaces", "workspaces", "IpGroup"], ["workspaces_workspace", "WorkSpaces", "workspaces", "Workspace"], ["xray_encryption_config", "X-Ray", "xray", "EncryptionConfig"], ["xray_group", "X-Ray", "xray", "Group"], ["xray_sampling_rule", "X-Ray", "xray", "SamplingRule"]]